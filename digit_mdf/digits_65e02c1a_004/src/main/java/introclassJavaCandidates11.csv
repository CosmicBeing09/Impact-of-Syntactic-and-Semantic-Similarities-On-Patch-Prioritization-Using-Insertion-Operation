output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64, 0.02881460133335181, insert, 1.0, 1.0, 1.0
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 0.02881460133335181, insert, 1.0, 3.0, 1.0
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66, 0.02881460133335181, insert, 1.0, 3.0, 1.0
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210, 0.02881460133335181, insert, 1.0, 1.0, 1.0
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210, 0.02236794476385615, insert, 1.0, 1.0, 0.6271186440677966
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64, 0.02236794476385615, insert, 1.0, 1.0, 0.6271186440677966
String,SIMPLE_NAME, line no: 208,String,SIMPLE_NAME, line no: 49, 0.022132442251138938, insert, 0.7692307692307693, 0.0, 1.0
format,SIMPLE_NAME, line no: 208,format,SIMPLE_NAME, line no: 64, 0.022132442251138938, insert, 1.0, 0.0, 1.0
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66, 0.021064467181622703, insert, 1.0, 1.5, 0.5517241379310345
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 0.021064467181622703, insert, 1.0, 1.5, 0.5517241379310345
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140, 0.01812558295037146, insert, 0.46149289099526064, 1.5, 0.7407407407407407
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,d1.value=(absnum.value % 10); ,EXPRESSION_STATEMENT, line no: 68, 0.01704294903508202, insert, 0.4786729857819905, 1.5, 0.6666666666666666
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 0.016208213250010393, insert, 1.0, 0.0, 0.2708333333333333
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64, 0.016208213250010393, insert, 1.0, 0.0, 0.2708333333333333
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141, 0.015797130317373335, insert, 0.46149289099526064, 1.5, 0.6060606060606061
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66, 0.015487848216676597, insert, 1.0, 0.0, 0.22916666666666666
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64, 0.015487848216676597, insert, 1.0, 0.0, 0.22916666666666666
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142, 0.015198385354602387, insert, 0.46149289099526064, 1.5, 0.5714285714285714
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,d2.value=(absnum.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 69, 0.015121975612858565, insert, 0.4786729857819905, 1.5, 0.5555555555555556
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210, 0.015042198662156538, insert, 1.0, 0.0, 0.2033898305084746
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210, 0.015042198662156538, insert, 1.0, 0.0, 0.2033898305084746
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 0.015042198662156538, insert, 1.0, 0.0, 0.2033898305084746
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66, 0.015042198662156538, insert, 1.0, 0.0, 0.2033898305084746
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143, 0.01466436957699587, insert, 0.46149289099526064, 1.5, 0.5405405405405406
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,d3.value=(absnum.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 70, 0.014616456291220813, insert, 0.4786729857819905, 1.5, 0.5263157894736842
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144, 0.01418512464837463, insert, 0.46149289099526064, 1.5, 0.5128205128205128
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,d4.value=(absnum.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 71, 0.014161488901746839, insert, 0.4786729857819905, 1.5, 0.5
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145, 0.013752635322545712, insert, 0.46149289099526064, 1.5, 0.4878048780487805
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,d5.value=(absnum.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 72, 0.01374985173984181, insert, 0.4786729857819905, 1.5, 0.47619047619047616
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,d1.value=(absnum.value % 10); ,EXPRESSION_STATEMENT, line no: 68, 0.013585196875079801, insert, 0.4786729857819905, 0.6000000000000001, 0.4666666666666667
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,d6.value=(absnum.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 73, 0.01337563613810997, insert, 0.4786729857819905, 1.5, 0.45454545454545453
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146, 0.01336037756191018, insert, 0.46149289099526064, 1.5, 0.46511627906976744
format,SIMPLE_NAME, line no: 208,output,SIMPLE_NAME, line no: 49, 0.013279465350683363, insert, 0.7692307692307693, 0.0, 0.3333333333333333
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140, 0.013069227620610874, insert, 0.46149289099526064, 1.5, 0.4482758620689655
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,d7.value=(absnum.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 74, 0.013033961023485245, insert, 0.4786729857819905, 1.5, 0.43478260869565216
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147, 0.013002987157775583, insert, 0.46149289099526064, 1.5, 0.4444444444444444
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,d8.value=(absnum.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 75, 0.012720758835079246, insert, 0.4786729857819905, 1.5, 0.4166666666666667
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148, 0.012676012958248186, insert, 0.46149289099526064, 1.5, 0.425531914893617
String,SIMPLE_NAME, line no: 208,nextInt,SIMPLE_NAME, line no: 65, 0.012647109857793678, insert, 1.0, 0.0, 0.2857142857142857
String,SIMPLE_NAME, line no: 208,println,SIMPLE_NAME, line no: 56, 0.012501181667126828, insert, 0.7692307692307693, 0.0, 0.42857142857142855
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,d9.value=(absnum.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 76, 0.012432612821745728, insert, 0.4786729857819905, 1.5, 0.4
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,d2.value=(absnum.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 69, 0.012240515479523385, insert, 0.4786729857819905, 0.6000000000000001, 0.3888888888888889
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141, 0.012129817420401286, insert, 0.46149289099526064, 1.5, 0.3939393939393939
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,d3.value=(absnum.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 70, 0.011886651954376957, insert, 0.4786729857819905, 0.6000000000000001, 0.3684210526315789
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142, 0.011740633194600171, insert, 0.46149289099526064, 1.5, 0.37142857142857144
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,d4.value=(absnum.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 71, 0.011568174781745174, insert, 0.4786729857819905, 0.6000000000000001, 0.35
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143, 0.011393522939155933, insert, 0.46149289099526064, 1.5, 0.35135135135135137
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,output+=(String.format("-%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 127, 0.01130904821288245, insert, 0.012440758293838863, 1.0, 0.6458333333333334
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,output+=(String.format("\n%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 200, 0.01130904821288245, insert, 0.012440758293838863, 1.0, 0.6458333333333334
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,output+=(String.format("\n0\n")); ,EXPRESSION_STATEMENT, line no: 205, 0.011295392003719724, insert, 0.011255924170616114, 1.0, 0.6458333333333334
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,d5.value=(absnum.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 72, 0.011280028768411656, insert, 0.4786729857819905, 0.6000000000000001, 0.3333333333333333
String,SIMPLE_NAME, line no: 208,args,SIMPLE_NAME, line no: 50, 0.01123647068134746, insert, 0.7692307692307693, 0.0, 0.3333333333333333
String,SIMPLE_NAME, line no: 208,length,SIMPLE_NAME, line no: 50, 0.01123647068134746, insert, 0.7692307692307693, 0.0, 0.3333333333333333
String,SIMPLE_NAME, line no: 208,System,SIMPLE_NAME, line no: 53, 0.01123647068134746, insert, 0.6153846153846154, 0.0, 0.3333333333333333
format,SIMPLE_NAME, line no: 208,out,SIMPLE_NAME, line no: 56, 0.01123647068134746, insert, 0.7692307692307693, 0.0, 0.3333333333333333
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208, 0.011227110957906093, insert, 0.00533175355450237, 1.0, 0.6458333333333334
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144, 0.011082013735552128, insert, 0.46149289099526064, 1.5, 0.3333333333333333
String,SIMPLE_NAME, line no: 64,String,SIMPLE_NAME, line no: 49, 0.011066221125569469, insert, 0.031323877068557916, 0.0, 1.0
format,SIMPLE_NAME, line no: 64,format,SIMPLE_NAME, line no: 64, 0.011066221125569469, insert, 1.0, 0.0, 1.0
scanner,SIMPLE_NAME, line no: 65,scanner,SIMPLE_NAME, line no: 51, 0.011066221125569469, insert, 0.010053222945002957, 1.0, 1.0
nextInt,SIMPLE_NAME, line no: 65,nextInt,SIMPLE_NAME, line no: 65, 0.011066221125569469, insert, 1.0, 0.0, 1.0
String,SIMPLE_NAME, line no: 208,output,SIMPLE_NAME, line no: 49, 0.011066221125569469, insert, 0.7692307692307693, 0.0, 0.16666666666666666
String,SIMPLE_NAME, line no: 208,IntObj,SIMPLE_NAME, line no: 60, 0.011066221125569469, insert, 1.0, 0.0, 0.16666666666666666
String,SIMPLE_NAME, line no: 208,num,SIMPLE_NAME, line no: 63, 0.011066221125569469, insert, 1.0, 0.0, 0.16666666666666666
String,SIMPLE_NAME, line no: 208,absnum,SIMPLE_NAME, line no: 63, 0.011066221125569469, insert, 1.0, 0.0, 0.16666666666666666
String,SIMPLE_NAME, line no: 208,format,SIMPLE_NAME, line no: 64, 0.011066221125569469, insert, 1.0, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 208,value,SIMPLE_NAME, line no: 7, 0.011066221125569469, insert, 0.46153846153846156, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 208,String,SIMPLE_NAME, line no: 49, 0.011066221125569469, insert, 0.7692307692307693, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 208,IntObj,SIMPLE_NAME, line no: 60, 0.011066221125569469, insert, 1.0, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 208,num,SIMPLE_NAME, line no: 63, 0.011066221125569469, insert, 1.0, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 208,absnum,SIMPLE_NAME, line no: 63, 0.011066221125569469, insert, 1.0, 0.0, 0.16666666666666666
String,SIMPLE_NAME, line no: 210,String,SIMPLE_NAME, line no: 49, 0.011066221125569469, insert, 0.031323877068557916, 0.0, 1.0
format,SIMPLE_NAME, line no: 210,format,SIMPLE_NAME, line no: 64, 0.011066221125569469, insert, 1.0, 0.0, 1.0
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,d6.value=(absnum.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 73, 0.011018077847199367, insert, 0.4786729857819905, 0.6000000000000001, 0.3181818181818182
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145, 0.010800895673763331, insert, 0.46149289099526064, 1.5, 0.3170731707317073
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,d7.value=(absnum.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 74, 0.01077890526696206, insert, 0.4786729857819905, 0.6000000000000001, 0.30434782608695654
String,SIMPLE_NAME, line no: 208,scanner,SIMPLE_NAME, line no: 51, 0.010750043379124627, insert, 0.6153846153846154, 0.0, 0.14285714285714285
format,SIMPLE_NAME, line no: 208,scanner,SIMPLE_NAME, line no: 51, 0.010750043379124627, insert, 0.6153846153846154, 0.0, 0.14285714285714285
format,SIMPLE_NAME, line no: 208,nextInt,SIMPLE_NAME, line no: 65, 0.010750043379124627, insert, 1.0, 0.0, 0.14285714285714285
format,SIMPLE_NAME, line no: 208,println,SIMPLE_NAME, line no: 56, 0.010604115188457776, insert, 0.7692307692307693, 0.0, 0.2857142857142857
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,d8.value=(absnum.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 75, 0.010559663735077862, insert, 0.4786729857819905, 0.6000000000000001, 0.2916666666666667
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146, 0.010545928129350235, insert, 0.46149289099526064, 1.5, 0.3023255813953488
"\n-2147483648\n",STRING_LITERAL, line no: 208,scanner,SIMPLE_NAME, line no: 51, 0.010415266941712442, insert, 0.6153846153846154, 0.0, 0.11764705882352941
"\n-2147483648\n",STRING_LITERAL, line no: 208,nextInt,SIMPLE_NAME, line no: 65, 0.010415266941712442, insert, 1.0, 0.0, 0.11764705882352941
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,d9.value=(absnum.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 76, 0.010357961525744398, insert, 0.4786729857819905, 0.6000000000000001, 0.28
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147, 0.010313624366662747, insert, 0.46149289099526064, 1.5, 0.28888888888888886
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,d2.value=(absnum.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 69, 0.010199481218410963, insert, 0.4786729857819905, 0.0, 0.2708333333333333
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,d3.value=(absnum.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 70, 0.010199481218410963, insert, 0.4786729857819905, 0.0, 0.2708333333333333
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,d4.value=(absnum.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 71, 0.010199481218410963, insert, 0.4786729857819905, 0.0, 0.2708333333333333
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,d5.value=(absnum.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 72, 0.010199481218410963, insert, 0.4786729857819905, 0.0, 0.2708333333333333
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,d6.value=(absnum.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 73, 0.010199481218410963, insert, 0.4786729857819905, 0.0, 0.2708333333333333
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,d7.value=(absnum.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 74, 0.010199481218410963, insert, 0.4786729857819905, 0.0, 0.2708333333333333
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,d8.value=(absnum.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 75, 0.010199481218410963, insert, 0.4786729857819905, 0.0, 0.2708333333333333
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,output+=(String.format("\n%d\n%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 195, 0.01016632897379882, insert, 0.013625592417061612, 1.0, 0.5789473684210527
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 122, 0.010120061103682822, insert, 0.013625592417061612, 1.0, 0.576271186440678
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,output+=(String.format("\n%d\n%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 195, 0.010120061103682822, insert, 0.013625592417061612, 1.0, 0.576271186440678
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148, 0.01010109113696994, insert, 0.46149289099526064, 1.5, 0.2765957446808511
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,d9.value=(absnum.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 76, 0.010012186309744178, insert, 0.4786729857819905, 0.0, 0.26
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141, 0.010001466185551436, insert, 0.46149289099526064, 0.0, 0.2708333333333333
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142, 0.010001466185551436, insert, 0.46149289099526064, 0.0, 0.2708333333333333
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143, 0.010001466185551436, insert, 0.46149289099526064, 0.0, 0.2708333333333333
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144, 0.010001466185551436, insert, 0.46149289099526064, 0.0, 0.2708333333333333
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145, 0.010001466185551436, insert, 0.46149289099526064, 0.0, 0.2708333333333333
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146, 0.010001466185551436, insert, 0.46149289099526064, 0.0, 0.2708333333333333
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147, 0.010001466185551436, insert, 0.46149289099526064, 0.0, 0.2708333333333333
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148, 0.010001466185551436, insert, 0.46149289099526064, 0.0, 0.2708333333333333
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 122, 0.00999375513641214, insert, 0.013625592417061612, 1.0, 0.5689655172413793
String,SIMPLE_NAME, line no: 208,util,SIMPLE_NAME, line no: 51, 0.009874474235123526, insert, 0.6153846153846154, 0.0, 0.3333333333333333
String,SIMPLE_NAME, line no: 208,in,SIMPLE_NAME, line no: 53, 0.009874474235123526, insert, 0.6153846153846154, 0.0, 0.3333333333333333
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,d1.value=(absnum.value % 10); ,EXPRESSION_STATEMENT, line no: 68, 0.009839298701744065, insert, 0.4786729857819905, 0.0, 0.25
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,output+=(String.format("\n%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 200, 0.009813375050452112, insert, 0.012440758293838863, 1.0, 0.559322033898305
String,SIMPLE_NAME, line no: 208,mainClass,SIMPLE_NAME, line no: 48, 0.00976097453127153, insert, 0.7692307692307693, 0.0, 0.2222222222222222
format,SIMPLE_NAME, line no: 208,mainClass,SIMPLE_NAME, line no: 48, 0.00976097453127153, insert, 0.7692307692307693, 0.0, 0.2222222222222222
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140, 0.00964128366888454, insert, 0.46149289099526064, 0.0, 0.25
"\n-2147483648\n",STRING_LITERAL, line no: 208,String,SIMPLE_NAME, line no: 49, 0.009634121921084008, insert, 0.7692307692307693, 0.0, 0.058823529411764705
"\n-2147483648\n",STRING_LITERAL, line no: 208,IntObj,SIMPLE_NAME, line no: 60, 0.009634121921084008, insert, 1.0, 0.0, 0.058823529411764705
"\n-2147483648\n",STRING_LITERAL, line no: 208,d1,SIMPLE_NAME, line no: 60, 0.009634121921084008, insert, 1.0, 0.0, 0.058823529411764705
"\n-2147483648\n",STRING_LITERAL, line no: 208,d2,SIMPLE_NAME, line no: 60, 0.009634121921084008, insert, 1.0, 0.0, 0.058823529411764705
"\n-2147483648\n",STRING_LITERAL, line no: 208,d3,SIMPLE_NAME, line no: 60, 0.009634121921084008, insert, 1.0, 0.0, 0.058823529411764705
"\n-2147483648\n",STRING_LITERAL, line no: 208,d4,SIMPLE_NAME, line no: 60, 0.009634121921084008, insert, 1.0, 0.0, 0.058823529411764705
"\n-2147483648\n",STRING_LITERAL, line no: 208,d6,SIMPLE_NAME, line no: 61, 0.009634121921084008, insert, 1.0, 0.0, 0.058823529411764705
"\n-2147483648\n",STRING_LITERAL, line no: 208,d7,SIMPLE_NAME, line no: 61, 0.009634121921084008, insert, 1.0, 0.0, 0.058823529411764705
"\n-2147483648\n",STRING_LITERAL, line no: 208,d8,SIMPLE_NAME, line no: 62, 0.009634121921084008, insert, 1.0, 0.0, 0.058823529411764705
"\n-2147483648\n",STRING_LITERAL, line no: 208,d10,SIMPLE_NAME, line no: 62, 0.009634121921084008, insert, 1.0, 0.0, 0.058823529411764705
"\n-2147483648\n",STRING_LITERAL, line no: 208,num,SIMPLE_NAME, line no: 63, 0.009634121921084008, insert, 1.0, 0.0, 0.058823529411764705
"\n-2147483648\n",STRING_LITERAL, line no: 208,absnum,SIMPLE_NAME, line no: 63, 0.009634121921084008, insert, 1.0, 0.0, 0.058823529411764705
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,output+=(String.format("-%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 127, 0.009520345206384126, insert, 0.012440758293838863, 1.0, 0.5423728813559322
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,output+=(String.format("\n0\n")); ,EXPRESSION_STATEMENT, line no: 205, 0.0095066889972214, insert, 0.011255924170616114, 1.0, 0.5423728813559322
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208, 0.00943840795140777, insert, 0.00533175355450237, 1.0, 0.5423728813559322
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,d1.value=(absnum.value % 10); ,EXPRESSION_STATEMENT, line no: 68, 0.009326496474625093, insert, 0.4786729857819905, 0.0, 0.22033898305084745
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,d2.value=(absnum.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 69, 0.009326496474625093, insert, 0.4786729857819905, 0.0, 0.22033898305084745
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,d3.value=(absnum.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 70, 0.009326496474625093, insert, 0.4786729857819905, 0.0, 0.22033898305084745
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,d4.value=(absnum.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 71, 0.009326496474625093, insert, 0.4786729857819905, 0.0, 0.22033898305084745
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,d5.value=(absnum.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 72, 0.009326496474625093, insert, 0.4786729857819905, 0.0, 0.22033898305084745
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,d6.value=(absnum.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 73, 0.009326496474625093, insert, 0.4786729857819905, 0.0, 0.22033898305084745
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,d7.value=(absnum.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 74, 0.009326496474625093, insert, 0.4786729857819905, 0.0, 0.22033898305084745
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,d8.value=(absnum.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 75, 0.009326496474625093, insert, 0.4786729857819905, 0.0, 0.22033898305084745
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,d9.value=(absnum.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 76, 0.009326496474625093, insert, 0.4786729857819905, 0.0, 0.22033898305084745
String,SIMPLE_NAME, line no: 208,Scanner,SIMPLE_NAME, line no: 51, 0.009242118742233841, insert, 0.6153846153846154, 0.0, 0.2857142857142857
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140, 0.009128481441765568, insert, 0.46149289099526064, 0.0, 0.22033898305084745
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141, 0.009128481441765568, insert, 0.46149289099526064, 0.0, 0.22033898305084745
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142, 0.009128481441765568, insert, 0.46149289099526064, 0.0, 0.22033898305084745
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143, 0.009128481441765568, insert, 0.46149289099526064, 0.0, 0.22033898305084745
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144, 0.009128481441765568, insert, 0.46149289099526064, 0.0, 0.22033898305084745
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145, 0.009128481441765568, insert, 0.46149289099526064, 0.0, 0.22033898305084745
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146, 0.009128481441765568, insert, 0.46149289099526064, 0.0, 0.22033898305084745
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147, 0.009128481441765568, insert, 0.46149289099526064, 0.0, 0.22033898305084745
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148, 0.009128481441765568, insert, 0.46149289099526064, 0.0, 0.22033898305084745
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 190, 0.009062065311682632, insert, 0.01481042654028436, 1.0, 0.5142857142857142
String,SIMPLE_NAME, line no: 208,out,SIMPLE_NAME, line no: 56, 0.009023226456233567, insert, 0.7692307692307693, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 208,args,SIMPLE_NAME, line no: 50, 0.009023226456233567, insert, 0.7692307692307693, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 208,length,SIMPLE_NAME, line no: 50, 0.009023226456233567, insert, 0.7692307692307693, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 208,System,SIMPLE_NAME, line no: 53, 0.009023226456233567, insert, 0.6153846153846154, 0.0, 0.16666666666666666
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 117, 0.008936834851159413, insert, 0.01481042654028436, 1.0, 0.5070422535211268
"\n-2147483648\n",STRING_LITERAL, line no: 208,digits_65e02c1a_004,SIMPLE_NAME, line no: 48, 0.008906739918069678, insert, 0.7692307692307693, 0.0, 0.15789473684210525
"\n-2147483648\n",STRING_LITERAL, line no: 208,println,SIMPLE_NAME, line no: 56, 0.00837227227237654, insert, 0.7692307692307693, 0.0, 0.11764705882352941
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 190, 0.008321118420253586, insert, 0.01481042654028436, 1.0, 0.4714285714285714
String,SIMPLE_NAME, line no: 208,digits_65e02c1a_004,SIMPLE_NAME, line no: 48, 0.008207820689086343, insert, 0.7692307692307693, 0.0, 0.10526315789473684
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 117, 0.008206323831440635, insert, 0.01481042654028436, 1.0, 0.4647887323943662
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 184, 0.007891396770689693, insert, 0.015995260663507108, 1.0, 0.4457831325301205
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 111, 0.007799646318939779, insert, 0.015995260663507108, 1.0, 0.44047619047619047
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,d10.value=(absnum.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000; ,EXPRESSION_STATEMENT, line no: 77, 0.007688255206858966, insert, 0.4786729857819905, 0.0, 0.12558139534883722
format,SIMPLE_NAME, line no: 208,java,SIMPLE_NAME, line no: 51, 0.007661230010009633, insert, 0.6153846153846154, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 208,util,SIMPLE_NAME, line no: 51, 0.007661230010009633, insert, 0.6153846153846154, 0.0, 0.16666666666666666
"\n-2147483648\n",STRING_LITERAL, line no: 208,mainClass,SIMPLE_NAME, line no: 48, 0.007591127251748106, insert, 0.7692307692307693, 0.0, 0.058823529411764705
"\n-2147483648\n",STRING_LITERAL, line no: 208,length,SIMPLE_NAME, line no: 50, 0.007591127251748106, insert, 0.7692307692307693, 0.0, 0.058823529411764705
format,SIMPLE_NAME, line no: 208,digits_65e02c1a_004,SIMPLE_NAME, line no: 48, 0.007508901460103008, insert, 0.7692307692307693, 0.0, 0.05263157894736842
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149, 0.007500385719350457, insert, 0.46149289099526064, 0.0, 0.1261682242990654
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,d10.value=(absnum.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000; ,EXPRESSION_STATEMENT, line no: 77, 0.007447016684068114, insert, 0.4786729857819905, 1.8461538461538463, 0.11162790697674418
format,SIMPLE_NAME, line no: 208,Scanner,SIMPLE_NAME, line no: 51, 0.00734505226356479, insert, 0.6153846153846154, 0.0, 0.14285714285714285
nextInt,SIMPLE_NAME, line no: 65,IntObj,SIMPLE_NAME, line no: 60, 0.007264235143186609, insert, 0.9982259018332348, 0.0, 0.42857142857142855
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149, 0.007096442710004402, insert, 0.46149289099526064, 1.8461538461538463, 0.102803738317757
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 184, 0.007058203479122895, insert, 0.015995260663507108, 1.0, 0.39759036144578314
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,d10.value=(absnum.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000; ,EXPRESSION_STATEMENT, line no: 77, 0.007044952479416692, insert, 0.4786729857819905, 0.0, 0.08837209302325581
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 177, 0.007041482849530581, insert, 0.017180094786729858, 1.0, 0.3958333333333333
"\n-2147483648\n",STRING_LITERAL, line no: 208,Scanner,SIMPLE_NAME, line no: 51, 0.0070102758261526045, insert, 0.6153846153846154, 0.0, 0.11764705882352941
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 111, 0.006976371995129727, insert, 0.015995260663507108, 1.0, 0.39285714285714285
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 105, 0.0069709316349257245, insert, 0.017180094786729858, 1.0, 0.3917525773195876
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 0.006919695363506098, insert, 0.03139810426540284, 0.0, 0.3793103448275862
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,d10.value=(absnum.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000; ,EXPRESSION_STATEMENT, line no: 77, 0.006884126797556124, insert, 0.4786729857819905, 0.8571428571428571, 0.07906976744186046
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149, 0.006854076904396771, insert, 0.46149289099526064, 0.0, 0.08878504672897196
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149, 0.006692499700658349, insert, 0.46149289099526064, 1.8461538461538463, 0.0794392523364486
format,SIMPLE_NAME, line no: 64,output,SIMPLE_NAME, line no: 49, 0.0066345004194903485, insert, 0.031323877068557916, 0.0, 0.3333333333333333
format,SIMPLE_NAME, line no: 210,output,SIMPLE_NAME, line no: 49, 0.0066345004194903485, insert, 0.031323877068557916, 0.0, 0.3333333333333333
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 172, 0.006397558133769339, insert, 0.018364928909952605, 1.0, 0.3577981651376147
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 100, 0.0063413227983898195, insert, 0.018364928909952605, 1.0, 0.35454545454545455
scanner,SIMPLE_NAME, line no: 65,nextInt,SIMPLE_NAME, line no: 65, 0.006323554928896839, insert, 1.0, 0.0, 0.2857142857142857
nextInt,SIMPLE_NAME, line no: 65,String,SIMPLE_NAME, line no: 49, 0.006323554928896839, insert, 0.03134240094618569, 0.0, 0.2857142857142857
nextInt,SIMPLE_NAME, line no: 65,scanner,SIMPLE_NAME, line no: 51, 0.006323554928896839, insert, 0.010053222945002957, 0.0, 0.2857142857142857
String,SIMPLE_NAME, line no: 64,nextInt,SIMPLE_NAME, line no: 65, 0.006320938800971173, insert, 0.9994089834515366, 0.0, 0.2857142857142857
String,SIMPLE_NAME, line no: 210,nextInt,SIMPLE_NAME, line no: 65, 0.006320938800971173, insert, 0.9994089834515366, 0.0, 0.2857142857142857
scanner,SIMPLE_NAME, line no: 65,value,SIMPLE_NAME, line no: 7, 0.00632093725388192, insert, 0.0035481963335304554, 0.0, 0.2857142857142857
scanner,SIMPLE_NAME, line no: 65,absnum,SIMPLE_NAME, line no: 63, 0.00632093725388192, insert, 0.9982259018332348, 0.0, 0.2857142857142857
nextInt,SIMPLE_NAME, line no: 65,output,SIMPLE_NAME, line no: 49, 0.00632093725388192, insert, 0.03134240094618569, 0.0, 0.2857142857142857
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 0.0063195473521430725, insert, 0.008293838862559242, 0.5, 0.36
String,SIMPLE_NAME, line no: 208,i,SIMPLE_NAME, line no: 7, 0.006299233563785697, insert, 0.46153846153846156, 0.0, 0.16666666666666666
"\n-2147483648\n",STRING_LITERAL, line no: 208,in,SIMPLE_NAME, line no: 53, 0.006229130805524172, insert, 0.6153846153846154, 0.0, 0.058823529411764705
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,output+=(String.format("-%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 127, 0.006174353265979932, insert, 0.012440758293838863, 0.6000000000000001, 0.3488372093023256
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 177, 0.006141026557863337, insert, 0.017180094786729858, 1.0, 0.34375
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,System.out.println(mainClass.output); ,EXPRESSION_STATEMENT, line no: 56, 0.0061248098094826, insert, 0.03139810426540284, 1.0, 0.3333333333333333
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 0.006086992614878128, insert, 0.008886255924170616, 0.5, 0.34615384615384615
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 105, 0.006079758397811752, insert, 0.017180094786729858, 1.0, 0.3402061855670103
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,output+=(String.format("\n%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 200, 0.0060372859234851285, insert, 0.012440758293838863, 0.6000000000000001, 0.3409090909090909
"Enter an integer > ",STRING_LITERAL, line no: 64,String,SIMPLE_NAME, line no: 49, 0.006007377182451998, insert, 0.031323877068557916, 0.0, 0.23809523809523808
"Enter an integer > ",STRING_LITERAL, line no: 64,scanner,SIMPLE_NAME, line no: 51, 0.006004761054526331, insert, 0.01004728132387707, 0.0, 0.23809523809523808
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 166, 0.005893773615123039, insert, 0.019549763033175356, 1.0, 0.32786885245901637
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 94, 0.005847688686960941, insert, 0.019549763033175356, 1.0, 0.3252032520325203
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,System.out.println(mainClass.output); ,EXPRESSION_STATEMENT, line no: 56, 0.005821498216499949, insert, 0.03139810426540284, 0.0, 0.3157894736842105
scanner,SIMPLE_NAME, line no: 65,Scanner,SIMPLE_NAME, line no: 44, 0.005740935261290613, insert, 5.913660555884093E-4, 0.0, 0.8571428571428571
"Enter an integer > ",STRING_LITERAL, line no: 64,nextInt,SIMPLE_NAME, line no: 65, 0.005688583308081489, insert, 0.9994089834515366, 0.0, 0.19047619047619047
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 0.005627996920142629, insert, 0.008293838862559242, 0.0, 0.32
String,SIMPLE_NAME, line no: 64,format,SIMPLE_NAME, line no: 64, 0.0055331105627847346, insert, 1.0, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 64,String,SIMPLE_NAME, line no: 49, 0.0055331105627847346, insert, 0.031323877068557916, 0.0, 0.16666666666666666
String,SIMPLE_NAME, line no: 210,format,SIMPLE_NAME, line no: 64, 0.0055331105627847346, insert, 1.0, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 210,String,SIMPLE_NAME, line no: 49, 0.0055331105627847346, insert, 0.031323877068557916, 0.0, 0.16666666666666666
String,SIMPLE_NAME, line no: 64,num,SIMPLE_NAME, line no: 63, 0.005530494434859068, insert, 0.9976359338061466, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 64,value,SIMPLE_NAME, line no: 7, 0.005530494434859068, insert, 0.0035460992907801418, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 64,num,SIMPLE_NAME, line no: 63, 0.005530494434859068, insert, 0.9976359338061466, 0.0, 0.16666666666666666
String,SIMPLE_NAME, line no: 210,num,SIMPLE_NAME, line no: 63, 0.005530494434859068, insert, 0.9976359338061466, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 210,value,SIMPLE_NAME, line no: 7, 0.005530494434859068, insert, 0.0035460992907801418, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 210,num,SIMPLE_NAME, line no: 63, 0.005530494434859068, insert, 0.9976359338061466, 0.0, 0.16666666666666666
String,SIMPLE_NAME, line no: 64,output,SIMPLE_NAME, line no: 49, 0.005527878306933401, insert, 0.031323877068557916, 0.0, 0.16666666666666666
String,SIMPLE_NAME, line no: 64,absnum,SIMPLE_NAME, line no: 63, 0.005527878306933401, insert, 0.9976359338061466, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 64,absnum,SIMPLE_NAME, line no: 63, 0.005527878306933401, insert, 0.9976359338061466, 0.0, 0.16666666666666666
String,SIMPLE_NAME, line no: 210,output,SIMPLE_NAME, line no: 49, 0.005527878306933401, insert, 0.031323877068557916, 0.0, 0.16666666666666666
String,SIMPLE_NAME, line no: 210,absnum,SIMPLE_NAME, line no: 63, 0.005527878306933401, insert, 0.9976359338061466, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 210,absnum,SIMPLE_NAME, line no: 63, 0.005527878306933401, insert, 0.9976359338061466, 0.0, 0.16666666666666666
String,SIMPLE_NAME, line no: 64,IntObj,SIMPLE_NAME, line no: 60, 0.005522646051082068, insert, 0.9976359338061466, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 64,IntObj,SIMPLE_NAME, line no: 60, 0.005522646051082068, insert, 0.9976359338061466, 0.0, 0.16666666666666666
String,SIMPLE_NAME, line no: 210,IntObj,SIMPLE_NAME, line no: 60, 0.005522646051082068, insert, 0.9976359338061466, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 210,IntObj,SIMPLE_NAME, line no: 60, 0.005522646051082068, insert, 0.9976359338061466, 0.0, 0.16666666666666666
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 0.005484485335408115, insert, 0.03139810426540284, 0.0, 0.2962962962962963
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 172, 0.00544588322734671, insert, 0.018364928909952605, 1.0, 0.30275229357798167
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 0.005422040276416164, insert, 0.008886255924170616, 0.0, 0.3076923076923077
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 100, 0.005398299482025578, insert, 0.018364928909952605, 1.0, 0.3
"Enter an integer > ",STRING_LITERAL, line no: 64,format,SIMPLE_NAME, line no: 64, 0.005375021689562313, insert, 1.0, 0.0, 0.14285714285714285
scanner,SIMPLE_NAME, line no: 65,String,SIMPLE_NAME, line no: 49, 0.005375021689562313, insert, 0.03134240094618569, 0.0, 0.14285714285714285
scanner,SIMPLE_NAME, line no: 65,format,SIMPLE_NAME, line no: 64, 0.005375021689562313, insert, 1.0, 0.0, 0.14285714285714285
nextInt,SIMPLE_NAME, line no: 65,format,SIMPLE_NAME, line no: 64, 0.005375021689562313, insert, 1.0, 0.0, 0.14285714285714285
String,SIMPLE_NAME, line no: 64,scanner,SIMPLE_NAME, line no: 51, 0.005372405561636647, insert, 0.01004728132387707, 0.0, 0.14285714285714285
format,SIMPLE_NAME, line no: 64,scanner,SIMPLE_NAME, line no: 51, 0.005372405561636647, insert, 0.01004728132387707, 0.0, 0.14285714285714285
format,SIMPLE_NAME, line no: 64,nextInt,SIMPLE_NAME, line no: 65, 0.005372405561636647, insert, 0.9994089834515366, 0.0, 0.14285714285714285
String,SIMPLE_NAME, line no: 210,scanner,SIMPLE_NAME, line no: 51, 0.005372405561636647, insert, 0.01004728132387707, 0.0, 0.14285714285714285
format,SIMPLE_NAME, line no: 210,scanner,SIMPLE_NAME, line no: 51, 0.005372405561636647, insert, 0.01004728132387707, 0.0, 0.14285714285714285
format,SIMPLE_NAME, line no: 210,nextInt,SIMPLE_NAME, line no: 65, 0.005372405561636647, insert, 0.9994089834515366, 0.0, 0.14285714285714285
scanner,SIMPLE_NAME, line no: 65,num,SIMPLE_NAME, line no: 63, 0.0053724040145473944, insert, 0.9982259018332348, 0.0, 0.14285714285714285
nextInt,SIMPLE_NAME, line no: 65,value,SIMPLE_NAME, line no: 7, 0.0053724040145473944, insert, 0.0035481963335304554, 0.0, 0.14285714285714285
nextInt,SIMPLE_NAME, line no: 65,num,SIMPLE_NAME, line no: 63, 0.0053724040145473944, insert, 0.9982259018332348, 0.0, 0.14285714285714285
nextInt,SIMPLE_NAME, line no: 65,absnum,SIMPLE_NAME, line no: 63, 0.0053724040145473944, insert, 0.9982259018332348, 0.0, 0.14285714285714285
scanner,SIMPLE_NAME, line no: 65,IntObj,SIMPLE_NAME, line no: 60, 0.005367168664517557, insert, 0.9982259018332348, 0.0, 0.14285714285714285
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,System.out.println(mainClass.output); ,EXPRESSION_STATEMENT, line no: 56, 0.005366530827025974, insert, 0.03139810426540284, 0.0, 0.2894736842105263
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 160, 0.005361579452943581, insert, 0.020734597156398103, 1.0, 0.2962962962962963
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 88, 0.005323913307409789, insert, 0.020734597156398103, 1.0, 0.29411764705882354
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,output+=(String.format("\n%d\n%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 195, 0.005313343486076409, insert, 0.013625592417061612, 0.6666666666666666, 0.2982456140350877
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208, 0.005303300858899106, insert, 1.0, 1.0, 1.0
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,scanner,SIMPLE_NAME, line no: 51, 0.005253838906719831, insert, 0.01004728132387707, 0.0, 0.125
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 122, 0.0052244418122711495, insert, 0.013625592417061612, 0.6666666666666666, 0.29310344827586204
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,output+=(String.format("\n0\n")); ,EXPRESSION_STATEMENT, line no: 205, 0.005214663634107981, insert, 0.011255924170616114, 0.0, 0.29411764705882354
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,output+=(String.format("\n0\n")); ,EXPRESSION_STATEMENT, line no: 205, 0.005214663634107981, insert, 0.011255924170616114, 0.0, 0.29411764705882354
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,value=i; ,EXPRESSION_STATEMENT, line no: 7, 0.005149908210921329, insert, 0.002369668246445498, 0.3333333333333333, 0.2962962962962963
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 0.005083928917876182, insert, 0.008886255924170616, 0.0, 0.288135593220339
"Enter an integer > ",STRING_LITERAL, line no: 64,value,SIMPLE_NAME, line no: 7, 0.005056227815191805, insert, 0.0035460992907801418, 0.0, 0.09523809523809523
"Enter an integer > ",STRING_LITERAL, line no: 64,output,SIMPLE_NAME, line no: 49, 0.005053611687266139, insert, 0.031323877068557916, 0.0, 0.09523809523809523
"Enter an integer > ",STRING_LITERAL, line no: 64,absnum,SIMPLE_NAME, line no: 63, 0.005053611687266139, insert, 0.9976359338061466, 0.0, 0.09523809523809523
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,String,SIMPLE_NAME, line no: 49, 0.005048963388541071, insert, 0.031323877068557916, 0.0, 0.09375
"Enter an integer > ",STRING_LITERAL, line no: 64,IntObj,SIMPLE_NAME, line no: 60, 0.005048379431414806, insert, 0.9976359338061466, 0.0, 0.09523809523809523
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,value,SIMPLE_NAME, line no: 7, 0.005046347260615404, insert, 0.0035460992907801418, 0.0, 0.09375
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,nextInt,SIMPLE_NAME, line no: 65, 0.005046347260615404, insert, 0.9994089834515366, 0.0, 0.09375
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,absnum,SIMPLE_NAME, line no: 63, 0.005043731132689738, insert, 0.9976359338061466, 0.0, 0.09375
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 0.004936446488142186, insert, 0.008293838862559242, 0.0, 0.28
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 155, 0.004925277923567482, insert, 0.021919431279620854, 1.0, 0.2702702702702703
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 166, 0.004901795536433879, insert, 0.019549763033175356, 1.0, 0.27049180327868855
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 83, 0.004893917936627501, insert, 0.021919431279620854, 1.0, 0.2684563758389262
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 94, 0.004863775470700148, insert, 0.019549763033175356, 1.0, 0.2682926829268293
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,format,SIMPLE_NAME, line no: 64, 0.0048414717424366425, insert, 1.0, 0.0, 0.0625
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,value=i; ,EXPRESSION_STATEMENT, line no: 7, 0.004796625742466441, insert, 0.002369668246445498, 0.3333333333333333, 0.27586206896551724
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 0.004784070969226834, insert, 0.008293838862559242, 0.0, 0.2711864406779661
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,System.out.println(mainClass.output); ,EXPRESSION_STATEMENT, line no: 56, 0.0047573372038320055, insert, 0.03139810426540284, 1.0, 0.2542372881355932
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 0.004757087937954199, insert, 0.008886255924170616, 0.0, 0.2692307692307692
"Enter an integer > ",STRING_LITERAL, line no: 64,num,SIMPLE_NAME, line no: 63, 0.004740050068746964, insert, 0.9976359338061466, 0.0, 0.047619047619047616
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,num,SIMPLE_NAME, line no: 63, 0.004631363968406549, insert, 0.9976359338061466, 0.0, 0.03125
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,output,SIMPLE_NAME, line no: 49, 0.004628747840480882, insert, 0.031323877068557916, 0.0, 0.03125
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,IntObj,SIMPLE_NAME, line no: 60, 0.0046235155846295495, insert, 0.9976359338061466, 0.0, 0.03125
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,d1,SIMPLE_NAME, line no: 60, 0.0046235155846295495, insert, 0.9976359338061466, 0.0, 0.03125
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,d2,SIMPLE_NAME, line no: 60, 0.0046235155846295495, insert, 0.9976359338061466, 0.0, 0.03125
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,d3,SIMPLE_NAME, line no: 60, 0.0046235155846295495, insert, 0.9976359338061466, 0.0, 0.03125
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,d4,SIMPLE_NAME, line no: 60, 0.0046235155846295495, insert, 0.9976359338061466, 0.0, 0.03125
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,d5,SIMPLE_NAME, line no: 61, 0.0046235155846295495, insert, 0.9976359338061466, 0.0, 0.03125
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,d6,SIMPLE_NAME, line no: 61, 0.0046235155846295495, insert, 0.9976359338061466, 0.0, 0.03125
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,d7,SIMPLE_NAME, line no: 61, 0.0046235155846295495, insert, 0.9976359338061466, 0.0, 0.03125
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,d8,SIMPLE_NAME, line no: 62, 0.0046235155846295495, insert, 0.9976359338061466, 0.0, 0.03125
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,d9,SIMPLE_NAME, line no: 62, 0.0046235155846295495, insert, 0.9976359338061466, 0.0, 0.03125
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,d10,SIMPLE_NAME, line no: 62, 0.0046235155846295495, insert, 0.9976359338061466, 0.0, 0.03125
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 190, 0.004616383963108354, insert, 0.01481042654028436, 0.7142857142857142, 0.2571428571428571
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); ,EXPRESSION_STATEMENT, line no: 132, 0.0046034069516500175, insert, 0.029028436018957347, 1.0, 0.24691358024691357
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,output+=(String.format("-%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 127, 0.00456609644737425, insert, 0.012440758293838863, 0.6000000000000001, 0.2558139534883721
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 117, 0.004553768732846744, insert, 0.01481042654028436, 0.7142857142857142, 0.2535211267605634
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,output+=(String.format("\n%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 200, 0.00450780573006424, insert, 1.0, 1.0, 0.75
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,output+=(String.format("\n0\n")); ,EXPRESSION_STATEMENT, line no: 205, 0.00450780573006424, insert, 1.0, 1.0, 0.75
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,output+=(String.format("\n%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 200, 0.004465580396211394, insert, 0.012440758293838863, 0.6000000000000001, 0.25
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 160, 0.004465125189239303, insert, 0.020734597156398103, 1.0, 0.24444444444444444
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,output+=(String.format("-%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 127, 0.004435487991079253, insert, 1.0, 1.0, 0.7272727272727273
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 88, 0.004434050619173923, insert, 0.020734597156398103, 1.0, 0.2426470588235294
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64, 0.004176349426383046, insert, 1.0, 1.0, 0.6458333333333334
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 184, 0.004142026958639098, insert, 0.015995260663507108, 0.75, 0.2289156626506024
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 155, 0.004107566264107497, insert, 0.021919431279620854, 1.0, 0.22297297297297297
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,output+=(String.format("\n%d\n%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 195, 0.004100097114145806, insert, 0.013625592417061612, 0.6666666666666666, 0.22807017543859648
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 111, 0.004094911861794546, insert, 0.015995260663507108, 0.75, 0.2261904761904762
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 83, 0.004081694274882013, insert, 0.021919431279620854, 1.0, 0.2214765100671141
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 122, 0.004032113481235902, insert, 0.013625592417061612, 0.6666666666666666, 0.22413793103448276
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208, 0.003990716759416604, insert, 0.00533175355450237, 0.0, 0.22727272727272727
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208, 0.003990716759416604, insert, 0.00533175355450237, 0.0, 0.22727272727272727
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 122, 0.003986619266344845, insert, 1.0, 1.0, 0.5862068965517241
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,output+=(String.format("\n%d\n%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 195, 0.00396351958928249, insert, 1.0, 1.0, 0.5789473684210527
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 190, 0.0038754370716793073, insert, 0.01481042654028436, 0.7142857142857142, 0.21428571428571427
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); ,EXPRESSION_STATEMENT, line no: 132, 0.003856361731896452, insert, 0.029028436018957347, 1.0, 0.2037037037037037
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210, 0.003847140284082741, insert, 1.0, 1.0, 0.5423728813559322
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 117, 0.003823257713127966, insert, 0.01481042654028436, 0.7142857142857142, 0.2112676056338028
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 117, 0.003645085660764456, insert, 1.0, 1.0, 0.4788732394366197
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 190, 0.003621396872219675, insert, 1.0, 1.0, 0.4714285714285714
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 177, 0.0036197489411950536, insert, 0.017180094786729858, 0.7777777777777777, 0.19791666666666666
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 0.0036035321928143166, insert, 0.03139810426540284, 0.0, 0.1875
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 105, 0.003584473333892626, insert, 0.017180094786729858, 0.7777777777777777, 0.1958762886597938
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 111, 0.003409264837863711, insert, 1.0, 1.0, 0.40476190476190477
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 184, 0.0033864451267668987, insert, 1.0, 1.0, 0.39759036144578314
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 184, 0.003308833667072298, insert, 0.015995260663507108, 0.75, 0.18072289156626506
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 111, 0.003271637537984494, insert, 0.015995260663507108, 0.75, 0.17857142857142858
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 105, 0.0032366537200703826, insert, 1.0, 1.0, 0.35051546391752575
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 172, 0.00322530844569391, insert, 0.018364928909952605, 0.8, 0.1743119266055046
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 177, 0.0032151261457075827, insert, 1.0, 1.0, 0.34375
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 100, 0.003197911743842349, insert, 0.018364928909952605, 0.8, 0.17272727272727273
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 100, 0.0031048415937554763, insert, 1.0, 1.0, 0.3090909090909091
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 172, 0.0030846722426991127, insert, 1.0, 1.0, 0.30275229357798167
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 94, 0.003000892193328275, insert, 1.0, 1.0, 0.2764227642276423
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 0.002999158139424099, insert, 0.03139810426540284, 0.0, 0.15254237288135594
nextInt,SIMPLE_NAME, line no: 65,length,SIMPLE_NAME, line no: 50, 0.0029921895188390335, insert, 0.03311649911295092, 0.0, 0.42857142857142855
nextInt,SIMPLE_NAME, line no: 65,println,SIMPLE_NAME, line no: 56, 0.0029895718438241146, insert, 0.03252513305736251, 0.0, 0.42857142857142855
String,SIMPLE_NAME, line no: 64,println,SIMPLE_NAME, line no: 56, 0.0029894867539152375, insert, 0.03250591016548463, 0.0, 0.42857142857142855
String,SIMPLE_NAME, line no: 210,println,SIMPLE_NAME, line no: 56, 0.0029894867539152375, insert, 0.03250591016548463, 0.0, 0.42857142857142855
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 166, 0.0029820199911514645, insert, 1.0, 1.0, 0.27049180327868855
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 88, 0.002940212387948475, insert, 1.0, 1.0, 0.25735294117647056
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 160, 0.0029227080289043962, insert, 1.0, 1.0, 0.2518518518518518
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 166, 0.0029178393790555575, insert, 0.019549763033175356, 0.8181818181818182, 0.1557377049180328
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 177, 0.002899383907861259, insert, 0.017180094786729858, 0.7777777777777777, 0.15625
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 94, 0.002895949038178561, insert, 0.019549763033175356, 0.8181818181818182, 0.15447154471544716
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 105, 0.0028715347442014472, insert, 0.017180094786729858, 0.7777777777777777, 0.15463917525773196
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 83, 0.0028687654310554896, insert, 1.0, 1.0, 0.2348993288590604
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 155, 0.002852315867353844, insert, 1.0, 1.0, 0.22972972972972974
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 0.0028444977334095203, insert, 1.0, 0.0, 0.22727272727272727
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66, 0.0028444977334095203, insert, 1.0, 0.0, 0.22727272727272727
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,d1.value=(absnum.value % 10); ,EXPRESSION_STATEMENT, line no: 68, 0.0028444977334095203, insert, 1.0, 0.0, 0.22727272727272727
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,d2.value=(absnum.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 69, 0.0028444977334095203, insert, 1.0, 0.0, 0.22727272727272727
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,d3.value=(absnum.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 70, 0.0028444977334095203, insert, 1.0, 0.0, 0.22727272727272727
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,d4.value=(absnum.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 71, 0.0028444977334095203, insert, 1.0, 0.0, 0.22727272727272727
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,d5.value=(absnum.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 72, 0.0028444977334095203, insert, 1.0, 0.0, 0.22727272727272727
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,d6.value=(absnum.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 73, 0.0028444977334095203, insert, 1.0, 0.0, 0.22727272727272727
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140, 0.0028444977334095203, insert, 1.0, 0.0, 0.22727272727272727
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141, 0.0028444977334095203, insert, 1.0, 0.0, 0.22727272727272727
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142, 0.0028444977334095203, insert, 1.0, 0.0, 0.22727272727272727
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143, 0.0028444977334095203, insert, 1.0, 0.0, 0.22727272727272727
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144, 0.0028444977334095203, insert, 1.0, 0.0, 0.22727272727272727
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145, 0.0028444977334095203, insert, 1.0, 0.0, 0.22727272727272727
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146, 0.0028444977334095203, insert, 1.0, 0.0, 0.22727272727272727
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147, 0.0028284271247461896, insert, 1.0, 0.0, 0.2222222222222222
format,SIMPLE_NAME, line no: 208,num.value,QUALIFIED_NAME, line no: 65, 0.0028284271247461896, insert, 1.0, 0.0, 0.2222222222222222
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,d7.value=(absnum.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 74, 0.002813055238198656, insert, 1.0, 0.0, 0.21739130434782608
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148, 0.0027983374744829322, insert, 1.0, 0.0, 0.2127659574468085
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); ,EXPRESSION_STATEMENT, line no: 132, 0.0027891434146802706, insert, 1.0, 1.0, 0.20987654320987653
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,d8.value=(absnum.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 75, 0.0027842329509220306, insert, 1.0, 0.0, 0.20833333333333334
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,d9.value=(absnum.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 76, 0.002757716446627535, insert, 1.0, 0.0, 0.2
String,SIMPLE_NAME, line no: 208,System.in,QUALIFIED_NAME, line no: 53, 0.0027196414661021053, insert, 0.6153846153846154, 0.0, 0.4444444444444444
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 160, 0.0026722166618307463, insert, 0.020734597156398103, 0.8333333333333333, 0.14074074074074075
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,System.out.println(mainClass.output); ,EXPRESSION_STATEMENT, line no: 56, 0.00266236416855844, insert, 0.7777777777777778, 1.0, 0.3181818181818182
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 88, 0.0026543252427021946, insert, 0.020734597156398103, 0.8333333333333333, 0.13970588235294118
format,SIMPLE_NAME, line no: 208,absnum.value,QUALIFIED_NAME, line no: 66, 0.002651650429449553, insert, 1.0, 0.0, 0.16666666666666666
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 172, 0.002590858508078824, insert, 0.018364928909952605, 0.8, 0.13761467889908258
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 100, 0.002569229532932855, insert, 0.018364928909952605, 0.8, 0.13636363636363635
format,SIMPLE_NAME, line no: 208,d1.value,QUALIFIED_NAME, line no: 68, 0.0025190679079770753, insert, 1.0, 0.0, 0.125
format,SIMPLE_NAME, line no: 208,d2.value,QUALIFIED_NAME, line no: 69, 0.0025190679079770753, insert, 1.0, 0.0, 0.125
format,SIMPLE_NAME, line no: 208,d3.value,QUALIFIED_NAME, line no: 70, 0.0025190679079770753, insert, 1.0, 0.0, 0.125
format,SIMPLE_NAME, line no: 208,d4.value,QUALIFIED_NAME, line no: 71, 0.0025190679079770753, insert, 1.0, 0.0, 0.125
format,SIMPLE_NAME, line no: 208,d5.value,QUALIFIED_NAME, line no: 72, 0.0025190679079770753, insert, 1.0, 0.0, 0.125
format,SIMPLE_NAME, line no: 208,d6.value,QUALIFIED_NAME, line no: 73, 0.0025190679079770753, insert, 1.0, 0.0, 0.125
format,SIMPLE_NAME, line no: 208,d7.value,QUALIFIED_NAME, line no: 74, 0.0025190679079770753, insert, 1.0, 0.0, 0.125
format,SIMPLE_NAME, line no: 208,d8.value,QUALIFIED_NAME, line no: 75, 0.0025190679079770753, insert, 1.0, 0.0, 0.125
format,SIMPLE_NAME, line no: 208,d9.value,QUALIFIED_NAME, line no: 76, 0.0025190679079770753, insert, 1.0, 0.0, 0.125
String,SIMPLE_NAME, line no: 208,args.length,QUALIFIED_NAME, line no: 50, 0.0024995977474811166, insert, 0.7692307692307693, 0.0, 0.2727272727272727
String,SIMPLE_NAME, line no: 208,num.value,QUALIFIED_NAME, line no: 65, 0.0024748737341529162, insert, 1.0, 0.0, 0.1111111111111111
format,SIMPLE_NAME, line no: 208,d10.value,QUALIFIED_NAME, line no: 77, 0.0024748737341529162, insert, 1.0, 0.0, 0.1111111111111111
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 155, 0.0024721429451875295, insert, 0.021919431279620854, 0.8461538461538463, 0.12837837837837837
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 83, 0.0024572469513910386, insert, 0.021919431279620854, 0.8461538461538463, 0.12751677852348994
String,SIMPLE_NAME, line no: 208,absnum.value,QUALIFIED_NAME, line no: 66, 0.0023864853865045977, insert, 1.0, 0.0, 0.08333333333333333
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); ,EXPRESSION_STATEMENT, line no: 132, 0.002362271292389321, insert, 0.029028436018957347, 0.8571428571428571, 0.11728395061728394
String,SIMPLE_NAME, line no: 64,args,SIMPLE_NAME, line no: 50, 0.00235974738895122, insert, 0.03309692671394799, 0.0, 0.3333333333333333
String,SIMPLE_NAME, line no: 64,length,SIMPLE_NAME, line no: 50, 0.00235974738895122, insert, 0.03309692671394799, 0.0, 0.3333333333333333
String,SIMPLE_NAME, line no: 64,System,SIMPLE_NAME, line no: 53, 0.00235974738895122, insert, 0.011229314420803783, 0.0, 0.3333333333333333
format,SIMPLE_NAME, line no: 64,out,SIMPLE_NAME, line no: 56, 0.00235974738895122, insert, 0.03309692671394799, 0.0, 0.3333333333333333
String,SIMPLE_NAME, line no: 210,args,SIMPLE_NAME, line no: 50, 0.00235974738895122, insert, 0.03309692671394799, 0.0, 0.3333333333333333
String,SIMPLE_NAME, line no: 210,length,SIMPLE_NAME, line no: 50, 0.00235974738895122, insert, 0.03309692671394799, 0.0, 0.3333333333333333
String,SIMPLE_NAME, line no: 210,System,SIMPLE_NAME, line no: 53, 0.00235974738895122, insert, 0.011229314420803783, 0.0, 0.3333333333333333
format,SIMPLE_NAME, line no: 210,out,SIMPLE_NAME, line no: 56, 0.00235974738895122, insert, 0.03309692671394799, 0.0, 0.3333333333333333
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149, 0.0023592254288186676, insert, 1.0, 0.0, 0.07476635514018691
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,d10.value=(absnum.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000; ,EXPRESSION_STATEMENT, line no: 77, 0.002358118893538393, insert, 1.0, 0.0, 0.07441860465116279
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 166, 0.0023509947626617514, insert, 0.019549763033175356, 0.8181818181818182, 0.12295081967213115
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 94, 0.0023337129146009643, insert, 0.019549763033175356, 0.8181818181818182, 0.12195121951219512
"\n-2147483648\n",STRING_LITERAL, line no: 208,num.value,QUALIFIED_NAME, line no: 65, 0.0023084956679913756, insert, 1.0, 0.0, 0.058823529411764705
"\n-2147483648\n",STRING_LITERAL, line no: 208,absnum.value,QUALIFIED_NAME, line no: 66, 0.0023084956679913756, insert, 1.0, 0.0, 0.058823529411764705
"\n-2147483648\n",STRING_LITERAL, line no: 208,d1.value,QUALIFIED_NAME, line no: 68, 0.0023084956679913756, insert, 1.0, 0.0, 0.058823529411764705
"\n-2147483648\n",STRING_LITERAL, line no: 208,d2.value,QUALIFIED_NAME, line no: 69, 0.0023084956679913756, insert, 1.0, 0.0, 0.058823529411764705
"\n-2147483648\n",STRING_LITERAL, line no: 208,d3.value,QUALIFIED_NAME, line no: 70, 0.0023084956679913756, insert, 1.0, 0.0, 0.058823529411764705
"\n-2147483648\n",STRING_LITERAL, line no: 208,d4.value,QUALIFIED_NAME, line no: 71, 0.0023084956679913756, insert, 1.0, 0.0, 0.058823529411764705
"\n-2147483648\n",STRING_LITERAL, line no: 208,d6.value,QUALIFIED_NAME, line no: 73, 0.0023084956679913756, insert, 1.0, 0.0, 0.058823529411764705
"\n-2147483648\n",STRING_LITERAL, line no: 208,d7.value,QUALIFIED_NAME, line no: 74, 0.0023084956679913756, insert, 1.0, 0.0, 0.058823529411764705
"\n-2147483648\n",STRING_LITERAL, line no: 208,d8.value,QUALIFIED_NAME, line no: 75, 0.0023084956679913756, insert, 1.0, 0.0, 0.058823529411764705
"\n-2147483648\n",STRING_LITERAL, line no: 208,d10.value,QUALIFIED_NAME, line no: 77, 0.0023084956679913756, insert, 1.0, 0.0, 0.058823529411764705
String,SIMPLE_NAME, line no: 208,System.out,QUALIFIED_NAME, line no: 56, 0.002268180982729156, insert, 0.7692307692307693, 0.0, 0.2
format,SIMPLE_NAME, line no: 208,System.out,QUALIFIED_NAME, line no: 56, 0.002268180982729156, insert, 0.7692307692307693, 0.0, 0.2
String,SIMPLE_NAME, line no: 64,util,SIMPLE_NAME, line no: 44, 0.0022655667836272244, insert, 0.001182033096926714, 0.0, 0.3333333333333333
String,SIMPLE_NAME, line no: 210,util,SIMPLE_NAME, line no: 44, 0.0022655667836272244, insert, 0.001182033096926714, 0.0, 0.3333333333333333
String,SIMPLE_NAME, line no: 64,in,SIMPLE_NAME, line no: 53, 0.002262950655701558, insert, 0.011229314420803783, 0.0, 0.3333333333333333
String,SIMPLE_NAME, line no: 210,in,SIMPLE_NAME, line no: 53, 0.002262950655701558, insert, 0.011229314420803783, 0.0, 0.3333333333333333
format,SIMPLE_NAME, line no: 208,mainClass.output,QUALIFIED_NAME, line no: 56, 0.002228406226287413, insert, 0.7692307692307693, 0.0, 0.1875
format,SIMPLE_NAME, line no: 208,args.length,QUALIFIED_NAME, line no: 50, 0.002210326791541166, insert, 0.7692307692307693, 0.0, 0.18181818181818182
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 160, 0.002159957082571159, insert, 0.020734597156398103, 0.8333333333333333, 0.1111111111111111
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 0.002156139995663525, insert, 0.7777777777777778, 0.0, 0.1590909090909091
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 88, 0.0021458322779959863, insert, 0.020734597156398103, 0.8333333333333333, 0.11029411764705882
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 0.002114249275747777, insert, 0.6666666666666666, 0.0, 0.22
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 0.002087324825233366, insert, 0.6666666666666666, 0.0, 0.21153846153846154
scanner,SIMPLE_NAME, line no: 65,args,SIMPLE_NAME, line no: 50, 0.0020436562795045077, insert, 0.03311649911295092, 0.0, 0.2857142857142857
scanner,SIMPLE_NAME, line no: 65,System,SIMPLE_NAME, line no: 53, 0.0020436562795045077, insert, 0.011235955056179775, 0.0, 0.2857142857142857
scanner,SIMPLE_NAME, line no: 65,println,SIMPLE_NAME, line no: 56, 0.0020410386044895884, insert, 0.03252513305736251, 0.0, 0.2857142857142857
nextInt,SIMPLE_NAME, line no: 65,exec,SIMPLE_NAME, line no: 55, 0.0020410386044895884, insert, 0.03252513305736251, 0.0, 0.2857142857142857
format,SIMPLE_NAME, line no: 64,println,SIMPLE_NAME, line no: 56, 0.0020409535145807112, insert, 0.03250591016548463, 0.0, 0.2857142857142857
format,SIMPLE_NAME, line no: 210,println,SIMPLE_NAME, line no: 56, 0.0020409535145807112, insert, 0.03250591016548463, 0.0, 0.2857142857142857
String,SIMPLE_NAME, line no: 208,mainClass.output,QUALIFIED_NAME, line no: 56, 0.0020295324440786962, insert, 0.7692307692307693, 0.0, 0.125
String,SIMPLE_NAME, line no: 208,java.util,QUALIFIED_NAME, line no: 51, 0.002012534684915558, insert, 0.6153846153846154, 0.0, 0.2222222222222222
format,SIMPLE_NAME, line no: 208,java.util,QUALIFIED_NAME, line no: 51, 0.002012534684915558, insert, 0.6153846153846154, 0.0, 0.2222222222222222
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 155, 0.0020048791397818243, insert, 0.021919431279620854, 0.8461538461538463, 0.10135135135135136
String,SIMPLE_NAME, line no: 208,true,BOOLEAN_LITERAL, line no: 211, 0.0019940411229460637, insert, 1.0, 0.0, 0.3333333333333333
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 83, 0.001993119144679332, insert, 0.021919431279620854, 0.8461538461538463, 0.10067114093959731
nextInt,SIMPLE_NAME, line no: 65,Scanner,SIMPLE_NAME, line no: 44, 0.0019468023039525097, insert, 5.913660555884093E-4, 0.0, 0.2857142857142857
String,SIMPLE_NAME, line no: 64,Scanner,SIMPLE_NAME, line no: 44, 0.001946772909256716, insert, 5.91016548463357E-4, 0.0, 0.2857142857142857
String,SIMPLE_NAME, line no: 210,Scanner,SIMPLE_NAME, line no: 44, 0.001946772909256716, insert, 5.91016548463357E-4, 0.0, 0.2857142857142857
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); ,EXPRESSION_STATEMENT, line no: 132, 0.0019353883096729983, insert, 0.029028436018957347, 0.8571428571428571, 0.09259259259259259
String,SIMPLE_NAME, line no: 208,java.util.Scanner,QUALIFIED_NAME, line no: 51, 0.0018669538770242102, insert, 0.6153846153846154, 0.0, 0.17647058823529413
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,value=i; ,EXPRESSION_STATEMENT, line no: 7, 0.00182822500165994, insert, 0.002369668246445498, 0.0, 0.10416666666666667
"\n-2147483648\n",STRING_LITERAL, line no: 208,args.length,QUALIFIED_NAME, line no: 50, 0.0018189602040929965, insert, 0.7692307692307693, 0.0, 0.058823529411764705
"\n-2147483648\n",STRING_LITERAL, line no: 208,mainClass.output,QUALIFIED_NAME, line no: 56, 0.0018189602040929965, insert, 0.7692307692307693, 0.0, 0.058823529411764705
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,value=i; ,EXPRESSION_STATEMENT, line no: 7, 0.001785491482733359, insert, 0.002369668246445498, 0.0, 0.1016949152542373
String,SIMPLE_NAME, line no: 208,mainClass.scanner,QUALIFIED_NAME, line no: 51, 0.0016797785525924768, insert, 0.6153846153846154, 0.0, 0.11764705882352941
format,SIMPLE_NAME, line no: 208,mainClass.scanner,QUALIFIED_NAME, line no: 51, 0.0016797785525924768, insert, 0.6153846153846154, 0.0, 0.11764705882352941
format,SIMPLE_NAME, line no: 208,java.util.Scanner,QUALIFIED_NAME, line no: 51, 0.0016797785525924768, insert, 0.6153846153846154, 0.0, 0.11764705882352941
"\n-2147483648\n",STRING_LITERAL, line no: 208,mainClass.scanner,QUALIFIED_NAME, line no: 51, 0.0016797785525924768, insert, 0.6153846153846154, 0.0, 0.11764705882352941
"\n-2147483648\n",STRING_LITERAL, line no: 208,java.util.Scanner,QUALIFIED_NAME, line no: 51, 0.0016797785525924768, insert, 0.6153846153846154, 0.0, 0.11764705882352941
format,SIMPLE_NAME, line no: 208,true,BOOLEAN_LITERAL, line no: 211, 0.0016617009357883866, insert, 1.0, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 208,System.in,QUALIFIED_NAME, line no: 53, 0.0016589812943222843, insert, 0.6153846153846154, 0.0, 0.1111111111111111
"Enter an integer > ",STRING_LITERAL, line no: 64,Scanner,SIMPLE_NAME, line no: 44, 0.001630595162811874, insert, 5.91016548463357E-4, 0.0, 0.23809523809523808
scanner,SIMPLE_NAME, line no: 65,mainClass,SIMPLE_NAME, line no: 48, 0.0016220859509113853, insert, 0.03134240094618569, 0.0, 0.2222222222222222
String,SIMPLE_NAME, line no: 64,mainClass,SIMPLE_NAME, line no: 48, 0.0016219993139132555, insert, 0.031323877068557916, 0.0, 0.2222222222222222
format,SIMPLE_NAME, line no: 64,mainClass,SIMPLE_NAME, line no: 48, 0.0016219993139132555, insert, 0.031323877068557916, 0.0, 0.2222222222222222
String,SIMPLE_NAME, line no: 210,mainClass,SIMPLE_NAME, line no: 48, 0.0016219993139132555, insert, 0.031323877068557916, 0.0, 0.2222222222222222
format,SIMPLE_NAME, line no: 210,mainClass,SIMPLE_NAME, line no: 48, 0.0016219993139132555, insert, 0.031323877068557916, 0.0, 0.2222222222222222
"\n-2147483648\n",STRING_LITERAL, line no: 208,System.in,QUALIFIED_NAME, line no: 53, 0.0014926032281607439, insert, 0.6153846153846154, 0.0, 0.058823529411764705
scanner,SIMPLE_NAME, line no: 65,absnum.value,QUALIFIED_NAME, line no: 66, 0.001457780497775149, insert, 0.9994086339444116, 0.0, 0.25
format,SIMPLE_NAME, line no: 64,num.value,QUALIFIED_NAME, line no: 65, 0.0014135866946592772, insert, 0.9988179669030733, 0.0, 0.2222222222222222
format,SIMPLE_NAME, line no: 210,num.value,QUALIFIED_NAME, line no: 65, 0.0014135866946592772, insert, 0.9988179669030733, 0.0, 0.2222222222222222
scanner,SIMPLE_NAME, line no: 65,num.value,QUALIFIED_NAME, line no: 65, 0.0014135863239509898, insert, 0.9994086339444116, 0.0, 0.2222222222222222
nextInt,SIMPLE_NAME, line no: 65,num.value,QUALIFIED_NAME, line no: 65, 0.0014135863239509898, insert, 0.9994086339444116, 0.0, 0.2222222222222222
"Enter an integer > ",STRING_LITERAL, line no: 64,println,SIMPLE_NAME, line no: 56, 0.0014085980216910273, insert, 0.03250591016548463, 0.0, 0.19047619047619047
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140, 0.001369306393762915, insert, 1.0, 3.0, 1.0
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141, 0.001369306393762915, insert, 1.0, 3.0, 1.0
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142, 0.001369306393762915, insert, 1.0, 3.0, 1.0
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143, 0.001369306393762915, insert, 1.0, 3.0, 1.0
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144, 0.001369306393762915, insert, 1.0, 3.0, 1.0
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145, 0.001369306393762915, insert, 1.0, 3.0, 1.0
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146, 0.001369306393762915, insert, 1.0, 3.0, 1.0
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147, 0.001369306393762915, insert, 1.0, 3.0, 1.0
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148, 0.001369306393762915, insert, 1.0, 3.0, 1.0
nextInt,SIMPLE_NAME, line no: 65,absnum.value,QUALIFIED_NAME, line no: 66, 0.0013251979763026713, insert, 0.9994086339444116, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 64,absnum.value,QUALIFIED_NAME, line no: 66, 0.0013245714792971407, insert, 0.9988179669030733, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 210,absnum.value,QUALIFIED_NAME, line no: 66, 0.0013245714792971407, insert, 0.9988179669030733, 0.0, 0.16666666666666666
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,d9.value=(absnum.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 76, 0.0013193082537575334, insert, 0.9987163029525032, 1.5, 0.94
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,d8.value=(absnum.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 75, 0.0013172542941668889, insert, 0.9987163029525032, 1.5, 0.9375
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148, 0.0013168648722996547, insert, 1.0, 1.5, 0.9361702127659575
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147, 0.0013168648722996547, insert, 1.0, 1.5, 0.9361702127659575
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,d7.value=(absnum.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 74, 0.0013150217293944496, insert, 0.9987163029525032, 1.5, 0.9347826086956522
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147, 0.0013145341380123984, insert, 1.0, 1.5, 0.9333333333333333
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146, 0.0013145341380123984, insert, 1.0, 1.5, 0.9333333333333333
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,d6.value=(absnum.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 73, 0.0013125862041881518, insert, 0.9987163029525032, 1.5, 0.9318181818181818
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146, 0.0013119865912333047, insert, 1.0, 1.5, 0.9302325581395349
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145, 0.0013119865912333047, insert, 1.0, 1.5, 0.9302325581395349
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,d5.value=(absnum.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 72, 0.001309918724200302, insert, 0.9987163029525032, 1.5, 0.9285714285714286
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145, 0.0013091905033050311, insert, 1.0, 1.5, 0.926829268292683
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144, 0.0013091905033050311, insert, 1.0, 1.5, 0.926829268292683
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,absnum.value,QUALIFIED_NAME, line no: 66, 0.001307998664113081, insert, 0.9988179669030733, 0.0, 0.15625
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,d4.value=(absnum.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 71, 0.0013069844962136673, insert, 0.9987163029525032, 1.5, 0.925
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144, 0.0013061076371277038, insert, 1.0, 1.5, 0.9230769230769231
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143, 0.0013061076371277038, insert, 1.0, 1.5, 0.9230769230769231
output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208,value=i; ,EXPRESSION_STATEMENT, line no: 7, 0.0013043977365070024, insert, 0.4444444444444444, 0.0, 0.11363636363636363
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,d3.value=(absnum.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 70, 0.0013037414021231759, insert, 0.9987163029525032, 1.5, 0.9210526315789473
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143, 0.001302691488120395, insert, 1.0, 1.5, 0.918918918918919
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142, 0.001302691488120395, insert, 1.0, 1.5, 0.918918918918919
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,d2.value=(absnum.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 69, 0.0013001379642448526, insert, 0.9987163029525032, 1.5, 0.9166666666666666
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,d8.value=(absnum.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 75, 0.0013001379642448526, insert, 0.9987163029525032, 0.6000000000000001, 0.9166666666666666
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142, 0.0012988849220836793, insert, 1.0, 1.5, 0.9142857142857143
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141, 0.0012988849220836793, insert, 1.0, 1.5, 0.9142857142857143
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,d7.value=(absnum.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 74, 0.0012971612112149331, insert, 0.9987163029525032, 0.6000000000000001, 0.9130434782608695
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,d6.value=(absnum.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 73, 0.0012939138442732028, insert, 0.9987163029525032, 0.6000000000000001, 0.9090909090909091
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,d5.value=(absnum.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 72, 0.0012903572042894033, insert, 0.9987163029525032, 0.6000000000000001, 0.9047619047619048
"Enter an integer > ",STRING_LITERAL, line no: 64,num.value,QUALIFIED_NAME, line no: 65, 0.0012873176265902507, insert, 0.9988179669030733, 0.0, 0.14285714285714285
"Enter an integer > ",STRING_LITERAL, line no: 64,absnum.value,QUALIFIED_NAME, line no: 66, 0.0012866907588764329, insert, 0.9988179669030733, 0.0, 0.14285714285714285
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,d1.value=(absnum.value % 10); ,EXPRESSION_STATEMENT, line no: 68, 0.0012864449003072234, insert, 0.9987163029525032, 1.5, 0.9
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,d4.value=(absnum.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 71, 0.0012864449003072234, insert, 0.9987163029525032, 0.6000000000000001, 0.9
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,d3.value=(absnum.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 70, 0.0012821207748532355, insert, 0.9987163029525032, 0.6000000000000001, 0.8947368421052632
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148, 0.001281903857990814, insert, 1.0, 1.5, 0.8936170212765957
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146, 0.001281903857990814, insert, 1.0, 1.5, 0.8936170212765957
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,d7.value=(absnum.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 74, 0.0012812007481608975, insert, 0.9987163029525032, 0.6000000000000001, 0.8936170212765957
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147, 0.0012780193008453875, insert, 1.0, 1.5, 0.8888888888888888
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145, 0.0012780193008453875, insert, 1.0, 1.5, 0.8888888888888888
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,d2.value=(absnum.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 69, 0.0012773161910154707, insert, 0.9987163029525032, 0.6000000000000001, 0.8888888888888888
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,d6.value=(absnum.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 73, 0.0012773161910154707, insert, 0.9987163029525032, 0.6000000000000001, 0.8888888888888888
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146, 0.0012737733895468977, insert, 1.0, 1.5, 0.8837209302325582
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144, 0.0012737733895468977, insert, 1.0, 1.5, 0.8837209302325582
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,d5.value=(absnum.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 72, 0.001273070279716981, insert, 0.9987163029525032, 0.6000000000000001, 0.8837209302325582
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,d9.value=(absnum.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 76, 0.0012700132235820684, insert, 0.9987163029525032, 0.6000000000000001, 0.88
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145, 0.0012691132429997751, insert, 1.0, 1.5, 0.8780487804878049
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143, 0.0012691132429997751, insert, 1.0, 1.5, 0.8780487804878049
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,d4.value=(absnum.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 71, 0.0012684101331698582, insert, 0.9987163029525032, 0.6000000000000001, 0.8780487804878049
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,d8.value=(absnum.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 75, 0.0012659053044007799, insert, 0.9987163029525032, 0.6000000000000001, 0.875
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144, 0.0012639751327042294, insert, 1.0, 1.5, 0.8717948717948718
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142, 0.0012639751327042294, insert, 1.0, 1.5, 0.8717948717948718
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,d3.value=(absnum.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 70, 0.0012632720228743126, insert, 0.9987163029525032, 0.6000000000000001, 0.8717948717948718
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,d7.value=(absnum.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 74, 0.0012614401748559008, insert, 0.9987163029525032, 0.6000000000000001, 0.8695652173913043
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (true) return; ,IF_STATEMENT, line no: 211, 0.001259625390210243, insert, 1.0, 0.0, 0.27586206896551724
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143, 0.0012582815510253816, insert, 1.0, 1.5, 0.8648648648648649
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141, 0.0012582815510253816, insert, 1.0, 1.5, 0.8648648648648649
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,d2.value=(absnum.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 69, 0.0012575784411954646, insert, 0.9987163029525032, 0.6000000000000001, 0.8648648648648649
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,d6.value=(absnum.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 73, 0.0012565691244433054, insert, 0.9987163029525032, 0.6000000000000001, 0.8636363636363636
String,SIMPLE_NAME, line no: 64,out,SIMPLE_NAME, line no: 56, 0.0012531252763942733, insert, 0.03309692671394799, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 64,args,SIMPLE_NAME, line no: 50, 0.0012531252763942733, insert, 0.03309692671394799, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 64,length,SIMPLE_NAME, line no: 50, 0.0012531252763942733, insert, 0.03309692671394799, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 64,System,SIMPLE_NAME, line no: 53, 0.0012531252763942733, insert, 0.011229314420803783, 0.0, 0.16666666666666666
String,SIMPLE_NAME, line no: 210,out,SIMPLE_NAME, line no: 56, 0.0012531252763942733, insert, 0.03309692671394799, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 210,args,SIMPLE_NAME, line no: 50, 0.0012531252763942733, insert, 0.03309692671394799, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 210,length,SIMPLE_NAME, line no: 50, 0.0012531252763942733, insert, 0.03309692671394799, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 210,System,SIMPLE_NAME, line no: 53, 0.0012531252763942733, insert, 0.011229314420803783, 0.0, 0.16666666666666666
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,d5.value=(absnum.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 72, 0.0012512341644676055, insert, 0.9987163029525032, 0.6000000000000001, 0.8571428571428571
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148, 0.0012469428436819737, insert, 1.0, 1.5, 0.851063829787234
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145, 0.0012469428436819737, insert, 1.0, 1.5, 0.851063829787234
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,d6.value=(absnum.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 73, 0.0012462397338520571, insert, 0.9987163029525032, 0.6000000000000001, 0.851063829787234
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,d4.value=(absnum.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 71, 0.001245365708494336, insert, 0.9987163029525032, 0.6000000000000001, 0.85
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147, 0.0012415044636783763, insert, 1.0, 1.5, 0.8444444444444444
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144, 0.0012415044636783763, insert, 1.0, 1.5, 0.8444444444444444
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,d5.value=(absnum.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 72, 0.0012408013538484594, insert, 0.9987163029525032, 0.6000000000000001, 0.8444444444444444
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,d3.value=(absnum.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 70, 0.0012388795203133536, insert, 0.9987163029525032, 0.6000000000000001, 0.8421052631578947
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,d9.value=(absnum.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 76, 0.0012371498701317584, insert, 0.9987163029525032, 0.6000000000000001, 0.84
String,SIMPLE_NAME, line no: 64,num.value,QUALIFIED_NAME, line no: 65, 0.0012368099993626401, insert, 0.9988179669030733, 0.0, 0.1111111111111111
String,SIMPLE_NAME, line no: 210,num.value,QUALIFIED_NAME, line no: 65, 0.0012368099993626401, insert, 0.9988179669030733, 0.0, 0.1111111111111111
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146, 0.001235560187860491, insert, 1.0, 1.5, 0.8372093023255814
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143, 0.001235560187860491, insert, 1.0, 1.5, 0.8372093023255814
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,d4.value=(absnum.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 71, 0.001234857078030574, insert, 0.9987163029525032, 0.6000000000000001, 0.8372093023255814
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,d8.value=(absnum.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 75, 0.0012316726445567067, insert, 0.9987163029525032, 0.6000000000000001, 0.8333333333333334
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145, 0.0012290359826945187, insert, 1.0, 1.5, 0.8292682926829268
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142, 0.0012290359826945187, insert, 1.0, 1.5, 0.8292682926829268
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,d3.value=(absnum.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 70, 0.0012283328728646022, insert, 0.9987163029525032, 0.6000000000000001, 0.8292682926829268
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,d7.value=(absnum.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 74, 0.001225719138496868, insert, 0.9987163029525032, 0.6000000000000001, 0.8260869565217391
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144, 0.001221842628280755, insert, 1.0, 1.5, 0.8205128205128205
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141, 0.001221842628280755, insert, 1.0, 1.5, 0.8205128205128205
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,d2.value=(absnum.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 69, 0.0012211395184508382, insert, 0.9987163029525032, 0.6000000000000001, 0.8205128205128205
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,d6.value=(absnum.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 73, 0.0012192244046134075, insert, 0.9987163029525032, 0.6000000000000001, 0.8181818181818182
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,d5.value=(absnum.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 72, 0.001212111124645808, insert, 0.9987163029525032, 0.6000000000000001, 0.8095238095238095
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148, 0.0012119818293731333, insert, 1.0, 1.5, 0.8085106382978723
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144, 0.0012119818293731333, insert, 1.0, 1.5, 0.8085106382978723
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,d5.value=(absnum.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 72, 0.0012112787195432166, insert, 0.9987163029525032, 0.6000000000000001, 0.8085106382978723
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,num.value,QUALIFIED_NAME, line no: 65, 0.0012091886407225407, insert, 0.9988179669030733, 0.0, 0.09375
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147, 0.0012049896265113652, insert, 1.0, 1.5, 0.8
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143, 0.0012049896265113652, insert, 1.0, 1.5, 0.8
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,d4.value=(absnum.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 71, 0.0012042865166814484, insert, 0.9987163029525032, 0.6000000000000001, 0.8
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,d9.value=(absnum.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 76, 0.0012042865166814484, insert, 0.9987163029525032, 0.6000000000000001, 0.8
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,d4.value=(absnum.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 71, 0.0012042865166814484, insert, 0.9987163029525032, 0.6000000000000001, 0.8
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,d8.value=(absnum.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 75, 0.001197439984712634, insert, 0.9987163029525032, 0.6000000000000001, 0.7916666666666666
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146, 0.001197346986174084, insert, 1.0, 1.5, 0.7906976744186046
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142, 0.001197346986174084, insert, 1.0, 1.5, 0.7906976744186046
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,d3.value=(absnum.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 70, 0.0011966438763441672, insert, 0.9987163029525032, 0.6000000000000001, 0.7906976744186046
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141, 0.0011950310345567258, insert, 1.0, 1.5, 0.7878787878787878
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140, 0.0011950310345567258, insert, 1.0, 1.5, 0.7878787878787878
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,d1.value=(absnum.value % 10); ,EXPRESSION_STATEMENT, line no: 68, 0.001194327924726809, insert, 0.9987163029525032, 0.6000000000000001, 0.7878787878787878
String,SIMPLE_NAME, line no: 64,absnum.value,QUALIFIED_NAME, line no: 66, 0.001191988957824663, insert, 0.9988179669030733, 0.0, 0.08333333333333333
String,SIMPLE_NAME, line no: 210,absnum.value,QUALIFIED_NAME, line no: 66, 0.001191988957824663, insert, 0.9988179669030733, 0.0, 0.08333333333333333
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,d7.value=(absnum.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 74, 0.0011899981021378356, insert, 0.9987163029525032, 0.6000000000000001, 0.782608695652174
scanner,SIMPLE_NAME, line no: 65,digits_65e02c1a_004,SIMPLE_NAME, line no: 48, 0.0011897332942806206, insert, 0.03134240094618569, 0.0, 0.15789473684210525
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145, 0.001188958722389263, insert, 1.0, 1.5, 0.7804878048780488
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141, 0.001188958722389263, insert, 1.0, 1.5, 0.7804878048780488
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,d2.value=(absnum.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 69, 0.001188255612559346, insert, 0.9987163029525032, 0.6000000000000001, 0.7804878048780488
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,if (true) return; ,IF_STATEMENT, line no: 211, 0.0011879393923933997, insert, 1.0, 0.0, 0.2222222222222222
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,d6.value=(absnum.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 73, 0.0011818796847835099, insert, 0.9987163029525032, 0.6000000000000001, 0.7727272727272727
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,digits_65e02c1a_004,SIMPLE_NAME, line no: 48, 0.001178729138508131, insert, 0.031323877068557916, 0.0, 0.15625
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148, 0.001177020815064293, insert, 1.0, 1.5, 0.7659574468085106
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143, 0.001177020815064293, insert, 1.0, 1.5, 0.7659574468085106
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,d4.value=(absnum.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 71, 0.0011763177052343762, insert, 0.9987163029525032, 0.6000000000000001, 0.7659574468085106
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,d5.value=(absnum.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 72, 0.0011729880848240103, insert, 0.9987163029525032, 0.6000000000000001, 0.7619047619047619
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,d9.value=(absnum.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 76, 0.0011714231632311385, insert, 0.9987163029525032, 0.6000000000000001, 0.76
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,if (true) return; ,IF_STATEMENT, line no: 211, 0.001169377839387253, insert, 1.0, 0.0, 0.20833333333333334
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147, 0.001168474789344354, insert, 1.0, 1.5, 0.7555555555555555
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142, 0.001168474789344354, insert, 1.0, 1.5, 0.7555555555555555
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,d3.value=(absnum.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 70, 0.0011677716795144375, insert, 0.9987163029525032, 0.6000000000000001, 0.7555555555555555
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,d8.value=(absnum.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 75, 0.001163207324868561, insert, 0.9987163029525032, 0.6000000000000001, 0.75
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146, 0.001159133784487677, insert, 1.0, 1.5, 0.7441860465116279
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141, 0.001159133784487677, insert, 1.0, 1.5, 0.7441860465116279
format,SIMPLE_NAME, line no: 64,java,SIMPLE_NAME, line no: 44, 0.0011589446710702775, insert, 0.001182033096926714, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 64,util,SIMPLE_NAME, line no: 44, 0.0011589446710702775, insert, 0.001182033096926714, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 210,java,SIMPLE_NAME, line no: 44, 0.0011589446710702775, insert, 0.001182033096926714, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 210,util,SIMPLE_NAME, line no: 44, 0.0011589446710702775, insert, 0.001182033096926714, 0.0, 0.16666666666666666
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,d2.value=(absnum.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 69, 0.0011584306746577602, insert, 0.9987163029525032, 0.6000000000000001, 0.7441860465116279
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142, 0.0011580419787252084, insert, 1.0, 1.5, 0.7428571428571429
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140, 0.0011580419787252084, insert, 1.0, 1.5, 0.7428571428571429
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,d1.value=(absnum.value % 10); ,EXPRESSION_STATEMENT, line no: 68, 0.0011573388688952914, insert, 0.9987163029525032, 0.6000000000000001, 0.7428571428571429
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66, 0.0011563031769553506, insert, 1.0, 1.5, 0.7407407407407407
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,d7.value=(absnum.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 74, 0.001154277065778803, insert, 0.9987163029525032, 0.6000000000000001, 0.7391304347826086
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,d6.value=(absnum.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 73, 0.0011445349649536122, insert, 0.9987163029525032, 0.6000000000000001, 0.7272727272727273
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148, 0.0011420598007554528, insert, 1.0, 1.5, 0.723404255319149
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142, 0.0011420598007554528, insert, 1.0, 1.5, 0.723404255319149
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,d3.value=(absnum.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 70, 0.0011413566909255358, insert, 0.9987163029525032, 0.6000000000000001, 0.723404255319149
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,d2.value=(absnum.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 69, 0.001140385551639179, insert, 0.9987163029525032, 0.6000000000000001, 0.7222222222222222
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,d9.value=(absnum.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 76, 0.0011385598097808287, insert, 0.9987163029525032, 0.6000000000000001, 0.72
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147, 0.0011319599521773431, insert, 1.0, 1.5, 0.7111111111111111
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141, 0.0011319599521773431, insert, 1.0, 1.5, 0.7111111111111111
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,d2.value=(absnum.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 69, 0.0011312568423474264, insert, 0.9987163029525032, 0.6000000000000001, 0.7111111111111111
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,d8.value=(absnum.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 75, 0.0011289746650244882, insert, 0.9987163029525032, 0.6000000000000001, 0.7083333333333334
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143, 0.0011250517397403412, insert, 1.0, 1.5, 0.7027027027027027
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140, 0.0011250517397403412, insert, 1.0, 1.5, 0.7027027027027027
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,d1.value=(absnum.value % 10); ,EXPRESSION_STATEMENT, line no: 68, 0.0011243486299104244, insert, 0.9987163029525032, 0.6000000000000001, 0.7027027027027027
String,SIMPLE_NAME, line no: 64,i,SIMPLE_NAME, line no: 7, 0.0011223188801109461, insert, 0.0035460992907801418, 0.0, 0.16666666666666666
String,SIMPLE_NAME, line no: 210,i,SIMPLE_NAME, line no: 7, 0.0011223188801109461, insert, 0.0035460992907801418, 0.0, 0.16666666666666666
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,d7.value=(absnum.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 74, 0.0011185560294197704, insert, 0.9987163029525032, 0.6000000000000001, 0.6956521739130435
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,if (true) return; ,IF_STATEMENT, line no: 211, 0.0011174684114887065, insert, 1.0, 0.0, 0.1694915254237288
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,d3.value=(absnum.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 70, 0.0011091557566937091, insert, 0.9987163029525032, 0.6000000000000001, 0.6842105263157895
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148, 0.0011070987864466122, insert, 1.0, 1.5, 0.6808510638297872
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141, 0.0011070987864466122, insert, 1.0, 1.5, 0.6808510638297872
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,d2.value=(absnum.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 69, 0.0011063956766166954, insert, 0.9987163029525032, 0.6000000000000001, 0.6808510638297872
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,d9.value=(absnum.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 76, 0.0011056964563305187, insert, 0.9987163029525032, 0.6000000000000001, 0.68
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144, 0.0010954451150103322, insert, 1.0, 1.5, 0.6666666666666666
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140, 0.0010954451150103322, insert, 1.0, 1.5, 0.6666666666666666
scanner,SIMPLE_NAME, line no: 65,length,SIMPLE_NAME, line no: 50, 0.0010951230401699819, insert, 0.03311649911295092, 0.0, 0.14285714285714285
nextInt,SIMPLE_NAME, line no: 65,System,SIMPLE_NAME, line no: 53, 0.0010951230401699819, insert, 0.011235955056179775, 0.0, 0.14285714285714285
nextInt,SIMPLE_NAME, line no: 65,out,SIMPLE_NAME, line no: 56, 0.0010951230401699819, insert, 0.03311649911295092, 0.0, 0.14285714285714285
"Enter an integer > ",STRING_LITERAL, line no: 64,mainClass,SIMPLE_NAME, line no: 48, 0.0010950364031718522, insert, 0.031323877068557916, 0.0, 0.14285714285714285
"Enter an integer > ",STRING_LITERAL, line no: 64,length,SIMPLE_NAME, line no: 50, 0.0010950364031718522, insert, 0.03309692671394799, 0.0, 0.14285714285714285
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,d8.value=(absnum.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 75, 0.0010947420051804152, insert, 0.9987163029525032, 0.6000000000000001, 0.6666666666666666
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,d1.value=(absnum.value % 10); ,EXPRESSION_STATEMENT, line no: 68, 0.0010947420051804152, insert, 0.9987163029525032, 0.6000000000000001, 0.6666666666666666
scanner,SIMPLE_NAME, line no: 65,exec,SIMPLE_NAME, line no: 55, 0.001092505365155063, insert, 0.03252513305736251, 0.0, 0.14285714285714285
"Enter an integer > ",STRING_LITERAL, line no: 64,digits_65e02c1a_004,SIMPLE_NAME, line no: 48, 0.001089804147320519, insert, 0.031323877068557916, 0.0, 0.14285714285714285
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,d4.value=(absnum.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 71, 0.0010810489412427862, insert, 0.9987163029525032, 0.6000000000000001, 0.65
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,d9.value=(absnum.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 76, 0.0010728331028802087, insert, 0.9987163029525032, 0.6000000000000001, 0.64
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145, 0.0010687269414734947, insert, 1.0, 1.5, 0.6341463414634146
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140, 0.0010687269414734947, insert, 1.0, 1.5, 0.6341463414634146
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,d1.value=(absnum.value % 10); ,EXPRESSION_STATEMENT, line no: 68, 0.001068023831643578, insert, 0.9987163029525032, 0.6000000000000001, 0.6341463414634146
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,d5.value=(absnum.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 72, 0.0010556189653586176, insert, 0.9987163029525032, 0.6000000000000001, 0.6190476190476191
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66, 0.0010456521552371352, insert, 1.0, 1.5, 0.6060606060606061
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146, 0.001044494179428456, insert, 1.0, 1.5, 0.6046511627906976
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140, 0.001044494179428456, insert, 1.0, 1.5, 0.6046511627906976
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,d1.value=(absnum.value % 10); ,EXPRESSION_STATEMENT, line no: 68, 0.0010437910695985395, insert, 0.9987163029525032, 0.6000000000000001, 0.6046511627906976
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,d6.value=(absnum.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 73, 0.0010325008054639193, insert, 0.9987163029525032, 0.6000000000000001, 0.5909090909090909
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147, 0.00102241544067631, insert, 1.0, 1.5, 0.5777777777777777
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140, 0.00102241544067631, insert, 1.0, 1.5, 0.5777777777777777
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,d1.value=(absnum.value % 10); ,EXPRESSION_STATEMENT, line no: 68, 0.0010217123308463932, insert, 0.9987163029525032, 0.6000000000000001, 0.5777777777777777
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66, 0.001017199035366737, insert, 1.0, 1.5, 0.5714285714285714
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,d7.value=(absnum.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 74, 0.0010113929203426726, insert, 0.9987163029525032, 0.6000000000000001, 0.5652173913043478
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148, 0.001002215743520091, insert, 1.0, 1.5, 0.5531914893617021
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140, 0.001002215743520091, insert, 1.0, 1.5, 0.5531914893617021
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,d1.value=(absnum.value % 10); ,EXPRESSION_STATEMENT, line no: 68, 0.0010015126336901743, insert, 0.9987163029525032, 0.6000000000000001, 0.5531914893617021
scanner,SIMPLE_NAME, line no: 65,java,SIMPLE_NAME, line no: 44, 0.001000886739632903, insert, 0.0011827321111768185, 0.0, 0.14285714285714285
nextInt,SIMPLE_NAME, line no: 65,util,SIMPLE_NAME, line no: 44, 0.001000886739632903, insert, 0.0011827321111768185, 0.0, 0.14285714285714285
scanner,SIMPLE_NAME, line no: 65,in,SIMPLE_NAME, line no: 53, 9.98269064617984E-4, insert, 0.011235955056179775, 0.0, 0.14285714285714285
nextInt,SIMPLE_NAME, line no: 65,in,SIMPLE_NAME, line no: 53, 9.98269064617984E-4, insert, 0.011235955056179775, 0.0, 0.14285714285714285
format,SIMPLE_NAME, line no: 64,Scanner,SIMPLE_NAME, line no: 44, 9.982396699221901E-4, insert, 5.91016548463357E-4, 0.0, 0.14285714285714285
format,SIMPLE_NAME, line no: 210,Scanner,SIMPLE_NAME, line no: 44, 9.982396699221901E-4, insert, 5.91016548463357E-4, 0.0, 0.14285714285714285
String,SIMPLE_NAME, line no: 64,true,BOOLEAN_LITERAL, line no: 211, 9.954492130703951E-4, insert, 0.9976359338061466, 0.0, 0.3333333333333333
String,SIMPLE_NAME, line no: 210,true,BOOLEAN_LITERAL, line no: 211, 9.954492130703951E-4, insert, 0.9976359338061466, 0.0, 0.3333333333333333
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,d8.value=(absnum.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 75, 9.920440256481965E-4, insert, 0.9987163029525032, 0.6000000000000001, 0.5416666666666666
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66, 9.918219284553006E-4, insert, 1.0, 1.5, 0.5405405405405406
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,d9.value=(absnum.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 76, 9.742430425292788E-4, insert, 0.9987163029525032, 0.6000000000000001, 0.52
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66, 9.690476017399091E-4, insert, 1.0, 1.5, 0.5128205128205128
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66, 9.484951605577264E-4, insert, 1.0, 1.5, 0.4878048780487805
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66, 9.298545743692354E-4, insert, 1.0, 1.5, 0.46511627906976744
scanner,SIMPLE_NAME, line no: 65,d9.value,QUALIFIED_NAME, line no: 76, 9.171009779205033E-4, insert, 0.47900650502661146, 0.0, 0.25
scanner,SIMPLE_NAME, line no: 65,d8.value,QUALIFIED_NAME, line no: 75, 9.164737394983982E-4, insert, 0.47900650502661146, 0.0, 0.25
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 9.160187599655364E-4, insert, 1.0, 1.5, 0.4482758620689655
scanner,SIMPLE_NAME, line no: 65,d7.value,QUALIFIED_NAME, line no: 74, 9.15846501076293E-4, insert, 0.47900650502661146, 0.0, 0.25
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,if (num.value >= 0) {   d1.value=(num.value % 10);   d2.value=(num.value % 100) / 10;   d3.value=(num.value % 1000) / 100;   d4.value=(num.value % 10000) / 1000;   d5.value=(num.value % 100000) / 10000;   d6.value=(num.value % 1000000) / 100000;   d7.value=(num.value % 10000000) / 1000000;   d8.value=(num.value % 100000000) / 10000000;   d9.value=(num.value % 1000000000) / 100000000;   d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000);   if (d10.value == 0 && d9.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {     output+=(String.format("\n%d\n%d\n" d1.value d2.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {     output+=(String.format("\n%d\n" d1.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {     output+=(String.format("\n0\n"));   } }  else {   output+=(String.format("\n-2147483648\n")); } ,IF_STATEMENT, line no: 139, 9.157987695744103E-4, insert, 1.0, 1.0, 0.018589968432129077
scanner,SIMPLE_NAME, line no: 65,d6.value,QUALIFIED_NAME, line no: 73, 9.152192626541879E-4, insert, 0.47900650502661146, 0.0, 0.25
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,if (num.value < 0 && num.value < -9999999999L) {   d1.value=(absnum.value % 10);   d2.value=(absnum.value % 100) / 10;   d3.value=(absnum.value % 1000) / 100;   d4.value=(absnum.value % 10000) / 1000;   d5.value=(absnum.value % 100000) / 10000;   d6.value=(absnum.value % 1000000) / 100000;   d7.value=(absnum.value % 10000000) / 1000000;   d8.value=(absnum.value % 100000000) / 10000000;   d9.value=(absnum.value % 1000000000) / 100000000;   d10.value=(absnum.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000;   if (d10.value == 0 && d9.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {     output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {     output+=(String.format("\n%d\n-%d\n" d1.value d2.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {     output+=(String.format("-%d\n" d1.value));   }  else   if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value));   } } ,IF_STATEMENT, line no: 67, 9.14683484419491E-4, insert, 1.0, 1.0, 0.017755443886097153
scanner,SIMPLE_NAME, line no: 65,d5.value,QUALIFIED_NAME, line no: 72, 9.145920242320827E-4, insert, 0.47900650502661146, 0.0, 0.25
scanner,SIMPLE_NAME, line no: 65,d4.value,QUALIFIED_NAME, line no: 71, 9.139647858099775E-4, insert, 0.47900650502661146, 0.0, 0.25
scanner,SIMPLE_NAME, line no: 65,d3.value,QUALIFIED_NAME, line no: 70, 9.133375473878724E-4, insert, 0.47900650502661146, 0.0, 0.25
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66, 9.128709291752768E-4, insert, 1.0, 1.5, 0.4444444444444444
scanner,SIMPLE_NAME, line no: 65,d2.value,QUALIFIED_NAME, line no: 69, 9.127103089657672E-4, insert, 0.47900650502661146, 0.0, 0.25
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,if (num.value >= 0) {   d1.value=(num.value % 10);   d2.value=(num.value % 100) / 10;   d3.value=(num.value % 1000) / 100;   d4.value=(num.value % 10000) / 1000;   d5.value=(num.value % 100000) / 10000;   d6.value=(num.value % 1000000) / 100000;   d7.value=(num.value % 10000000) / 1000000;   d8.value=(num.value % 100000000) / 10000000;   d9.value=(num.value % 1000000000) / 100000000;   d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000);   if (d10.value == 0 && d9.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {     output+=(String.format("\n%d\n%d\n" d1.value d2.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {     output+=(String.format("\n%d\n" d1.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {     output+=(String.format("\n0\n"));   } }  else {   output+=(String.format("\n-2147483648\n")); } ,IF_STATEMENT, line no: 139, 9.125174568016646E-4, insert, 1.0, 1.0, 0.016134689582602595
scanner,SIMPLE_NAME, line no: 65,d1.value,QUALIFIED_NAME, line no: 68, 9.120830705436621E-4, insert, 0.47900650502661146, 0.0, 0.25
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,if (num.value < 0 && num.value < -9999999999L) {   d1.value=(absnum.value % 10);   d2.value=(absnum.value % 100) / 10;   d3.value=(absnum.value % 1000) / 100;   d4.value=(absnum.value % 10000) / 1000;   d5.value=(absnum.value % 100000) / 10000;   d6.value=(absnum.value % 1000000) / 100000;   d7.value=(absnum.value % 10000000) / 1000000;   d8.value=(absnum.value % 100000000) / 10000000;   d9.value=(absnum.value % 1000000000) / 100000000;   d10.value=(absnum.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000;   if (d10.value == 0 && d9.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {     output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {     output+=(String.format("\n%d\n-%d\n" d1.value d2.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {     output+=(String.format("-%d\n" d1.value));   }  else   if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value));   } } ,IF_STATEMENT, line no: 67, 9.115494734596591E-4, insert, 1.0, 1.0, 0.01541038525963149
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (num.value >= 0) {   d1.value=(num.value % 10);   d2.value=(num.value % 100) / 10;   d3.value=(num.value % 1000) / 100;   d4.value=(num.value % 10000) / 1000;   d5.value=(num.value % 100000) / 10000;   d6.value=(num.value % 1000000) / 100000;   d7.value=(num.value % 10000000) / 1000000;   d8.value=(num.value % 100000000) / 10000000;   d9.value=(num.value % 1000000000) / 100000000;   d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000);   if (d10.value == 0 && d9.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {     output+=(String.format("\n%d\n%d\n" d1.value d2.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {     output+=(String.format("\n%d\n" d1.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {     output+=(String.format("\n0\n"));   } }  else {   output+=(String.format("\n-2147483648\n")); } ,IF_STATEMENT, line no: 139, 9.031422774509625E-4, insert, 1.0, 1.857142857142857, 0.009119607155384075
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,if (num.value < 0 && num.value < -9999999999L) {   d1.value=(absnum.value % 10);   d2.value=(absnum.value % 100) / 10;   d3.value=(absnum.value % 1000) / 100;   d4.value=(absnum.value % 10000) / 1000;   d5.value=(absnum.value % 100000) / 10000;   d6.value=(absnum.value % 1000000) / 100000;   d7.value=(absnum.value % 10000000) / 1000000;   d8.value=(absnum.value % 100000000) / 10000000;   d9.value=(absnum.value % 1000000000) / 100000000;   d10.value=(absnum.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000;   if (d10.value == 0 && d9.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {     output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {     output+=(String.format("\n%d\n-%d\n" d1.value d2.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {     output+=(String.format("-%d\n" d1.value));   }  else   if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value));   } } ,IF_STATEMENT, line no: 67, 9.030428722829728E-4, insert, 1.0, 3.0, 0.009045226130653266
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,if (num.value >= 0) {   d1.value=(num.value % 10);   d2.value=(num.value % 100) / 10;   d3.value=(num.value % 1000) / 100;   d4.value=(num.value % 10000) / 1000;   d5.value=(num.value % 100000) / 10000;   d6.value=(num.value % 1000000) / 100000;   d7.value=(num.value % 10000000) / 1000000;   d8.value=(num.value % 100000000) / 10000000;   d9.value=(num.value % 1000000000) / 100000000;   d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000);   if (d10.value == 0 && d9.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {     output+=(String.format("\n%d\n%d\n" d1.value d2.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {     output+=(String.format("\n%d\n" d1.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {     output+=(String.format("\n0\n"));   } }  else {   output+=(String.format("\n-2147483648\n")); } ,IF_STATEMENT, line no: 139, 9.026735184834275E-4, insert, 1.0, 1.857142857142857, 0.008768853034023149
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (num.value < 0 && num.value < -9999999999L) {   d1.value=(absnum.value % 10);   d2.value=(absnum.value % 100) / 10;   d3.value=(absnum.value % 1000) / 100;   d4.value=(absnum.value % 10000) / 1000;   d5.value=(absnum.value % 100000) / 10000;   d6.value=(absnum.value % 1000000) / 100000;   d7.value=(absnum.value % 10000000) / 1000000;   d8.value=(absnum.value % 100000000) / 10000000;   d9.value=(absnum.value % 1000000000) / 100000000;   d10.value=(absnum.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000;   if (d10.value == 0 && d9.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {     output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {     output+=(String.format("\n%d\n-%d\n" d1.value d2.value));   }  else   if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {     output+=(String.format("-%d\n" d1.value));   }  else   if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {     output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value));   } } ,IF_STATEMENT, line no: 67, 9.025951564315682E-4, insert, 1.0, 1.8666666666666667, 0.008710217755443886
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66, 8.9733270059357E-4, insert, 1.0, 1.5, 0.425531914893617
nextInt,SIMPLE_NAME, line no: 65,mainClass,SIMPLE_NAME, line no: 48, 8.843378758734206E-4, insert, 0.03134240094618569, 0.0, 0.1111111111111111
scanner,SIMPLE_NAME, line no: 65,d10.value,QUALIFIED_NAME, line no: 77, 8.729068040963441E-4, insert, 0.47900650502661146, 0.0, 0.2222222222222222
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 8.71376796030946E-4, insert, 1.0, 1.5, 0.3939393939393939
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 8.528822681151872E-4, insert, 1.0, 1.5, 0.37142857142857144
String,SIMPLE_NAME, line no: 64,digits_65e02c1a_004,SIMPLE_NAME, line no: 48, 8.40190136969328E-4, insert, 0.031323877068557916, 0.0, 0.10526315789473684
String,SIMPLE_NAME, line no: 210,digits_65e02c1a_004,SIMPLE_NAME, line no: 48, 8.40190136969328E-4, insert, 0.031323877068557916, 0.0, 0.10526315789473684
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 8.363871486227535E-4, insert, 1.0, 1.5, 0.35135135135135137
format,SIMPLE_NAME, line no: 64,true,BOOLEAN_LITERAL, line no: 211, 8.292791194915566E-4, insert, 0.9976359338061466, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 210,true,BOOLEAN_LITERAL, line no: 211, 8.292791194915566E-4, insert, 0.9976359338061466, 0.0, 0.16666666666666666
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 8.21583836257749E-4, insert, 1.0, 1.5, 0.3333333333333333
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 8.082247494893305E-4, insert, 1.0, 1.5, 0.3170731707317073
scanner,SIMPLE_NAME, line no: 65,true,BOOLEAN_LITERAL, line no: 211, 8.059326748636586E-4, insert, 0.9982259018332348, 0.0, 0.14285714285714285
nextInt,SIMPLE_NAME, line no: 65,true,BOOLEAN_LITERAL, line no: 211, 8.059326748636586E-4, insert, 0.9982259018332348, 0.0, 0.14285714285714285
"Enter an integer > ",STRING_LITERAL, line no: 64,true,BOOLEAN_LITERAL, line no: 211, 8.055405346945795E-4, insert, 0.9976359338061466, 0.0, 0.14285714285714285
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 7.961083684668111E-4, insert, 1.0, 1.5, 0.3023255813953488
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 7.850689990907381E-4, insert, 1.0, 1.5, 0.28888888888888886
"Enter an integer > ",STRING_LITERAL, line no: 64,args,SIMPLE_NAME, line no: 50, 7.788586567270102E-4, insert, 0.03309692671394799, 0.0, 0.09523809523809523
"Enter an integer > ",STRING_LITERAL, line no: 64,System,SIMPLE_NAME, line no: 53, 7.788586567270102E-4, insert, 0.011229314420803783, 0.0, 0.09523809523809523
"Enter an integer > ",STRING_LITERAL, line no: 64,exec,SIMPLE_NAME, line no: 55, 7.762425288013437E-4, insert, 0.03250591016548463, 0.0, 0.09523809523809523
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 7.749691505126286E-4, insert, 1.0, 1.5, 0.2765957446808511
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64, 7.702348464916398E-4, insert, 1.0, 0.0, 0.2708333333333333
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64, 7.702348464916398E-4, insert, 1.0, 0.0, 0.2708333333333333
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64, 7.702348464916398E-4, insert, 1.0, 0.0, 0.2708333333333333
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64, 7.702348464916398E-4, insert, 1.0, 0.0, 0.2708333333333333
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64, 7.702348464916398E-4, insert, 1.0, 0.0, 0.2708333333333333
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64, 7.702348464916398E-4, insert, 1.0, 0.0, 0.2708333333333333
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64, 7.702348464916398E-4, insert, 1.0, 0.0, 0.2708333333333333
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64, 7.702348464916398E-4, insert, 1.0, 0.0, 0.2708333333333333
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,mainClass,SIMPLE_NAME, line no: 48, 7.68978102150609E-4, insert, 0.031323877068557916, 0.0, 0.09375
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,length,SIMPLE_NAME, line no: 50, 7.68978102150609E-4, insert, 0.03309692671394799, 0.0, 0.09375
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,println,SIMPLE_NAME, line no: 56, 7.663619742249424E-4, insert, 0.03250591016548463, 0.0, 0.09375
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64, 7.531185165696034E-4, insert, 1.0, 0.0, 0.25
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210, 7.287495044772125E-4, insert, 1.0, 0.0, 0.22033898305084745
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210, 7.287495044772125E-4, insert, 1.0, 0.0, 0.22033898305084745
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210, 7.287495044772125E-4, insert, 1.0, 0.0, 0.22033898305084745
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210, 7.287495044772125E-4, insert, 1.0, 0.0, 0.22033898305084745
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210, 7.287495044772125E-4, insert, 1.0, 0.0, 0.22033898305084745
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210, 7.287495044772125E-4, insert, 1.0, 0.0, 0.22033898305084745
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210, 7.287495044772125E-4, insert, 1.0, 0.0, 0.22033898305084745
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210, 7.287495044772125E-4, insert, 1.0, 0.0, 0.22033898305084745
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210, 7.287495044772125E-4, insert, 1.0, 0.0, 0.22033898305084745
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,true,BOOLEAN_LITERAL, line no: 211, 7.254228110047823E-4, insert, 0.9976359338061466, 0.0, 0.0625
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149, 7.204855137275899E-4, insert, 1.0, 3.0, 0.2102803738317757
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,d10.value=(absnum.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000; ,EXPRESSION_STATEMENT, line no: 77, 7.189788552640805E-4, insert, 0.9987163029525032, 1.8461538461538463, 0.20930232558139536
String,SIMPLE_NAME, line no: 64,System.in,QUALIFIED_NAME, line no: 53, 7.18390400035269E-4, insert, 0.010638297872340425, 0.0, 0.4444444444444444
String,SIMPLE_NAME, line no: 210,System.in,QUALIFIED_NAME, line no: 53, 7.18390400035269E-4, insert, 0.010638297872340425, 0.0, 0.4444444444444444
nextInt,SIMPLE_NAME, line no: 65,d9.value,QUALIFIED_NAME, line no: 76, 7.182271957117868E-4, insert, 0.47900650502661146, 0.0, 0.125
format,SIMPLE_NAME, line no: 64,d9.value,QUALIFIED_NAME, line no: 76, 7.179202492499056E-4, insert, 0.4787234042553192, 0.0, 0.125
format,SIMPLE_NAME, line no: 210,d9.value,QUALIFIED_NAME, line no: 76, 7.179202492499056E-4, insert, 0.4787234042553192, 0.0, 0.125
nextInt,SIMPLE_NAME, line no: 65,d8.value,QUALIFIED_NAME, line no: 75, 7.175999572896816E-4, insert, 0.47900650502661146, 0.0, 0.125
format,SIMPLE_NAME, line no: 64,d8.value,QUALIFIED_NAME, line no: 75, 7.172933815360877E-4, insert, 0.4787234042553192, 0.0, 0.125
format,SIMPLE_NAME, line no: 210,d8.value,QUALIFIED_NAME, line no: 75, 7.172933815360877E-4, insert, 0.4787234042553192, 0.0, 0.125
nextInt,SIMPLE_NAME, line no: 65,d7.value,QUALIFIED_NAME, line no: 74, 7.169727188675765E-4, insert, 0.47900650502661146, 0.0, 0.125
format,SIMPLE_NAME, line no: 64,d7.value,QUALIFIED_NAME, line no: 74, 7.166665138222699E-4, insert, 0.4787234042553192, 0.0, 0.125
format,SIMPLE_NAME, line no: 210,d7.value,QUALIFIED_NAME, line no: 74, 7.166665138222699E-4, insert, 0.4787234042553192, 0.0, 0.125
nextInt,SIMPLE_NAME, line no: 65,d6.value,QUALIFIED_NAME, line no: 73, 7.163454804454713E-4, insert, 0.47900650502661146, 0.0, 0.125
format,SIMPLE_NAME, line no: 64,d6.value,QUALIFIED_NAME, line no: 73, 7.16039646108452E-4, insert, 0.4787234042553192, 0.0, 0.125
format,SIMPLE_NAME, line no: 210,d6.value,QUALIFIED_NAME, line no: 73, 7.16039646108452E-4, insert, 0.4787234042553192, 0.0, 0.125
nextInt,SIMPLE_NAME, line no: 65,d5.value,QUALIFIED_NAME, line no: 72, 7.157182420233661E-4, insert, 0.47900650502661146, 0.0, 0.125
format,SIMPLE_NAME, line no: 64,d5.value,QUALIFIED_NAME, line no: 72, 7.154127783946341E-4, insert, 0.4787234042553192, 0.0, 0.125
format,SIMPLE_NAME, line no: 210,d5.value,QUALIFIED_NAME, line no: 72, 7.154127783946341E-4, insert, 0.4787234042553192, 0.0, 0.125
nextInt,SIMPLE_NAME, line no: 65,d4.value,QUALIFIED_NAME, line no: 71, 7.150910036012611E-4, insert, 0.47900650502661146, 0.0, 0.125
format,SIMPLE_NAME, line no: 64,d4.value,QUALIFIED_NAME, line no: 71, 7.147859106808162E-4, insert, 0.4787234042553192, 0.0, 0.125
format,SIMPLE_NAME, line no: 210,d4.value,QUALIFIED_NAME, line no: 71, 7.147859106808162E-4, insert, 0.4787234042553192, 0.0, 0.125
nextInt,SIMPLE_NAME, line no: 65,d3.value,QUALIFIED_NAME, line no: 70, 7.144637651791559E-4, insert, 0.47900650502661146, 0.0, 0.125
format,SIMPLE_NAME, line no: 64,d3.value,QUALIFIED_NAME, line no: 70, 7.141590429669985E-4, insert, 0.4787234042553192, 0.0, 0.125
format,SIMPLE_NAME, line no: 210,d3.value,QUALIFIED_NAME, line no: 70, 7.141590429669985E-4, insert, 0.4787234042553192, 0.0, 0.125
nextInt,SIMPLE_NAME, line no: 65,d2.value,QUALIFIED_NAME, line no: 69, 7.138365267570508E-4, insert, 0.47900650502661146, 0.0, 0.125
format,SIMPLE_NAME, line no: 64,d2.value,QUALIFIED_NAME, line no: 69, 7.135321752531806E-4, insert, 0.4787234042553192, 0.0, 0.125
format,SIMPLE_NAME, line no: 210,d2.value,QUALIFIED_NAME, line no: 69, 7.135321752531806E-4, insert, 0.4787234042553192, 0.0, 0.125
nextInt,SIMPLE_NAME, line no: 65,d1.value,QUALIFIED_NAME, line no: 68, 7.132092883349456E-4, insert, 0.47900650502661146, 0.0, 0.125
format,SIMPLE_NAME, line no: 64,d1.value,QUALIFIED_NAME, line no: 68, 7.129053075393627E-4, insert, 0.4787234042553192, 0.0, 0.125
format,SIMPLE_NAME, line no: 210,d1.value,QUALIFIED_NAME, line no: 68, 7.129053075393627E-4, insert, 0.4787234042553192, 0.0, 0.125
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149, 7.128071601177044E-4, insert, 1.0, 3.0, 0.20093457943925233
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,d10.value=(absnum.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000; ,EXPRESSION_STATEMENT, line no: 77, 7.113362149267991E-4, insert, 0.9987163029525032, 1.8461538461538463, 0.2
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149, 7.051288065078188E-4, insert, 1.0, 3.0, 0.19158878504672897
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,d10.value=(absnum.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000; ,EXPRESSION_STATEMENT, line no: 77, 7.036935745895177E-4, insert, 0.9987163029525032, 1.8461538461538463, 0.19069767441860466
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149, 6.974504528979334E-4, insert, 1.0, 3.0, 0.1822429906542056
nextInt,SIMPLE_NAME, line no: 65,d10.value,QUALIFIED_NAME, line no: 77, 6.961301087997073E-4, insert, 0.47900650502661146, 0.0, 0.1111111111111111
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,d10.value=(absnum.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000; ,EXPRESSION_STATEMENT, line no: 77, 6.960509342522364E-4, insert, 0.9987163029525032, 1.8461538461538463, 0.1813953488372093
format,SIMPLE_NAME, line no: 64,d10.value,QUALIFIED_NAME, line no: 77, 6.958231623378259E-4, insert, 0.4787234042553192, 0.0, 0.1111111111111111
format,SIMPLE_NAME, line no: 210,d10.value,QUALIFIED_NAME, line no: 77, 6.958231623378259E-4, insert, 0.4787234042553192, 0.0, 0.1111111111111111
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149, 6.897720992880479E-4, insert, 1.0, 3.0, 0.17289719626168223
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,d10.value=(absnum.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000; ,EXPRESSION_STATEMENT, line no: 77, 6.88408293914955E-4, insert, 0.9987163029525032, 1.8461538461538463, 0.17209302325581396
"Enter an integer > ",STRING_LITERAL, line no: 64,util,SIMPLE_NAME, line no: 44, 6.846780514030146E-4, insert, 0.001182033096926714, 0.0, 0.09523809523809523
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149, 6.820937456781624E-4, insert, 1.0, 3.0, 0.16355140186915887
"Enter an integer > ",STRING_LITERAL, line no: 64,in,SIMPLE_NAME, line no: 53, 6.820619234773482E-4, insert, 0.011229314420803783, 0.0, 0.09523809523809523
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,d10.value=(absnum.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000; ,EXPRESSION_STATEMENT, line no: 77, 6.807656535776736E-4, insert, 0.9987163029525032, 1.8461538461538463, 0.16279069767441862
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,java,SIMPLE_NAME, line no: 44, 6.747974968266134E-4, insert, 0.001182033096926714, 0.0, 0.09375
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149, 6.744153920682769E-4, insert, 1.0, 3.0, 0.1542056074766355
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,d10.value=(absnum.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000; ,EXPRESSION_STATEMENT, line no: 77, 6.731230132403923E-4, insert, 0.9987163029525032, 1.8461538461538463, 0.15348837209302327
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,Scanner,SIMPLE_NAME, line no: 44, 6.721813689009469E-4, insert, 5.91016548463357E-4, 0.0, 0.09375
"Enter an integer > ",STRING_LITERAL, line no: 64,d9.value,QUALIFIED_NAME, line no: 76, 6.705693487240206E-4, insert, 0.4787234042553192, 0.0, 0.09523809523809523
"Enter an integer > ",STRING_LITERAL, line no: 64,d10.value,QUALIFIED_NAME, line no: 77, 6.705693487240206E-4, insert, 0.4787234042553192, 0.0, 0.09523809523809523
"Enter an integer > ",STRING_LITERAL, line no: 64,d8.value,QUALIFIED_NAME, line no: 75, 6.699424810102029E-4, insert, 0.4787234042553192, 0.0, 0.09523809523809523
"Enter an integer > ",STRING_LITERAL, line no: 64,d7.value,QUALIFIED_NAME, line no: 74, 6.693156132963849E-4, insert, 0.4787234042553192, 0.0, 0.09523809523809523
"Enter an integer > ",STRING_LITERAL, line no: 64,d6.value,QUALIFIED_NAME, line no: 73, 6.686887455825671E-4, insert, 0.4787234042553192, 0.0, 0.09523809523809523
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,d9.value,QUALIFIED_NAME, line no: 76, 6.682018036977263E-4, insert, 0.4787234042553192, 0.0, 0.09375
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,d10.value,QUALIFIED_NAME, line no: 77, 6.682018036977263E-4, insert, 0.4787234042553192, 0.0, 0.09375
"Enter an integer > ",STRING_LITERAL, line no: 64,d5.value,QUALIFIED_NAME, line no: 72, 6.680618778687491E-4, insert, 0.4787234042553192, 0.0, 0.09523809523809523
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,d8.value,QUALIFIED_NAME, line no: 75, 6.675749359839086E-4, insert, 0.4787234042553192, 0.0, 0.09375
"Enter an integer > ",STRING_LITERAL, line no: 64,d4.value,QUALIFIED_NAME, line no: 71, 6.674350101549314E-4, insert, 0.4787234042553192, 0.0, 0.09523809523809523
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,d7.value,QUALIFIED_NAME, line no: 74, 6.669480682700906E-4, insert, 0.4787234042553192, 0.0, 0.09375
"Enter an integer > ",STRING_LITERAL, line no: 64,d3.value,QUALIFIED_NAME, line no: 70, 6.668081424411134E-4, insert, 0.4787234042553192, 0.0, 0.09523809523809523
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149, 6.667370384583913E-4, insert, 1.0, 3.0, 0.14485981308411214
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,d6.value,QUALIFIED_NAME, line no: 73, 6.66321200556273E-4, insert, 0.4787234042553192, 0.0, 0.09375
"Enter an integer > ",STRING_LITERAL, line no: 64,d2.value,QUALIFIED_NAME, line no: 69, 6.661812747272957E-4, insert, 0.4787234042553192, 0.0, 0.09523809523809523
scanner,SIMPLE_NAME, line no: 65,mainClass.scanner,QUALIFIED_NAME, line no: 51, 6.657766886868536E-4, insert, 0.009461856889414548, 1.0, 0.4117647058823529
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,d5.value,QUALIFIED_NAME, line no: 72, 6.656943328424549E-4, insert, 0.4787234042553192, 0.0, 0.09375
"Enter an integer > ",STRING_LITERAL, line no: 64,d1.value,QUALIFIED_NAME, line no: 68, 6.655544070134777E-4, insert, 0.4787234042553192, 0.0, 0.09523809523809523
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,d10.value=(absnum.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000; ,EXPRESSION_STATEMENT, line no: 77, 6.654803729031108E-4, insert, 0.9987163029525032, 1.8461538461538463, 0.14418604651162792
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,d4.value,QUALIFIED_NAME, line no: 71, 6.650674651286372E-4, insert, 0.4787234042553192, 0.0, 0.09375
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,d3.value,QUALIFIED_NAME, line no: 70, 6.644405974148192E-4, insert, 0.4787234042553192, 0.0, 0.09375
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,d2.value,QUALIFIED_NAME, line no: 69, 6.638137297010015E-4, insert, 0.4787234042553192, 0.0, 0.09375
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,d1.value,QUALIFIED_NAME, line no: 68, 6.631868619871834E-4, insert, 0.4787234042553192, 0.0, 0.09375
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149, 6.475411544336776E-4, insert, 1.0, 3.0, 0.12149532710280374
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,d10.value=(absnum.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000; ,EXPRESSION_STATEMENT, line no: 77, 6.463737720599073E-4, insert, 0.9987163029525032, 1.8461538461538463, 0.12093023255813953
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 201, 6.166980273057554E-4, insert, 0.466824644549763, 1.0, 0.15023474178403756
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 201, 6.104236995290297E-4, insert, 0.466824644549763, 1.0, 0.14553990610328638
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 128, 5.879924174493243E-4, insert, 0.4840047393364929, 1.0, 0.11730205278592376
scanner,SIMPLE_NAME, line no: 65,java.util.Scanner,QUALIFIED_NAME, line no: 51, 5.728162648930922E-4, insert, 0.010053222945002957, 0.0, 0.35294117647058826
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,args,SIMPLE_NAME, line no: 50, 5.614864560461813E-4, insert, 0.03309692671394799, 0.0, 0.0625
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,System,SIMPLE_NAME, line no: 53, 5.614864560461813E-4, insert, 0.011229314420803783, 0.0, 0.0625
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 128, 5.605583332408257E-4, insert, 0.4840047393364929, 1.0, 0.0967741935483871
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 196, 5.605245887213622E-4, insert, 0.4662322274881517, 1.0, 0.1085972850678733
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,exec,SIMPLE_NAME, line no: 55, 5.588703281205149E-4, insert, 0.03250591016548463, 0.0, 0.0625
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 123, 5.457865582088464E-4, insert, 0.4834123222748815, 1.0, 0.08611599297012303
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 201, 5.351317662083212E-4, insert, 0.466824644549763, 0.8571428571428571, 0.0892018779342723
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 201, 5.351317662083212E-4, insert, 0.466824644549763, 0.8571428571428571, 0.0892018779342723
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 196, 5.302885747746976E-4, insert, 0.4662322274881517, 1.0, 0.08597285067873303
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 123, 5.199504422494995E-4, insert, 0.4834123222748815, 1.0, 0.06678383128295255
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 119, 5.159039504353919E-4, insert, 0.4828199052132701, 1.0, 0.06415094339622641
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 192, 5.15046200189862E-4, insert, 0.4656398104265403, 1.0, 0.07496251874062969
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 128, 5.135284745976853E-4, insert, 0.4840047393364929, 0.8571428571428571, 0.06158357771260997
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 128, 5.056901648238286E-4, insert, 0.4840047393364929, 0.8571428571428571, 0.05571847507331378
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 119, 4.990934873354854E-4, insert, 0.4828199052132701, 1.0, 0.05157232704402516
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 114, 4.979755688602927E-4, insert, 0.4822274881516588, 1.0, 0.051130776794493606
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 192, 4.970133870744449E-4, insert, 0.4656398104265403, 1.0, 0.06146926536731634
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 187, 4.910906184294422E-4, insert, 0.4650473933649289, 1.0, 0.057432432432432436
nextInt,SIMPLE_NAME, line no: 65,digits_65e02c1a_004,SIMPLE_NAME, line no: 48, 4.908140652972857E-4, insert, 0.03134240094618569, 0.0, 0.05263157894736842
format,SIMPLE_NAME, line no: 64,digits_65e02c1a_004,SIMPLE_NAME, line no: 48, 4.907305224776606E-4, insert, 0.031323877068557916, 0.0, 0.05263157894736842
format,SIMPLE_NAME, line no: 210,digits_65e02c1a_004,SIMPLE_NAME, line no: 48, 4.907305224776606E-4, insert, 0.031323877068557916, 0.0, 0.05263157894736842
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 108, 4.864678996289046E-4, insert, 0.4816350710900474, 1.0, 0.04291497975708502
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 114, 4.848346463780648E-4, insert, 0.4822274881516588, 1.0, 0.04129793510324484
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 123, 4.847193750322085E-4, insert, 0.4834123222748815, 0.8571428571428571, 0.040421792618629174
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 123, 4.8002189940323637E-4, insert, 0.4834123222748815, 0.8571428571428571, 0.03690685413005272
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 196, 4.7888735106536785E-4, insert, 0.4662322274881517, 0.8571428571428571, 0.04751131221719457
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 196, 4.7888735106536785E-4, insert, 0.4662322274881517, 0.8571428571428571, 0.04751131221719457
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 187, 4.7754570137090255E-4, insert, 0.4650473933649289, 1.0, 0.0472972972972973
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 103, 4.7746973782754353E-4, insert, 0.48104265402843605, 1.0, 0.03657694962042788
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 181, 4.7669918076695286E-4, insert, 0.46445497630331756, 1.0, 0.047058823529411764
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 108, 4.756465893743089E-4, insert, 0.4816350710900474, 1.0, 0.034817813765182185
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 98, 4.7075425036689474E-4, insert, 0.48045023696682465, 1.0, 0.031946955997588906
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 119, 4.705157000656441E-4, insert, 0.4828199052132701, 0.8571428571428571, 0.03018867924528302
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 103, 4.691689190918754E-4, insert, 0.48104265402843605, 1.0, 0.03036576949620428
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 119, 4.6883465375565346E-4, insert, 0.4828199052132701, 0.8571428571428571, 0.028930817610062894
nextInt,SIMPLE_NAME, line no: 65,args.length,QUALIFIED_NAME, line no: 50, 4.6840454712571036E-4, insert, 0.03252513305736251, 0.0, 0.2727272727272727
String,SIMPLE_NAME, line no: 64,args.length,QUALIFIED_NAME, line no: 50, 4.683841581699091E-4, insert, 0.03250591016548463, 0.0, 0.2727272727272727
String,SIMPLE_NAME, line no: 210,args.length,QUALIFIED_NAME, line no: 50, 4.683841581699091E-4, insert, 0.03250591016548463, 0.0, 0.2727272727272727
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,util,SIMPLE_NAME, line no: 44, 4.673058507221859E-4, insert, 0.001182033096926714, 0.0, 0.0625
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 175, 4.6702164345457546E-4, insert, 0.46386255924170616, 1.0, 0.04021244309559939
"Enter an integer > ",STRING_LITERAL, line no: 64,java.util.Scanner,QUALIFIED_NAME, line no: 51, 4.6585226389721625E-4, insert, 0.01004728132387707, 0.0, 0.2857142857142857
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 181, 4.658142157461536E-4, insert, 0.46445497630331756, 1.0, 0.03891402714932127
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 92, 4.65510532751463E-4, insert, 0.47985781990521326, 1.0, 0.028418230563002682
"Enter an integer > ",STRING_LITERAL, line no: 64,mainClass.scanner,QUALIFIED_NAME, line no: 51, 4.6522539618339836E-4, insert, 0.009456264775413711, 0.0, 0.2857142857142857
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,in,SIMPLE_NAME, line no: 53, 4.6468972279651937E-4, insert, 0.011229314420803783, 0.0, 0.0625
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 98, 4.64309732867473E-4, insert, 0.48045023696682465, 1.0, 0.027124773960216998
"Enter an integer > ",STRING_LITERAL, line no: 64,out,SIMPLE_NAME, line no: 56, 4.626809102821682E-4, insert, 0.03309692671394799, 0.0, 0.047619047619047616
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 114, 4.624950781582775E-4, insert, 0.4822274881516588, 0.8571428571428571, 0.024582104228121928
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,if (d10.value == 0 && d9.value == 0 && d8.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 87, 4.612711710597914E-4, insert, 0.4792654028436019, 1.0, 0.02564102564102564
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 114, 4.6118098591005466E-4, insert, 0.4822274881516588, 0.8571428571428571, 0.02359882005899705
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 192, 4.609477608436108E-4, insert, 0.4656398104265403, 0.8571428571428571, 0.034482758620689655
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 92, 4.6049443478090105E-4, insert, 0.47985781990521326, 1.0, 0.024664879356568366
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 170, 4.591382875742782E-4, insert, 0.46327014218009477, 1.0, 0.03470857891290111
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 192, 4.589441149418977E-4, insert, 0.4656398104265403, 0.8571428571428571, 0.03298350824587706
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 175, 4.578957812785639E-4, insert, 0.46386255924170616, 1.0, 0.03338391502276176
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,if (d10.value == 0 && d9.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 82, 4.577477863823785E-4, insert, 0.4786729857819905, 1.0, 0.023399558498896248
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 108, 4.572503619414961E-4, insert, 0.4816350710900474, 0.8571428571428571, 0.021052631578947368
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,if (d10.value == 0 && d9.value == 0 && d8.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 87, 4.5674527714827806E-4, insert, 0.4792654028436019, 1.0, 0.022254475084663765
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 108, 4.561682309160365E-4, insert, 0.4816350710900474, 0.8571428571428571, 0.020242914979757085
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,if (d10.value == 0 && d9.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 82, 4.5361753352803053E-4, insert, 0.4786729857819905, 1.0, 0.020309050772626933
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 164, 4.5312025261107415E-4, insert, 0.46267772511848343, 1.0, 0.030600461893764433
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 103, 4.5256728162053903E-4, insert, 0.48104265402843605, 0.8571428571428571, 0.017943409247757072
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 103, 4.5256728162053903E-4, insert, 0.48104265402843605, 0.8571428571428571, 0.017943409247757072
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 170, 4.5213668015349197E-4, insert, 0.46327014218009477, 1.0, 0.029469548133595286
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 187, 4.5045586725382333E-4, insert, 0.4650473933649289, 0.8571428571428571, 0.02702702702702703
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 98, 4.4900400380634654E-4, insert, 0.48045023696682465, 0.8571428571428571, 0.01567209162145871
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 98, 4.4900400380634654E-4, insert, 0.48045023696682465, 0.8571428571428571, 0.01567209162145871
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 187, 4.489508764695412E-4, insert, 0.4650473933649289, 0.8571428571428571, 0.0259009009009009
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,if (d10.value == 0 && d9.value == 0 && d8.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 159, 4.4833998813377204E-4, insert, 0.46208530805687204, 1.0, 0.027418520434557683
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 164, 4.4771896928826933E-4, insert, 0.46267772511848343, 1.0, 0.026558891454965358
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 92, 4.461627262935812E-4, insert, 0.47985781990521326, 0.8571428571428571, 0.013941018766756031
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 92, 4.461627262935812E-4, insert, 0.47985781990521326, 0.8571428571428571, 0.013941018766756031
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,if (d10.value == 0 && d9.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 154, 4.444231256087338E-4, insert, 0.46149289099526064, 1.0, 0.02488262910798122
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 181, 4.440442857045551E-4, insert, 0.46445497630331756, 0.8571428571428571, 0.02262443438914027
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (d10.value == 0 && d9.value == 0 && d8.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 87, 4.4381415168681144E-4, insert, 0.4792654028436019, 0.8571428571428571, 0.012578616352201259
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,if (d10.value == 0 && d9.value == 0 && d8.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 87, 4.4381415168681144E-4, insert, 0.4792654028436019, 0.8571428571428571, 0.012578616352201259
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,if (d10.value == 0 && d9.value == 0 && d8.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 159, 4.4350034886057074E-4, insert, 0.46208530805687204, 1.0, 0.02379720641489912
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 181, 4.4283484514668855E-4, insert, 0.46445497630331756, 0.8571428571428571, 0.02171945701357466
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (d10.value == 0 && d9.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 82, 4.4181681108703655E-4, insert, 0.4786729857819905, 0.8571428571428571, 0.011479028697571744
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,if (d10.value == 0 && d9.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("-%d\n" d1.value)); }  else if (d10.value != 0 && d9.value != 0 && d8.value != 0 && d7.value != 0 && d6.value != 0 && d5.value != 0 && d4.value != 0 && d3.value != 0 && d2.value != 0 && d1.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); } ,IF_STATEMENT, line no: 82, 4.4181681108703655E-4, insert, 0.4786729857819905, 0.8571428571428571, 0.011479028697571744
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,if (d10.value == 0 && d9.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 154, 4.4003109616502583E-4, insert, 0.46149289099526064, 1.0, 0.0215962441314554
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 175, 4.3964405692654095E-4, insert, 0.46386255924170616, 0.8571428571428571, 0.019726858877086494
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 175, 4.3863007224031737E-4, insert, 0.46386255924170616, 0.8571428571428571, 0.01896813353566009
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 170, 4.3550786252912464E-4, insert, 0.46327014218009477, 0.8571428571428571, 0.017026850032743943
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 170, 4.3463266160152634E-4, insert, 0.46327014218009477, 0.8571428571428571, 0.016371971185330715
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 164, 4.322867312231126E-4, insert, 0.46267772511848343, 0.8571428571428571, 0.015011547344110854
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 164, 4.315151193198547E-4, insert, 0.46267772511848343, 0.8571428571428571, 0.014434180138568129
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (d10.value == 0 && d9.value == 0 && d8.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 159, 4.296728080799957E-4, insert, 0.46208530805687204, 0.8571428571428571, 0.013450594930160372
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,if (d10.value == 0 && d9.value == 0 && d8.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 159, 4.2898143104096696E-4, insert, 0.46208530805687204, 0.8571428571428571, 0.012933264355923435
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (d10.value == 0 && d9.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 154, 4.2748244061157443E-4, insert, 0.46149289099526064, 0.8571428571428571, 0.012206572769953052
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,if (d10.value == 0 && d9.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value != 0) {   output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value != 0) {   output+=(String.format("\n%d\n%d\n" d1.value d2.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value != 0) {   output+=(String.format("\n%d\n" d1.value)); }  else if (d10.value == 0 && d9.value == 0 && d8.value == 0 && d7.value == 0 && d6.value == 0 && d5.value == 0 && d4.value == 0 && d3.value == 0 && d2.value == 0 && d1.value == 0) {   output+=(String.format("\n0\n")); } ,IF_STATEMENT, line no: 154, 4.268550078339018E-4, insert, 0.46149289099526064, 0.8571428571428571, 0.011737089201877934
"Enter an integer > ",STRING_LITERAL, line no: 64,java,SIMPLE_NAME, line no: 44, 3.6850030495817277E-4, insert, 0.001182033096926714, 0.0, 0.047619047619047616
String,SIMPLE_NAME, line no: 64,java.util,QUALIFIED_NAME, line no: 44, 3.654638771558131E-4, insert, 5.91016548463357E-4, 0.0, 0.2222222222222222
format,SIMPLE_NAME, line no: 64,java.util,QUALIFIED_NAME, line no: 44, 3.654638771558131E-4, insert, 5.91016548463357E-4, 0.0, 0.2222222222222222
String,SIMPLE_NAME, line no: 210,java.util,QUALIFIED_NAME, line no: 44, 3.654638771558131E-4, insert, 5.91016548463357E-4, 0.0, 0.2222222222222222
format,SIMPLE_NAME, line no: 210,java.util,QUALIFIED_NAME, line no: 44, 3.654638771558131E-4, insert, 5.91016548463357E-4, 0.0, 0.2222222222222222
scanner,SIMPLE_NAME, line no: 65,System.in,QUALIFIED_NAME, line no: 53, 3.648436821911665E-4, insert, 0.010644589000591367, 0.0, 0.2222222222222222
nextInt,SIMPLE_NAME, line no: 65,System.in,QUALIFIED_NAME, line no: 53, 3.648436821911665E-4, insert, 0.010644589000591367, 0.0, 0.2222222222222222
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,java.util.Scanner,QUALIFIED_NAME, line no: 51, 3.5931273771397533E-4, insert, 0.01004728132387707, 0.0, 0.21875
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,out,SIMPLE_NAME, line no: 56, 3.5399480994175386E-4, insert, 0.03309692671394799, 0.0, 0.03125
scanner,SIMPLE_NAME, line no: 65,System.out,QUALIFIED_NAME, line no: 56, 3.5269616474973E-4, insert, 0.03252513305736251, 0.0, 0.2
nextInt,SIMPLE_NAME, line no: 65,System.out,QUALIFIED_NAME, line no: 56, 3.5269616474973E-4, insert, 0.03252513305736251, 0.0, 0.2
String,SIMPLE_NAME, line no: 64,System.out,QUALIFIED_NAME, line no: 56, 3.5267577579392866E-4, insert, 0.03250591016548463, 0.0, 0.2
format,SIMPLE_NAME, line no: 64,System.out,QUALIFIED_NAME, line no: 56, 3.5267577579392866E-4, insert, 0.03250591016548463, 0.0, 0.2
String,SIMPLE_NAME, line no: 210,System.out,QUALIFIED_NAME, line no: 56, 3.5267577579392866E-4, insert, 0.03250591016548463, 0.0, 0.2
format,SIMPLE_NAME, line no: 210,System.out,QUALIFIED_NAME, line no: 56, 3.5267577579392866E-4, insert, 0.03250591016548463, 0.0, 0.2
"Enter an integer > ",STRING_LITERAL, line no: 64,mainClass.output,QUALIFIED_NAME, line no: 56, 3.375234876256455E-4, insert, 0.03250591016548463, 0.0, 0.19047619047619047
nextInt,SIMPLE_NAME, line no: 65,mainClass.output,QUALIFIED_NAME, line no: 56, 3.3280878652885835E-4, insert, 0.03252513305736251, 0.0, 0.1875
format,SIMPLE_NAME, line no: 64,mainClass.output,QUALIFIED_NAME, line no: 56, 3.3278839757305704E-4, insert, 0.03250591016548463, 0.0, 0.1875
format,SIMPLE_NAME, line no: 210,mainClass.output,QUALIFIED_NAME, line no: 56, 3.3278839757305704E-4, insert, 0.03250591016548463, 0.0, 0.1875
"Enter an integer > ",STRING_LITERAL, line no: 64,i,SIMPLE_NAME, line no: 7, 3.3187451399884117E-4, insert, 0.0035460992907801418, 0.0, 0.047619047619047616
scanner,SIMPLE_NAME, line no: 65,args.length,QUALIFIED_NAME, line no: 50, 3.2376906915573486E-4, insert, 0.03252513305736251, 0.0, 0.18181818181818182
format,SIMPLE_NAME, line no: 64,args.length,QUALIFIED_NAME, line no: 50, 3.237486801999336E-4, insert, 0.03250591016548463, 0.0, 0.18181818181818182
format,SIMPLE_NAME, line no: 210,args.length,QUALIFIED_NAME, line no: 50, 3.237486801999336E-4, insert, 0.03250591016548463, 0.0, 0.18181818181818182
"Enter an integer > ",STRING_LITERAL, line no: 64,System.in,QUALIFIED_NAME, line no: 53, 3.1432938221438467E-4, insert, 0.010638297872340425, 0.0, 0.19047619047619047
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,mainClass.scanner,QUALIFIED_NAME, line no: 51, 3.0896742444797834E-4, insert, 0.009456264775413711, 0.0, 0.1875
String,SIMPLE_NAME, line no: 64,java.util.Scanner,QUALIFIED_NAME, line no: 51, 2.9204660549632123E-4, insert, 0.01004728132387707, 0.0, 0.17647058823529413
String,SIMPLE_NAME, line no: 210,java.util.Scanner,QUALIFIED_NAME, line no: 51, 2.9204660549632123E-4, insert, 0.01004728132387707, 0.0, 0.17647058823529413
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,args.length,QUALIFIED_NAME, line no: 50, 2.83069952020878E-4, insert, 0.03250591016548463, 0.0, 0.15625
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,output+=(String.format("-%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 127, 2.8225771823310077E-4, insert, 0.026957637997432605, 1.5, 0.32558139534883723
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,output+=(String.format("-%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 127, 2.8225771823310077E-4, insert, 0.026957637997432605, 0.6000000000000001, 0.32558139534883723
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,output+=(String.format("-%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 127, 2.8225771823310077E-4, insert, 0.026957637997432605, 0.6000000000000001, 0.32558139534883723
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,output+=(String.format("-%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 127, 2.8225771823310077E-4, insert, 0.026957637997432605, 0.6000000000000001, 0.32558139534883723
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,output+=(String.format("-%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 127, 2.8225771823310077E-4, insert, 0.026957637997432605, 0.6000000000000001, 0.32558139534883723
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,output+=(String.format("-%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 127, 2.8225771823310077E-4, insert, 0.026957637997432605, 0.6000000000000001, 0.32558139534883723
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,output+=(String.format("-%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 127, 2.8225771823310077E-4, insert, 0.026957637997432605, 0.6000000000000001, 0.32558139534883723
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,output+=(String.format("\n%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 200, 2.76178345237536E-4, insert, 0.026957637997432605, 1.5, 0.3181818181818182
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,output+=(String.format("\n%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 200, 2.76178345237536E-4, insert, 0.026957637997432605, 0.6000000000000001, 0.3181818181818182
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,output+=(String.format("\n%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 200, 2.76178345237536E-4, insert, 0.026957637997432605, 0.6000000000000001, 0.3181818181818182
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,output+=(String.format("\n%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 200, 2.76178345237536E-4, insert, 0.026957637997432605, 0.6000000000000001, 0.3181818181818182
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,output+=(String.format("\n%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 200, 2.76178345237536E-4, insert, 0.026957637997432605, 0.6000000000000001, 0.3181818181818182
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,output+=(String.format("\n%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 200, 2.76178345237536E-4, insert, 0.026957637997432605, 0.6000000000000001, 0.3181818181818182
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,output+=(String.format("\n%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 200, 2.76178345237536E-4, insert, 0.026957637997432605, 0.6000000000000001, 0.3181818181818182
output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210,if (args.length > 0) {   mainClass.scanner=new java.util.Scanner(args[0]); }  else {   mainClass.scanner=new java.util.Scanner(System.in); } ,IF_STATEMENT, line no: 50, 2.744085193335881E-4, insert, 0.03139810426540284, 0.0, 0.18439716312056736
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149, 2.7386127875258305E-4, insert, 1.0, 12.0, 1.0
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,d10.value=(absnum.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000; ,EXPRESSION_STATEMENT, line no: 77, 2.714278646854153E-4, insert, 0.9987163029525032, 10.153846153846153, 0.986046511627907
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,output+=(String.format("-%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 127, 2.7036916659732975E-4, insert, 0.026957637997432605, 0.6000000000000001, 0.3111111111111111
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,output+=(String.format("\n%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 200, 2.7036916659732975E-4, insert, 0.026957637997432605, 0.6000000000000001, 0.3111111111111111
"Enter an integer > ",STRING_LITERAL, line no: 64,args.length,QUALIFIED_NAME, line no: 50, 2.617620467842297E-4, insert, 0.03250591016548463, 0.0, 0.14285714285714285
"Enter an integer > ",STRING_LITERAL, line no: 64,System.out,QUALIFIED_NAME, line no: 56, 2.617620467842297E-4, insert, 0.03250591016548463, 0.0, 0.14285714285714285
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,output+=(String.format("\n%d\n%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 195, 2.612053018140811E-4, insert, 0.029525032092426188, 1.6, 0.2982456140350877
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,output+=(String.format("-%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 127, 2.5949240659013493E-4, insert, 0.026957637997432605, 0.6000000000000001, 0.2978723404255319
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,output+=(String.format("\n%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 200, 2.5949240659013493E-4, insert, 0.026957637997432605, 0.6000000000000001, 0.2978723404255319
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 122, 2.569805815429432E-4, insert, 0.029525032092426188, 1.6, 0.29310344827586204
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,output+=(String.format("\n0\n")); ,EXPRESSION_STATEMENT, line no: 205, 2.550013915501096E-4, insert, 0.024390243902439025, 0.0, 0.29411764705882354
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,output+=(String.format("\n0\n")); ,EXPRESSION_STATEMENT, line no: 205, 2.550013915501096E-4, insert, 0.024390243902439025, 0.0, 0.29411764705882354
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,System.out.println(mainClass.output); ,EXPRESSION_STATEMENT, line no: 56, 2.506586543653295E-4, insert, 0.06290115532734275, 0.0, 0.2631578947368421
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,System.out.println(mainClass.output); ,EXPRESSION_STATEMENT, line no: 56, 2.506586543653295E-4, insert, 0.06290115532734275, 0.0, 0.2631578947368421
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,System.out.println(mainClass.output); ,EXPRESSION_STATEMENT, line no: 56, 2.506586543653295E-4, insert, 0.06290115532734275, 0.0, 0.2631578947368421
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,System.out.println(mainClass.output); ,EXPRESSION_STATEMENT, line no: 56, 2.506586543653295E-4, insert, 0.06290115532734275, 0.0, 0.2631578947368421
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,output+=(String.format("\n0\n")); ,EXPRESSION_STATEMENT, line no: 205, 2.480973256992041E-4, insert, 0.024390243902439025, 0.0, 0.2857142857142857
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 2.474555984734864E-4, insert, 0.06290115532734275, 0.0, 0.25925925925925924
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,output+=(String.format("\n%d\n%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 195, 2.4679155030078725E-4, insert, 0.029525032092426188, 1.6, 0.2807017543859649
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,output+=(String.format("\n%d\n%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 195, 2.4679155030078725E-4, insert, 0.029525032092426188, 0.6666666666666666, 0.2807017543859649
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,output+=(String.format("\n%d\n%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 195, 2.4679155030078725E-4, insert, 0.029525032092426188, 0.6666666666666666, 0.2807017543859649
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,output+=(String.format("\n%d\n%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 195, 2.4679155030078725E-4, insert, 0.029525032092426188, 0.6666666666666666, 0.2807017543859649
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,output+=(String.format("\n%d\n%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 195, 2.4679155030078725E-4, insert, 0.029525032092426188, 0.6666666666666666, 0.2807017543859649
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,output+=(String.format("\n%d\n%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 195, 2.4679155030078725E-4, insert, 0.029525032092426188, 0.6666666666666666, 0.2807017543859649
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,output+=(String.format("\n%d\n%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 195, 2.4679155030078725E-4, insert, 0.029525032092426188, 0.6666666666666666, 0.2807017543859649
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,output+=(String.format("\n%d\n%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 195, 2.4679155030078725E-4, insert, 0.029525032092426188, 0.6666666666666666, 0.2807017543859649
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,value=i; ,EXPRESSION_STATEMENT, line no: 7, 2.4624468709974083E-4, insert, 0.005134788189987163, 0.3333333333333333, 0.2962962962962963
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,System.out.println(mainClass.output); ,EXPRESSION_STATEMENT, line no: 56, 2.4511490378329343E-4, insert, 0.06290115532734275, 0.0, 0.2564102564102564
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 122, 2.4281534298677517E-4, insert, 0.029525032092426188, 1.6, 0.27586206896551724
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 122, 2.4281534298677517E-4, insert, 0.029525032092426188, 0.6666666666666666, 0.27586206896551724
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 122, 2.4281534298677517E-4, insert, 0.029525032092426188, 0.6666666666666666, 0.27586206896551724
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 122, 2.4281534298677517E-4, insert, 0.029525032092426188, 0.6666666666666666, 0.27586206896551724
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 122, 2.4281534298677517E-4, insert, 0.029525032092426188, 0.6666666666666666, 0.27586206896551724
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 122, 2.4281534298677517E-4, insert, 0.029525032092426188, 0.6666666666666666, 0.27586206896551724
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 122, 2.4281534298677517E-4, insert, 0.029525032092426188, 0.6666666666666666, 0.27586206896551724
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 122, 2.4281534298677517E-4, insert, 0.029525032092426188, 0.6666666666666666, 0.27586206896551724
output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64,if (args.length > 0) {   mainClass.scanner=new java.util.Scanner(args[0]); }  else {   mainClass.scanner=new java.util.Scanner(System.in); } ,IF_STATEMENT, line no: 50, 2.3649556000188382E-4, insert, 0.03139810426540284, 0.0, 0.15602836879432624
num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (args.length > 0) {   mainClass.scanner=new java.util.Scanner(args[0]); }  else {   mainClass.scanner=new java.util.Scanner(System.in); } ,IF_STATEMENT, line no: 50, 2.3649556000188382E-4, insert, 0.03139810426540284, 0.5, 0.15602836879432624
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,output+=(String.format("\n0\n")); ,EXPRESSION_STATEMENT, line no: 205, 2.3540877224348603E-4, insert, 0.024390243902439025, 0.0, 0.2702702702702703
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,System.out.println(mainClass.output); ,EXPRESSION_STATEMENT, line no: 56, 2.3483868319220213E-4, insert, 0.06290115532734275, 0.0, 0.24390243902439024
scanner,SIMPLE_NAME, line no: 65,mainClass.output,QUALIFIED_NAME, line no: 56, 2.3337189542450013E-4, insert, 0.03252513305736251, 0.0, 0.125
String,SIMPLE_NAME, line no: 64,mainClass.output,QUALIFIED_NAME, line no: 56, 2.3335150646869884E-4, insert, 0.03250591016548463, 0.0, 0.125
String,SIMPLE_NAME, line no: 210,mainClass.output,QUALIFIED_NAME, line no: 56, 2.3335150646869884E-4, insert, 0.03250591016548463, 0.0, 0.125
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 190, 2.288421607856262E-4, insert, 0.03209242618741977, 1.6666666666666665, 0.2571428571428571
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 117, 2.2586660564425005E-4, insert, 0.03209242618741977, 1.6666666666666665, 0.2535211267605634
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,System.out.println(mainClass.output); ,EXPRESSION_STATEMENT, line no: 56, 2.2551839009795656E-4, insert, 0.06290115532734275, 0.0, 0.23255813953488372
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,output+=(String.format("\n0\n")); ,EXPRESSION_STATEMENT, line no: 205, 2.2402160888579023E-4, insert, 0.024390243902439025, 0.0, 0.2564102564102564
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,i,SIMPLE_NAME, line no: 7, 2.2318841365842677E-4, insert, 0.0035460992907801418, 0.0, 0.03125
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 2.227522252159328E-4, insert, 0.01668806161745828, 0.0, 0.26
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 2.227522252159328E-4, insert, 0.01668806161745828, 0.0, 0.26
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 2.227522252159328E-4, insert, 0.01668806161745828, 0.0, 0.26
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 2.227522252159328E-4, insert, 0.01668806161745828, 0.0, 0.26
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 2.227522252159328E-4, insert, 0.01668806161745828, 0.0, 0.26
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 2.227522252159328E-4, insert, 0.01668806161745828, 0.0, 0.26
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 2.227522252159328E-4, insert, 0.01668806161745828, 0.0, 0.26
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 2.227522252159328E-4, insert, 0.01668806161745828, 0.0, 0.26
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 2.227522252159328E-4, insert, 0.01668806161745828, 0.0, 0.26
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 190, 2.1710524883908694E-4, insert, 0.03209242618741977, 1.6666666666666665, 0.24285714285714285
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 190, 2.1710524883908694E-4, insert, 0.03209242618741977, 1.6666666666666665, 0.24285714285714285
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 190, 2.1710524883908694E-4, insert, 0.03209242618741977, 0.7142857142857142, 0.24285714285714285
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 190, 2.1710524883908694E-4, insert, 0.03209242618741977, 0.7142857142857142, 0.24285714285714285
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 190, 2.1710524883908694E-4, insert, 0.03209242618741977, 0.7142857142857142, 0.24285714285714285
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 190, 2.1710524883908694E-4, insert, 0.03209242618741977, 0.7142857142857142, 0.24285714285714285
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 190, 2.1710524883908694E-4, insert, 0.03209242618741977, 0.7142857142857142, 0.24285714285714285
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 190, 2.1710524883908694E-4, insert, 0.03209242618741977, 0.7142857142857142, 0.24285714285714285
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,System.out.println(mainClass.output); ,EXPRESSION_STATEMENT, line no: 56, 2.1702656750097725E-4, insert, 0.06290115532734275, 0.0, 0.2222222222222222
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 117, 2.142950023166761E-4, insert, 0.03209242618741977, 1.6666666666666665, 0.23943661971830985
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 117, 2.142950023166761E-4, insert, 0.03209242618741977, 1.6666666666666665, 0.23943661971830985
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 117, 2.142950023166761E-4, insert, 0.03209242618741977, 0.7142857142857142, 0.23943661971830985
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 117, 2.142950023166761E-4, insert, 0.03209242618741977, 0.7142857142857142, 0.23943661971830985
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 117, 2.142950023166761E-4, insert, 0.03209242618741977, 0.7142857142857142, 0.23943661971830985
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 117, 2.142950023166761E-4, insert, 0.03209242618741977, 0.7142857142857142, 0.23943661971830985
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 117, 2.142950023166761E-4, insert, 0.03209242618741977, 0.7142857142857142, 0.23943661971830985
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 117, 2.142950023166761E-4, insert, 0.03209242618741977, 0.7142857142857142, 0.23943661971830985
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,output+=(String.format("\n0\n")); ,EXPRESSION_STATEMENT, line no: 205, 2.1374538829469893E-4, insert, 0.024390243902439025, 0.0, 0.24390243902439024
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,java.util,QUALIFIED_NAME, line no: 44, 2.1078426877125584E-4, insert, 5.91016548463357E-4, 0.0, 0.125
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,System.in,QUALIFIED_NAME, line no: 53, 2.1015740105743798E-4, insert, 0.010638297872340425, 0.0, 0.125
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,System.out.println(mainClass.output); ,EXPRESSION_STATEMENT, line no: 56, 2.092574532101238E-4, insert, 0.06290115532734275, 0.0, 0.2127659574468085
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 2.0872774087211102E-4, insert, 0.06290115532734275, 0.0, 0.21212121212121213
absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66,if (args.length > 0) {   mainClass.scanner=new java.util.Scanner(args[0]); }  else {   mainClass.scanner=new java.util.Scanner(System.in); } ,IF_STATEMENT, line no: 50, 2.0806084050310563E-4, insert, 0.03139810426540284, 0.0, 0.1347517730496454
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,output+=(String.format("\n0\n")); ,EXPRESSION_STATEMENT, line no: 205, 2.0442509520045336E-4, insert, 0.024390243902439025, 0.0, 0.23255813953488372
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,value=i; ,EXPRESSION_STATEMENT, line no: 7, 2.019842784124547E-4, insert, 0.005134788189987163, 0.3333333333333333, 0.24242424242424243
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 1.994398075244692E-4, insert, 0.01797175866495507, 0.0, 0.23076923076923078
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 1.994398075244692E-4, insert, 0.01797175866495507, 0.0, 0.23076923076923078
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 1.994398075244692E-4, insert, 0.01797175866495507, 0.0, 0.23076923076923078
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 1.994398075244692E-4, insert, 0.01797175866495507, 0.0, 0.23076923076923078
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 1.994398075244692E-4, insert, 0.01797175866495507, 0.0, 0.23076923076923078
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 1.994398075244692E-4, insert, 0.01797175866495507, 0.0, 0.23076923076923078
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 1.994398075244692E-4, insert, 0.01797175866495507, 0.0, 0.23076923076923078
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 1.994398075244692E-4, insert, 0.01797175866495507, 0.0, 0.23076923076923078
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 1.994398075244692E-4, insert, 0.01797175866495507, 0.0, 0.23076923076923078
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 1.9876914891747165E-4, insert, 0.06290115532734275, 0.0, 0.2
nextInt,SIMPLE_NAME, line no: 65,java.util.Scanner,QUALIFIED_NAME, line no: 51, 1.9846561602962596E-4, insert, 0.010053222945002957, 0.0, 0.11764705882352941
format,SIMPLE_NAME, line no: 64,java.util.Scanner,QUALIFIED_NAME, line no: 51, 1.9845894328045466E-4, insert, 0.01004728132387707, 0.0, 0.11764705882352941
format,SIMPLE_NAME, line no: 210,java.util.Scanner,QUALIFIED_NAME, line no: 51, 1.9845894328045466E-4, insert, 0.01004728132387707, 0.0, 0.11764705882352941
nextInt,SIMPLE_NAME, line no: 65,mainClass.scanner,QUALIFIED_NAME, line no: 51, 1.978383776075208E-4, insert, 0.009461856889414548, 0.0, 0.11764705882352941
String,SIMPLE_NAME, line no: 64,mainClass.scanner,QUALIFIED_NAME, line no: 51, 1.978320755666368E-4, insert, 0.009456264775413711, 0.0, 0.11764705882352941
format,SIMPLE_NAME, line no: 64,mainClass.scanner,QUALIFIED_NAME, line no: 51, 1.978320755666368E-4, insert, 0.009456264775413711, 0.0, 0.11764705882352941
String,SIMPLE_NAME, line no: 210,mainClass.scanner,QUALIFIED_NAME, line no: 51, 1.978320755666368E-4, insert, 0.009456264775413711, 0.0, 0.11764705882352941
format,SIMPLE_NAME, line no: 210,mainClass.scanner,QUALIFIED_NAME, line no: 51, 1.978320755666368E-4, insert, 0.009456264775413711, 0.0, 0.11764705882352941
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 184, 1.9715877327087914E-4, insert, 0.03465982028241335, 1.7142857142857142, 0.21686746987951808
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 184, 1.9715877327087914E-4, insert, 0.03465982028241335, 1.7142857142857142, 0.21686746987951808
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,output+=(String.format("\n0\n")); ,EXPRESSION_STATEMENT, line no: 205, 1.9593327260347405E-4, insert, 0.024390243902439025, 0.0, 0.2222222222222222
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 111, 1.950376446058419E-4, insert, 0.03465982028241335, 1.7142857142857142, 0.21428571428571427
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 111, 1.950376446058419E-4, insert, 0.03465982028241335, 1.7142857142857142, 0.21428571428571427
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208, 1.9305158761873939E-4, insert, 0.011553273427471117, 0.0, 0.22727272727272727
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208, 1.9305158761873939E-4, insert, 0.011553273427471117, 0.0, 0.22727272727272727
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208, 1.9305158761873939E-4, insert, 0.011553273427471117, 0.0, 0.22727272727272727
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208, 1.9305158761873939E-4, insert, 0.011553273427471117, 0.0, 0.22727272727272727
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208, 1.9305158761873939E-4, insert, 0.011553273427471117, 0.0, 0.22727272727272727
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208, 1.9305158761873939E-4, insert, 0.011553273427471117, 0.0, 0.22727272727272727
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208, 1.9305158761873939E-4, insert, 0.011553273427471117, 0.0, 0.22727272727272727
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,value=i; ,EXPRESSION_STATEMENT, line no: 7, 1.906030304642954E-4, insert, 0.005134788189987163, 0.3333333333333333, 0.22857142857142856
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 1.89887161498469E-4, insert, 0.06290115532734275, 0.0, 0.1891891891891892
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208, 1.889021743043063E-4, insert, 0.011553273427471117, 0.0, 0.2222222222222222
scanner,SIMPLE_NAME, line no: 65,java.util,QUALIFIED_NAME, line no: 44, 1.8869422531663484E-4, insert, 5.913660555884093E-4, 0.0, 0.1111111111111111
nextInt,SIMPLE_NAME, line no: 65,java.util,QUALIFIED_NAME, line no: 44, 1.8869422531663484E-4, insert, 5.913660555884093E-4, 0.0, 0.1111111111111111
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,output+=(String.format("\n0\n")); ,EXPRESSION_STATEMENT, line no: 205, 1.881641583126206E-4, insert, 0.024390243902439025, 0.0, 0.2127659574468085
format,SIMPLE_NAME, line no: 64,System.in,QUALIFIED_NAME, line no: 53, 1.8806031414535837E-4, insert, 0.010638297872340425, 0.0, 0.1111111111111111
format,SIMPLE_NAME, line no: 210,System.in,QUALIFIED_NAME, line no: 53, 1.8806031414535837E-4, insert, 0.010638297872340425, 0.0, 0.1111111111111111
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 184, 1.872601728340388E-4, insert, 0.03465982028241335, 1.7142857142857142, 0.20481927710843373
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 184, 1.872601728340388E-4, insert, 0.03465982028241335, 1.7142857142857142, 0.20481927710843373
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 184, 1.872601728340388E-4, insert, 0.03465982028241335, 0.75, 0.20481927710843373
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 184, 1.872601728340388E-4, insert, 0.03465982028241335, 0.75, 0.20481927710843373
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 184, 1.872601728340388E-4, insert, 0.03465982028241335, 0.75, 0.20481927710843373
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 184, 1.872601728340388E-4, insert, 0.03465982028241335, 0.75, 0.20481927710843373
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 184, 1.872601728340388E-4, insert, 0.03465982028241335, 0.75, 0.20481927710843373
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 111, 1.8525688465039256E-4, insert, 0.03465982028241335, 1.7142857142857142, 0.20238095238095238
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 111, 1.8525688465039256E-4, insert, 0.03465982028241335, 1.7142857142857142, 0.20238095238095238
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 111, 1.8525688465039256E-4, insert, 0.03465982028241335, 0.75, 0.20238095238095238
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 111, 1.8525688465039256E-4, insert, 0.03465982028241335, 0.75, 0.20238095238095238
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 111, 1.8525688465039256E-4, insert, 0.03465982028241335, 0.75, 0.20238095238095238
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 111, 1.8525688465039256E-4, insert, 0.03465982028241335, 0.75, 0.20238095238095238
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 111, 1.8525688465039256E-4, insert, 0.03465982028241335, 0.75, 0.20238095238095238
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,mainClass.output,QUALIFIED_NAME, line no: 56, 1.836330609165197E-4, insert, 0.03250591016548463, 0.0, 0.09375
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 1.8191614714808195E-4, insert, 0.06290115532734275, 0.0, 0.1794871794871795
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208, 1.8113306001345288E-4, insert, 0.011553273427471117, 0.0, 0.2127659574468085
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,value=i; ,EXPRESSION_STATEMENT, line no: 7, 1.8045218769972095E-4, insert, 0.005134788189987163, 0.3333333333333333, 0.21621621621621623
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 1.747227927343181E-4, insert, 0.06290115532734275, 0.0, 0.17073170731707318
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 177, 1.7443715436591436E-4, insert, 0.037227214377406934, 1.75, 0.1875
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 177, 1.7443715436591436E-4, insert, 0.037227214377406934, 1.75, 0.1875
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 177, 1.7443715436591436E-4, insert, 0.037227214377406934, 1.75, 0.1875
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 105, 1.728490412803646E-4, insert, 0.037227214377406934, 1.75, 0.18556701030927836
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 105, 1.728490412803646E-4, insert, 0.037227214377406934, 1.75, 0.18556701030927836
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 105, 1.728490412803646E-4, insert, 0.037227214377406934, 1.75, 0.18556701030927836
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,value=i; ,EXPRESSION_STATEMENT, line no: 7, 1.7134245701356434E-4, insert, 0.005134788189987163, 0.3333333333333333, 0.20512820512820512
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 1.6819858756834613E-4, insert, 0.06290115532734275, 0.0, 0.16279069767441862
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 177, 1.6587898940489615E-4, insert, 0.037227214377406934, 1.75, 0.17708333333333334
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 177, 1.6587898940489615E-4, insert, 0.037227214377406934, 1.75, 0.17708333333333334
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 177, 1.6587898940489615E-4, insert, 0.037227214377406934, 0.7777777777777777, 0.17708333333333334
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 177, 1.6587898940489615E-4, insert, 0.037227214377406934, 0.7777777777777777, 0.17708333333333334
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 177, 1.6587898940489615E-4, insert, 0.037227214377406934, 0.7777777777777777, 0.17708333333333334
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 177, 1.6587898940489615E-4, insert, 0.037227214377406934, 0.7777777777777777, 0.17708333333333334
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 105, 1.6437910482409911E-4, insert, 0.037227214377406934, 1.75, 0.17525773195876287
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 105, 1.6437910482409911E-4, insert, 0.037227214377406934, 1.75, 0.17525773195876287
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 105, 1.6437910482409911E-4, insert, 0.037227214377406934, 0.7777777777777777, 0.17525773195876287
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 105, 1.6437910482409911E-4, insert, 0.037227214377406934, 0.7777777777777777, 0.17525773195876287
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 105, 1.6437910482409911E-4, insert, 0.037227214377406934, 0.7777777777777777, 0.17525773195876287
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 105, 1.6437910482409911E-4, insert, 0.037227214377406934, 0.7777777777777777, 0.17525773195876287
"Enter an integer > ",STRING_LITERAL, line no: 64,java.util,QUALIFIED_NAME, line no: 44, 1.6343336824537093E-4, insert, 5.91016548463357E-4, 0.0, 0.09523809523809523
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,value=i; ,EXPRESSION_STATEMENT, line no: 7, 1.631214805406913E-4, insert, 0.005134788189987163, 0.3333333333333333, 0.1951219512195122
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 1.6225431175046062E-4, insert, 0.06290115532734275, 0.0, 0.15555555555555556
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 172, 1.5747079970576384E-4, insert, 0.03979460847240052, 1.7777777777777777, 0.1651376146788991
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 172, 1.5747079970576384E-4, insert, 0.03979460847240052, 1.7777777777777777, 0.1651376146788991
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 172, 1.5747079970576384E-4, insert, 0.03979460847240052, 1.7777777777777777, 0.1651376146788991
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 172, 1.5747079970576384E-4, insert, 0.03979460847240052, 1.7777777777777777, 0.1651376146788991
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 1.568159317468632E-4, insert, 0.06290115532734275, 0.0, 0.14893617021276595
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 100, 1.5623739611505164E-4, insert, 0.03979460847240052, 1.7777777777777777, 0.16363636363636364
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 100, 1.5623739611505164E-4, insert, 0.03979460847240052, 1.7777777777777777, 0.16363636363636364
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 100, 1.5623739611505164E-4, insert, 0.03979460847240052, 1.7777777777777777, 0.16363636363636364
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 100, 1.5623739611505164E-4, insert, 0.03979460847240052, 1.7777777777777777, 0.16363636363636364
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,value=i; ,EXPRESSION_STATEMENT, line no: 7, 1.5566524606529483E-4, insert, 0.005134788189987163, 0.3333333333333333, 0.18604651162790697
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 172, 1.499333333180781E-4, insert, 0.03979460847240052, 1.7777777777777777, 0.1559633027522936
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 172, 1.499333333180781E-4, insert, 0.03979460847240052, 1.7777777777777777, 0.1559633027522936
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 172, 1.499333333180781E-4, insert, 0.03979460847240052, 0.8, 0.1559633027522936
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 172, 1.499333333180781E-4, insert, 0.03979460847240052, 0.8, 0.1559633027522936
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 172, 1.499333333180781E-4, insert, 0.03979460847240052, 0.8, 0.1559633027522936
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,value=i; ,EXPRESSION_STATEMENT, line no: 7, 1.488717879877114E-4, insert, 0.005134788189987163, 0.3333333333333333, 0.17777777777777778
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 100, 1.4876845214907209E-4, insert, 0.03979460847240052, 1.7777777777777777, 0.15454545454545454
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 100, 1.4876845214907209E-4, insert, 0.03979460847240052, 1.7777777777777777, 0.15454545454545454
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 100, 1.4876845214907209E-4, insert, 0.03979460847240052, 0.8, 0.15454545454545454
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 100, 1.4876845214907209E-4, insert, 0.03979460847240052, 0.8, 0.15454545454545454
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 100, 1.4876845214907209E-4, insert, 0.03979460847240052, 0.8, 0.15454545454545454
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 166, 1.4441991170397058E-4, insert, 0.04236200256739409, 1.8, 0.14754098360655737
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 166, 1.4441991170397058E-4, insert, 0.04236200256739409, 1.8, 0.14754098360655737
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 166, 1.4441991170397058E-4, insert, 0.04236200256739409, 1.8, 0.14754098360655737
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 166, 1.4441991170397058E-4, insert, 0.04236200256739409, 1.8, 0.14754098360655737
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 166, 1.4441991170397058E-4, insert, 0.04236200256739409, 1.8, 0.14754098360655737
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148, 1.44097102745518E-4, insert, 1.0, 0.75, 0.2102803738317757
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,d9.value=(absnum.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 76, 1.4395648077953466E-4, insert, 0.9987163029525032, 0.46153846153846156, 0.2102803738317757
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 94, 1.4343440530302165E-4, insert, 0.04236200256739409, 1.8, 0.14634146341463414
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 94, 1.4343440530302165E-4, insert, 0.04236200256739409, 1.8, 0.14634146341463414
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 94, 1.4343440530302165E-4, insert, 0.04236200256739409, 1.8, 0.14634146341463414
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 94, 1.4343440530302165E-4, insert, 0.04236200256739409, 1.8, 0.14634146341463414
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 94, 1.4343440530302165E-4, insert, 0.04236200256739409, 1.8, 0.14634146341463414
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,value=i; ,EXPRESSION_STATEMENT, line no: 7, 1.4265649655502863E-4, insert, 0.005134788189987163, 0.3333333333333333, 0.1702127659574468
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147, 1.4256143202354092E-4, insert, 1.0, 0.75, 0.20093457943925233
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,d8.value=(absnum.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 75, 1.4242081005755753E-4, insert, 0.9987163029525032, 0.46153846153846156, 0.20093457943925233
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146, 1.4102576130156378E-4, insert, 1.0, 0.75, 0.19158878504672897
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,d7.value=(absnum.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 74, 1.4088513933558044E-4, insert, 0.9987163029525032, 0.46153846153846156, 0.19158878504672897
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145, 1.394900905795867E-4, insert, 1.0, 0.75, 0.1822429906542056
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,d6.value=(absnum.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 73, 1.3934946861360336E-4, insert, 0.9987163029525032, 0.46153846153846156, 0.1822429906542056
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144, 1.3795441985760962E-4, insert, 1.0, 0.75, 0.17289719626168223
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,d5.value=(absnum.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 72, 1.3781379789162623E-4, insert, 0.9987163029525032, 0.46153846153846156, 0.17289719626168223
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 166, 1.3768561796415296E-4, insert, 0.04236200256739409, 1.8, 0.13934426229508196
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 166, 1.3768561796415296E-4, insert, 0.04236200256739409, 1.8, 0.13934426229508196
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 166, 1.3768561796415296E-4, insert, 0.04236200256739409, 0.8181818181818182, 0.13934426229508196
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 166, 1.3768561796415296E-4, insert, 0.04236200256739409, 0.8181818181818182, 0.13934426229508196
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 94, 1.3675486191881234E-4, insert, 0.04236200256739409, 1.8, 0.13821138211382114
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 94, 1.3675486191881234E-4, insert, 0.04236200256739409, 1.8, 0.13821138211382114
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 94, 1.3675486191881234E-4, insert, 0.04236200256739409, 0.8181818181818182, 0.13821138211382114
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 94, 1.3675486191881234E-4, insert, 0.04236200256739409, 0.8181818181818182, 0.13821138211382114
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143, 1.364187491356325E-4, insert, 1.0, 0.75, 0.16355140186915887
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,d4.value=(absnum.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 71, 1.3627812716964915E-4, insert, 0.9987163029525032, 0.46153846153846156, 0.16355140186915887
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); ,EXPRESSION_STATEMENT, line no: 132, 1.3588248490761928E-4, insert, 0.06290115532734275, 1.8461538461538463, 0.12345679012345678
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); ,EXPRESSION_STATEMENT, line no: 132, 1.3588248490761928E-4, insert, 0.06290115532734275, 1.8461538461538463, 0.12345679012345678
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); ,EXPRESSION_STATEMENT, line no: 132, 1.3588248490761928E-4, insert, 0.06290115532734275, 1.8461538461538463, 0.12345679012345678
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); ,EXPRESSION_STATEMENT, line no: 132, 1.3588248490761928E-4, insert, 0.06290115532734275, 1.8461538461538463, 0.12345679012345678
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); ,EXPRESSION_STATEMENT, line no: 132, 1.3588248490761928E-4, insert, 0.06290115532734275, 1.8461538461538463, 0.12345679012345678
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); ,EXPRESSION_STATEMENT, line no: 132, 1.3588248490761928E-4, insert, 0.06290115532734275, 1.8461538461538463, 0.12345679012345678
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); ,EXPRESSION_STATEMENT, line no: 132, 1.3588248490761928E-4, insert, 0.06290115532734275, 1.8461538461538463, 0.12345679012345678
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142, 1.348830784136554E-4, insert, 1.0, 0.75, 0.1542056074766355
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,d3.value=(absnum.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 70, 1.3474245644767204E-4, insert, 0.9987163029525032, 0.46153846153846156, 0.1542056074766355
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 160, 1.3415335554812024E-4, insert, 0.044929396662387676, 1.8181818181818183, 0.13333333333333333
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 160, 1.3415335554812024E-4, insert, 0.044929396662387676, 1.8181818181818183, 0.13333333333333333
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 160, 1.3415335554812024E-4, insert, 0.044929396662387676, 1.8181818181818183, 0.13333333333333333
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 160, 1.3415335554812024E-4, insert, 0.044929396662387676, 1.8181818181818183, 0.13333333333333333
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 160, 1.3415335554812024E-4, insert, 0.044929396662387676, 1.8181818181818183, 0.13333333333333333
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 160, 1.3415335554812024E-4, insert, 0.044929396662387676, 1.8181818181818183, 0.13333333333333333
"That's all  have a nice day!\n",STRING_LITERAL, line no: 210,System.out,QUALIFIED_NAME, line no: 56, 1.339146153643406E-4, insert, 0.03250591016548463, 0.0, 0.0625
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 88, 1.3334788119884794E-4, insert, 0.044929396662387676, 1.8181818181818183, 0.1323529411764706
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 88, 1.3334788119884794E-4, insert, 0.044929396662387676, 1.8181818181818183, 0.1323529411764706
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 88, 1.3334788119884794E-4, insert, 0.044929396662387676, 1.8181818181818183, 0.1323529411764706
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 88, 1.3334788119884794E-4, insert, 0.044929396662387676, 1.8181818181818183, 0.1323529411764706
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 88, 1.3334788119884794E-4, insert, 0.044929396662387676, 1.8181818181818183, 0.1323529411764706
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 88, 1.3334788119884794E-4, insert, 0.044929396662387676, 1.8181818181818183, 0.1323529411764706
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141, 1.333474076916783E-4, insert, 1.0, 0.75, 0.14485981308411214
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,d2.value=(absnum.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 69, 1.3320678572569493E-4, insert, 0.9987163029525032, 0.46153846153846156, 0.14485981308411214
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); ,EXPRESSION_STATEMENT, line no: 132, 1.308109797455344E-4, insert, 0.06290115532734275, 1.8461538461538463, 0.11728395061728394
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); ,EXPRESSION_STATEMENT, line no: 132, 1.308109797455344E-4, insert, 0.06290115532734275, 1.8461538461538463, 0.11728395061728394
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,output+=(String.format("That's all  have a nice day!\n")); ,EXPRESSION_STATEMENT, line no: 210, 1.302760662477241E-4, insert, 1.0, 0.0, 0.1261682242990654
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140, 1.2950823088673553E-4, insert, 1.0, 0.75, 0.12149532710280374
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,d1.value=(absnum.value % 10); ,EXPRESSION_STATEMENT, line no: 68, 1.293676089207522E-4, insert, 0.9987163029525032, 0.46153846153846156, 0.12149532710280374
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 160, 1.280675493536184E-4, insert, 0.044929396662387676, 1.8181818181818183, 0.1259259259259259
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 160, 1.280675493536184E-4, insert, 0.044929396662387676, 1.8181818181818183, 0.1259259259259259
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 160, 1.280675493536184E-4, insert, 0.044929396662387676, 0.8333333333333333, 0.1259259259259259
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 88, 1.2730682357930568E-4, insert, 0.044929396662387676, 1.8181818181818183, 0.125
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 88, 1.2730682357930568E-4, insert, 0.044929396662387676, 1.8181818181818183, 0.125
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 88, 1.2730682357930568E-4, insert, 0.044929396662387676, 0.8333333333333333, 0.125
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,absnum.value=(-num.value); ,EXPRESSION_STATEMENT, line no: 66, 1.2643688944278134E-4, insert, 1.0, 0.46153846153846156, 0.102803738317757
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 155, 1.259374221707009E-4, insert, 0.04749679075738126, 1.8333333333333333, 0.12162162162162163
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 155, 1.259374221707009E-4, insert, 0.04749679075738126, 1.8333333333333333, 0.12162162162162163
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 155, 1.259374221707009E-4, insert, 0.04749679075738126, 1.8333333333333333, 0.12162162162162163
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 155, 1.259374221707009E-4, insert, 0.04749679075738126, 1.8333333333333333, 0.12162162162162163
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 155, 1.259374221707009E-4, insert, 0.04749679075738126, 1.8333333333333333, 0.12162162162162163
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 155, 1.259374221707009E-4, insert, 0.04749679075738126, 1.8333333333333333, 0.12162162162162163
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 155, 1.259374221707009E-4, insert, 0.04749679075738126, 1.8333333333333333, 0.12162162162162163
d1.value=(num.value % 10); ,EXPRESSION_STATEMENT, line no: 140,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 83, 1.2526680231523927E-4, insert, 0.04749679075738126, 1.8333333333333333, 0.12080536912751678
d2.value=(num.value % 100) / 10; ,EXPRESSION_STATEMENT, line no: 141,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 83, 1.2526680231523927E-4, insert, 0.04749679075738126, 1.8333333333333333, 0.12080536912751678
d3.value=(num.value % 1000) / 100; ,EXPRESSION_STATEMENT, line no: 142,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 83, 1.2526680231523927E-4, insert, 0.04749679075738126, 1.8333333333333333, 0.12080536912751678
d4.value=(num.value % 10000) / 1000; ,EXPRESSION_STATEMENT, line no: 143,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 83, 1.2526680231523927E-4, insert, 0.04749679075738126, 1.8333333333333333, 0.12080536912751678
d5.value=(num.value % 100000) / 10000; ,EXPRESSION_STATEMENT, line no: 144,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 83, 1.2526680231523927E-4, insert, 0.04749679075738126, 1.8333333333333333, 0.12080536912751678
d6.value=(num.value % 1000000) / 100000; ,EXPRESSION_STATEMENT, line no: 145,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 83, 1.2526680231523927E-4, insert, 0.04749679075738126, 1.8333333333333333, 0.12080536912751678
d7.value=(num.value % 10000000) / 1000000; ,EXPRESSION_STATEMENT, line no: 146,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 83, 1.2526680231523927E-4, insert, 0.04749679075738126, 1.8333333333333333, 0.12080536912751678
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,output+=(String.format("Enter an integer > ")); ,EXPRESSION_STATEMENT, line no: 64, 1.241333833598157E-4, insert, 1.0, 0.0, 0.08878504672897196
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,num.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 1.2259771263783858E-4, insert, 1.0, 0.46153846153846156, 0.0794392523364486
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 155, 1.2038618003382422E-4, insert, 0.04749679075738126, 1.8333333333333333, 0.11486486486486487
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 155, 1.2038618003382422E-4, insert, 0.04749679075738126, 1.8333333333333333, 0.11486486486486487
d8.value=(num.value % 100000000) / 10000000; ,EXPRESSION_STATEMENT, line no: 147,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 83, 1.1975281683699935E-4, insert, 0.04749679075738126, 1.8333333333333333, 0.11409395973154363
d9.value=(num.value % 1000000000) / 100000000; ,EXPRESSION_STATEMENT, line no: 148,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 83, 1.1975281683699935E-4, insert, 0.04749679075738126, 1.8333333333333333, 0.11409395973154363
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value d10.value)); ,EXPRESSION_STATEMENT, line no: 132, 7.138864665622262E-5, insert, 0.06290115532734275, 10.153846153846153, 0.3925233644859813
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 83, 6.893334770343382E-5, insert, 0.04749679075738126, 8.461538461538462, 0.3878504672897196
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value d9.value)); ,EXPRESSION_STATEMENT, line no: 155, 6.816551234244527E-5, insert, 0.04749679075738126, 8.461538461538462, 0.38317757009345793
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 88, 6.25094208835587E-5, insert, 0.044929396662387676, 6.923076923076923, 0.35046728971962615
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value d8.value)); ,EXPRESSION_STATEMENT, line no: 160, 6.174158552257016E-5, insert, 0.044929396662387676, 6.923076923076923, 0.34579439252336447
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 94, 5.608549406368359E-5, insert, 0.04236200256739409, 5.538461538461538, 0.3130841121495327
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value d7.value)); ,EXPRESSION_STATEMENT, line no: 166, 5.5317658702695036E-5, insert, 0.04236200256739409, 5.538461538461538, 0.308411214953271
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 100, 4.9661567243808475E-5, insert, 0.03979460847240052, 4.3076923076923075, 0.2757009345794392
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value d6.value)); ,EXPRESSION_STATEMENT, line no: 172, 4.889373188281993E-5, insert, 0.03979460847240052, 4.3076923076923075, 0.27102803738317754
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,output+=(String.format("\n%d\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 105, 4.3237640423933367E-5, insert, 0.037227214377406934, 3.230769230769231, 0.2383177570093458
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,output+=(String.format("\n%d\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value d5.value)); ,EXPRESSION_STATEMENT, line no: 177, 4.246980506294481E-5, insert, 0.037227214377406934, 3.230769230769231, 0.2336448598130841
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,output+=(String.format("\n%d\n%d\n%d\n-%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 111, 3.75815489650468E-5, insert, 0.03465982028241335, 2.307692307692308, 0.205607476635514
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,output+=(String.format("\n%d\n%d\n%d\n%d\n" d1.value d2.value d3.value d4.value)); ,EXPRESSION_STATEMENT, line no: 184, 3.6813713604058245E-5, insert, 0.03465982028241335, 2.307692307692308, 0.20093457943925233
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,output+=(String.format("\n%d\n%d\n-%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 117, 3.192545750616023E-5, insert, 0.03209242618741977, 1.5384615384615385, 0.17289719626168223
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,output+=(String.format("\n%d\n%d\n%d\n" d1.value d2.value d3.value)); ,EXPRESSION_STATEMENT, line no: 190, 3.1157622145171684E-5, insert, 0.03209242618741977, 1.5384615384615385, 0.16822429906542055
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,output+=(String.format("\n%d\n-%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 122, 2.550153068628512E-5, insert, 0.029525032092426188, 0.9230769230769231, 0.13551401869158877
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,output+=(String.format("\n%d\n%d\n" d1.value d2.value)); ,EXPRESSION_STATEMENT, line no: 195, 2.473369532529657E-5, insert, 0.029525032092426188, 0.9230769230769231, 0.1308411214953271
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 2.0256134221508823E-5, insert, 0.01668806161745828, 0.0, 0.11214953271028037
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 1.9628920826503626E-5, insert, 0.01797175866495507, 0.0, 0.10747663551401869
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,System.out.println(mainClass.output); ,EXPRESSION_STATEMENT, line no: 56, 1.9175842109001185E-5, insert, 0.06290115532734275, 0.0, 0.07476635514018691
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,output+=(String.format("-%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 127, 1.907760386641001E-5, insert, 0.026957637997432605, 0.46153846153846156, 0.09813084112149532
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,output+=(String.format("\n%d\n" d1.value)); ,EXPRESSION_STATEMENT, line no: 200, 1.8309768505421457E-5, insert, 0.026957637997432605, 0.46153846153846156, 0.09345794392523364
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 1.533666530405843E-5, insert, 0.06290115532734275, 0.0, 0.0514018691588785
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,output+=(String.format("\n-2147483648\n")); ,EXPRESSION_STATEMENT, line no: 208, 1.3550963469667E-5, insert, 0.011553273427471117, 0.0, 0.07476635514018691
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,output+=(String.format("\n0\n")); ,EXPRESSION_STATEMENT, line no: 205, 1.1885841685546346E-5, insert, 0.024390243902439025, 0.0, 0.056074766355140186
d10.value=((num.value - d1.value - (d2.value * 10)- (d3.value * 100)- (d4.value * 1000)- (d5.value * 10000)- (d6.value * 100000)- (d7.value * 1000000)- (d8.value * 10000000)- (d9.value * 100000000)) / 1000000000); ,EXPRESSION_STATEMENT, line no: 149,value=i; ,EXPRESSION_STATEMENT, line no: 7, 6.705170751841823E-6, insert, 0.005134788189987163, 0.08333333333333333, 0.037383177570093455
