tmp.value=int2.value; ,EXPRESSION_STATEMENT, line no: 70,tmp.value=int2.value; ,EXPRESSION_STATEMENT, line no: 70, 5.697066666666666, insert, 1.0, 3.0, 1.0
tmp.value=int3.value; ,EXPRESSION_STATEMENT, line no: 72,tmp.value=int3.value; ,EXPRESSION_STATEMENT, line no: 72, 5.607750269189626, insert, 1.0, 3.0, 1.0
int1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,int1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64, 5.514512701892219, insert, 1.0, 3.0, 1.0
int2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,int2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 5.514512701892219, insert, 1.0, 3.0, 1.0
int3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,int3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66, 5.514512701892219, insert, 1.0, 3.0, 1.0
int4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,int4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67, 5.514512701892219, insert, 1.0, 3.0, 1.0
tmp.value=int1.value; ,EXPRESSION_STATEMENT, line no: 68,tmp.value=int1.value; ,EXPRESSION_STATEMENT, line no: 68, 5.514512701892219, insert, 1.0, 3.0, 1.0
output+=(String.format("%d is the smallest\n" tmp.value)); ,EXPRESSION_STATEMENT, line no: 76,output+=(String.format("%d is the smallest\n" tmp.value)); ,EXPRESSION_STATEMENT, line no: 76, 5.514512701892219, insert, 1.0, 3.0, 1.0
tmp.value=int2.value; ,EXPRESSION_STATEMENT, line no: 70,if (int1.value > int2.value) {   tmp.value=int2.value; }  else if (tmp.value > int3.value) {   tmp.value=int3.value; }  else if (tmp.value > int4.value) {   tmp.value=int4.value; } ,IF_STATEMENT, line no: 69, 4.802313627992634, insert, 1.0, 3.0, 0.12154696132596685
tmp.value=int3.value; ,EXPRESSION_STATEMENT, line no: 72,if (tmp.value > int3.value) {   tmp.value=int3.value; }  else if (tmp.value > int4.value) {   tmp.value=int4.value; } ,IF_STATEMENT, line no: 71, 4.777890947155727, insert, 1.0, 3.0, 0.1864406779661017
tmp.value=int3.value; ,EXPRESSION_STATEMENT, line no: 72,if (int1.value > int2.value) {   tmp.value=int2.value; }  else if (tmp.value > int3.value) {   tmp.value=int3.value; }  else if (tmp.value > int4.value) {   tmp.value=int4.value; } ,IF_STATEMENT, line no: 69, 4.712997230515592, insert, 1.0, 3.0, 0.12154696132596685
tmp.value=int1.value; ,EXPRESSION_STATEMENT, line no: 68,if (int1.value > int2.value) {   tmp.value=int2.value; }  else if (tmp.value > int3.value) {   tmp.value=int3.value; }  else if (tmp.value > int4.value) {   tmp.value=int4.value; } ,IF_STATEMENT, line no: 69, 4.5553348013397335, insert, 1.0, 3.0, 0.11602209944751381
tmp.value,QUALIFIED_NAME, line no: 76,tmp.value,QUALIFIED_NAME, line no: 68, 4.440512701892219, insert, 0.9848484848484849, 2.0, 1.0
tmp.value=int2.value; ,EXPRESSION_STATEMENT, line no: 70,tmp.value=int1.value; ,EXPRESSION_STATEMENT, line no: 68, 4.151612121212121, insert, 1.0, 1.5, 0.9545454545454546
tmp.value=int2.value; ,EXPRESSION_STATEMENT, line no: 70,tmp.value=int3.value; ,EXPRESSION_STATEMENT, line no: 72, 4.151612121212121, insert, 1.0, 1.5, 0.9545454545454546
tmp.value=int2.value; ,EXPRESSION_STATEMENT, line no: 70,tmp.value=int4.value; ,EXPRESSION_STATEMENT, line no: 74, 4.151612121212121, insert, 1.0, 1.5, 0.9545454545454546
tmp.value=int3.value; ,EXPRESSION_STATEMENT, line no: 72,tmp.value=int1.value; ,EXPRESSION_STATEMENT, line no: 68, 4.0622957237350805, insert, 1.0, 1.5, 0.9545454545454546
tmp.value=int3.value; ,EXPRESSION_STATEMENT, line no: 72,tmp.value=int4.value; ,EXPRESSION_STATEMENT, line no: 74, 4.0622957237350805, insert, 1.0, 1.5, 0.9545454545454546
int1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,int2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 3.981179368558886, insert, 1.0, 1.5, 0.9666666666666667
int1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,int3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66, 3.981179368558886, insert, 1.0, 1.5, 0.9666666666666667
int1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,int4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67, 3.981179368558886, insert, 1.0, 1.5, 0.9666666666666667
int2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,int1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64, 3.981179368558886, insert, 1.0, 1.5, 0.9666666666666667
int2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,int3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66, 3.981179368558886, insert, 1.0, 1.5, 0.9666666666666667
int2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,int4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67, 3.981179368558886, insert, 1.0, 1.5, 0.9666666666666667
int3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,int1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64, 3.981179368558886, insert, 1.0, 1.5, 0.9666666666666667
int3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,int2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 3.981179368558886, insert, 1.0, 1.5, 0.9666666666666667
int3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,int4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67, 3.981179368558886, insert, 1.0, 1.5, 0.9666666666666667
int4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,int1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64, 3.981179368558886, insert, 1.0, 1.5, 0.9666666666666667
int4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,int2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 3.981179368558886, insert, 1.0, 1.5, 0.9666666666666667
int4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,int3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66, 3.981179368558886, insert, 1.0, 1.5, 0.9666666666666667
tmp.value=int3.value; ,EXPRESSION_STATEMENT, line no: 72,tmp.value=int2.value; ,EXPRESSION_STATEMENT, line no: 70, 3.9622957237350804, insert, 0.9, 1.5, 0.9545454545454546
tmp.value=int2.value; ,EXPRESSION_STATEMENT, line no: 70,int2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 3.6304, insert, 1.0, 1.5, 0.43333333333333335
tmp.value=int2.value; ,EXPRESSION_STATEMENT, line no: 70,if (tmp.value > int4.value) {   tmp.value=int4.value; } ,IF_STATEMENT, line no: 73, 3.5557666666666665, insert, 1.0, 1.5, 0.375
tmp.value=int3.value; ,EXPRESSION_STATEMENT, line no: 72,int3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66, 3.541083602522959, insert, 1.0, 1.5, 0.43333333333333335
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62, 3.5145127018922193, insert, 1.0, 1.0, 1.0
tmp.value=int2.value; ,EXPRESSION_STATEMENT, line no: 70,output+=(String.format("%d is the smallest\n" tmp.value)); ,EXPRESSION_STATEMENT, line no: 76, 3.4682531073446325, insert, 1.0, 1.5, 0.2711864406779661
tmp.value=int3.value; ,EXPRESSION_STATEMENT, line no: 72,if (tmp.value > int4.value) {   tmp.value=int4.value; } ,IF_STATEMENT, line no: 73, 3.4664502691896257, insert, 1.0, 1.5, 0.375
scanner,SIMPLE_NAME, line no: 64,scanner,SIMPLE_NAME, line no: 51, 3.4643127018922195, insert, 0.12213740458015267, 1.0, 1.0
scanner,SIMPLE_NAME, line no: 65,scanner,SIMPLE_NAME, line no: 51, 3.4643127018922195, insert, 0.12213740458015267, 1.0, 1.0
scanner,SIMPLE_NAME, line no: 66,scanner,SIMPLE_NAME, line no: 51, 3.4643127018922195, insert, 0.12213740458015267, 1.0, 1.0
scanner,SIMPLE_NAME, line no: 67,scanner,SIMPLE_NAME, line no: 51, 3.4643127018922195, insert, 0.12213740458015267, 1.0, 1.0
tmp,SIMPLE_NAME, line no: 76,tmp,SIMPLE_NAME, line no: 61, 3.4643127018922195, insert, 0.9624060150375939, 1.0, 1.0
value,SIMPLE_NAME, line no: 76,value,SIMPLE_NAME, line no: 7, 3.4643127018922195, insert, 0.045112781954887216, 1.0, 1.0
tmp.value=int2.value; ,EXPRESSION_STATEMENT, line no: 70,if (tmp.value > int3.value) {   tmp.value=int3.value; }  else if (tmp.value > int4.value) {   tmp.value=int4.value; } ,IF_STATEMENT, line no: 71, 3.458732768361582, insert, 1.0, 1.6, 0.17796610169491525
int1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,tmp.value=int1.value; ,EXPRESSION_STATEMENT, line no: 68, 3.4478460352255524, insert, 1.0, 1.5, 0.43333333333333335
tmp.value=int1.value; ,EXPRESSION_STATEMENT, line no: 68,int1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64, 3.4478460352255524, insert, 1.0, 1.5, 0.43333333333333335
tmp.value=int3.value; ,EXPRESSION_STATEMENT, line no: 72,output+=(String.format("%d is the smallest\n" tmp.value)); ,EXPRESSION_STATEMENT, line no: 76, 3.3789367098675918, insert, 1.0, 1.5, 0.2711864406779661
output+=(String.format("%d is the smallest\n" tmp.value)); ,EXPRESSION_STATEMENT, line no: 76,if (int1.value > int2.value) {   tmp.value=int2.value; }  else if (tmp.value > int3.value) {   tmp.value=int3.value; }  else if (tmp.value > int4.value) {   tmp.value=int4.value; } ,IF_STATEMENT, line no: 69, 3.34696858192379, insert, 1.0, 1.7142857142857142, 0.19337016574585636
output+=(String.format("%d is the smallest\n" tmp.value)); ,EXPRESSION_STATEMENT, line no: 76,if (tmp.value > int4.value) {   tmp.value=int4.value; } ,IF_STATEMENT, line no: 73, 3.3460923629091686, insert, 1.0, 1.5, 0.4067796610169492
tmp.value=int1.value; ,EXPRESSION_STATEMENT, line no: 68,if (tmp.value > int4.value) {   tmp.value=int4.value; } ,IF_STATEMENT, line no: 73, 3.314312701892219, insert, 1.0, 1.5, 0.375
output+=(String.format("%d is the smallest\n" tmp.value)); ,EXPRESSION_STATEMENT, line no: 76,if (tmp.value > int3.value) {   tmp.value=int3.value; }  else if (tmp.value > int4.value) {   tmp.value=int4.value; } ,IF_STATEMENT, line no: 71, 3.2935499900278127, insert, 1.0, 1.6, 0.2542372881355932
int1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,if (int1.value > int2.value) {   tmp.value=int2.value; }  else if (tmp.value > int3.value) {   tmp.value=int3.value; }  else if (tmp.value > int4.value) {   tmp.value=int4.value; } ,IF_STATEMENT, line no: 69, 3.286195101260806, insert, 1.0, 1.7142857142857142, 0.13259668508287292
int2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (int1.value > int2.value) {   tmp.value=int2.value; }  else if (tmp.value > int3.value) {   tmp.value=int3.value; }  else if (tmp.value > int4.value) {   tmp.value=int4.value; } ,IF_STATEMENT, line no: 69, 3.286195101260806, insert, 1.0, 1.7142857142857142, 0.13259668508287292
tmp.value=int1.value; ,EXPRESSION_STATEMENT, line no: 68,output+=(String.format("%d is the smallest\n" tmp.value)); ,EXPRESSION_STATEMENT, line no: 76, 3.285699142570185, insert, 1.0, 1.5, 0.2711864406779661
output+=(String.format("%d is the smallest\n" tmp.value)); ,EXPRESSION_STATEMENT, line no: 76,tmp.value=int1.value; ,EXPRESSION_STATEMENT, line no: 68, 3.285699142570185, insert, 1.0, 1.5, 0.2711864406779661
int3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,if (int1.value > int2.value) {   tmp.value=int2.value; }  else if (tmp.value > int3.value) {   tmp.value=int3.value; }  else if (tmp.value > int4.value) {   tmp.value=int4.value; } ,IF_STATEMENT, line no: 69, 3.2806702393823537, insert, 1.0, 1.7142857142857142, 0.1270718232044199
int4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,if (int1.value > int2.value) {   tmp.value=int2.value; }  else if (tmp.value > int3.value) {   tmp.value=int3.value; }  else if (tmp.value > int4.value) {   tmp.value=int4.value; } ,IF_STATEMENT, line no: 69, 3.2806702393823537, insert, 1.0, 1.7142857142857142, 0.1270718232044199
int4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,if (tmp.value > int4.value) {   tmp.value=int4.value; } ,IF_STATEMENT, line no: 73, 3.225026987606505, insert, 1.0, 1.5, 0.2857142857142857
int3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,if (tmp.value > int3.value) {   tmp.value=int3.value; }  else if (tmp.value > int4.value) {   tmp.value=int4.value; } ,IF_STATEMENT, line no: 71, 3.217278803587135, insert, 1.0, 1.6, 0.17796610169491525
tmp.value=int1.value; ,EXPRESSION_STATEMENT, line no: 68,if (tmp.value > int3.value) {   tmp.value=int3.value; }  else if (tmp.value > int4.value) {   tmp.value=int4.value; } ,IF_STATEMENT, line no: 71, 3.217278803587135, insert, 1.0, 1.6, 0.17796610169491525
int4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,if (tmp.value > int3.value) {   tmp.value=int3.value; }  else if (tmp.value > int4.value) {   tmp.value=int4.value; } ,IF_STATEMENT, line no: 71, 3.208804227315948, insert, 1.0, 1.6, 0.1694915254237288
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,output+=(String.format("%d is the smallest\n" tmp.value)); ,EXPRESSION_STATEMENT, line no: 76, 3.05505324243276, insert, 1.0, 1.0, 0.5405405405405406
tmp.value=int1.value; ,EXPRESSION_STATEMENT, line no: 68,tmp.value=int4.value; ,EXPRESSION_STATEMENT, line no: 74, 3.054995656437674, insert, 0.0859375, 1.5, 0.9545454545454546
tmp.value=int1.value; ,EXPRESSION_STATEMENT, line no: 68,tmp.value=int3.value; ,EXPRESSION_STATEMENT, line no: 72, 3.047183156437674, insert, 0.078125, 1.5, 0.9545454545454546
tmp.value=int1.value; ,EXPRESSION_STATEMENT, line no: 68,tmp.value=int2.value; ,EXPRESSION_STATEMENT, line no: 70, 3.039370656437674, insert, 0.0703125, 1.5, 0.9545454545454546
value,SIMPLE_NAME, line no: 76,tmp.value,QUALIFIED_NAME, line no: 68, 2.9885494604552933, insert, 0.9774436090225563, 1.0, 0.5555555555555556
value,SIMPLE_NAME, line no: 76,int1.value,QUALIFIED_NAME, line no: 64, 2.917956310914776, insert, 0.9774436090225563, 1.0, 0.5
value,SIMPLE_NAME, line no: 76,int2.value,QUALIFIED_NAME, line no: 65, 2.917956310914776, insert, 0.9774436090225563, 1.0, 0.5
value,SIMPLE_NAME, line no: 76,int3.value,QUALIFIED_NAME, line no: 66, 2.917956310914776, insert, 0.9774436090225563, 1.0, 0.5
value,SIMPLE_NAME, line no: 76,int4.value,QUALIFIED_NAME, line no: 67, 2.917956310914776, insert, 0.9774436090225563, 1.0, 0.5
tmp.value,QUALIFIED_NAME, line no: 76,int1.value,QUALIFIED_NAME, line no: 64, 2.792027853407371, insert, 0.9848484848484849, 0.6666666666666666, 0.7
tmp.value,QUALIFIED_NAME, line no: 76,int2.value,QUALIFIED_NAME, line no: 65, 2.792027853407371, insert, 0.9848484848484849, 0.6666666666666666, 0.7
tmp.value,QUALIFIED_NAME, line no: 76,int3.value,QUALIFIED_NAME, line no: 66, 2.792027853407371, insert, 0.9848484848484849, 0.6666666666666666, 0.7
tmp.value,QUALIFIED_NAME, line no: 76,int4.value,QUALIFIED_NAME, line no: 67, 2.792027853407371, insert, 0.9848484848484849, 0.6666666666666666, 0.7
tmp,SIMPLE_NAME, line no: 76,tmp.value,QUALIFIED_NAME, line no: 68, 2.766327238233071, insert, 0.9774436090225563, 1.0, 0.3333333333333333
tmp.value=int2.value; ,EXPRESSION_STATEMENT, line no: 70,int1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64, 2.7304, insert, 1.0, 0.6000000000000001, 0.43333333333333335
tmp.value=int2.value; ,EXPRESSION_STATEMENT, line no: 70,int3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66, 2.7304, insert, 1.0, 0.6000000000000001, 0.43333333333333335
tmp.value=int2.value; ,EXPRESSION_STATEMENT, line no: 70,int4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67, 2.7304, insert, 1.0, 0.6000000000000001, 0.43333333333333335
tmp.value=int3.value; ,EXPRESSION_STATEMENT, line no: 72,int1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64, 2.641083602522959, insert, 1.0, 0.6000000000000001, 0.43333333333333335
tmp.value=int3.value; ,EXPRESSION_STATEMENT, line no: 72,int2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 2.641083602522959, insert, 1.0, 0.6000000000000001, 0.43333333333333335
tmp.value=int3.value; ,EXPRESSION_STATEMENT, line no: 72,int4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67, 2.641083602522959, insert, 1.0, 0.6000000000000001, 0.43333333333333335
int2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,tmp.value=int1.value; ,EXPRESSION_STATEMENT, line no: 68, 2.547846035225553, insert, 1.0, 0.6000000000000001, 0.43333333333333335
int3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,tmp.value=int1.value; ,EXPRESSION_STATEMENT, line no: 68, 2.547846035225553, insert, 1.0, 0.6000000000000001, 0.43333333333333335
int4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,tmp.value=int1.value; ,EXPRESSION_STATEMENT, line no: 68, 2.547846035225553, insert, 1.0, 0.6000000000000001, 0.43333333333333335
tmp.value=int1.value; ,EXPRESSION_STATEMENT, line no: 68,int2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 2.547846035225553, insert, 1.0, 0.6000000000000001, 0.43333333333333335
tmp.value=int1.value; ,EXPRESSION_STATEMENT, line no: 68,int3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66, 2.547846035225553, insert, 1.0, 0.6000000000000001, 0.43333333333333335
tmp.value=int1.value; ,EXPRESSION_STATEMENT, line no: 68,int4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67, 2.547846035225553, insert, 1.0, 0.6000000000000001, 0.43333333333333335
int4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,tmp.value=int4.value; ,EXPRESSION_STATEMENT, line no: 74, 2.5337835352255524, insert, 0.0859375, 1.5, 0.43333333333333335
int3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,tmp.value=int3.value; ,EXPRESSION_STATEMENT, line no: 72, 2.5259710352255524, insert, 0.078125, 1.5, 0.43333333333333335
tmp.value,QUALIFIED_NAME, line no: 76,value,SIMPLE_NAME, line no: 7, 2.519868257447775, insert, 0.045454545454545456, 0.5, 0.5555555555555556
int2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,tmp.value=int2.value; ,EXPRESSION_STATEMENT, line no: 70, 2.5181585352255524, insert, 0.0703125, 1.5, 0.43333333333333335
output+=(String.format("%d is the smallest\n" tmp.value)); ,EXPRESSION_STATEMENT, line no: 76,output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62, 2.3883865757660936, insert, 1.0, 0.3333333333333333, 0.5405405405405406
output+=(String.format("%d is the smallest\n" tmp.value)); ,EXPRESSION_STATEMENT, line no: 76,tmp.value=int4.value; ,EXPRESSION_STATEMENT, line no: 74, 2.371636642570185, insert, 0.0859375, 1.5, 0.2711864406779661
output+=(String.format("%d is the smallest\n" tmp.value)); ,EXPRESSION_STATEMENT, line no: 76,tmp.value=int3.value; ,EXPRESSION_STATEMENT, line no: 72, 2.363824142570185, insert, 0.078125, 1.5, 0.2711864406779661
output+=(String.format("%d is the smallest\n" tmp.value)); ,EXPRESSION_STATEMENT, line no: 76,tmp.value=int2.value; ,EXPRESSION_STATEMENT, line no: 70, 2.356011642570185, insert, 0.0703125, 1.5, 0.2711864406779661
int1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,output+=(String.format("%d is the smallest\n" tmp.value)); ,EXPRESSION_STATEMENT, line no: 76, 2.35180083748544, insert, 1.0, 0.6000000000000001, 0.23728813559322035
int2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,output+=(String.format("%d is the smallest\n" tmp.value)); ,EXPRESSION_STATEMENT, line no: 76, 2.35180083748544, insert, 1.0, 0.6000000000000001, 0.23728813559322035
int3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,output+=(String.format("%d is the smallest\n" tmp.value)); ,EXPRESSION_STATEMENT, line no: 76, 2.35180083748544, insert, 1.0, 0.6000000000000001, 0.23728813559322035
int4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,output+=(String.format("%d is the smallest\n" tmp.value)); ,EXPRESSION_STATEMENT, line no: 76, 2.35180083748544, insert, 1.0, 0.6000000000000001, 0.23728813559322035
output+=(String.format("%d is the smallest\n" tmp.value)); ,EXPRESSION_STATEMENT, line no: 76,int1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64, 2.35180083748544, insert, 1.0, 0.6000000000000001, 0.23728813559322035
output+=(String.format("%d is the smallest\n" tmp.value)); ,EXPRESSION_STATEMENT, line no: 76,int2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 2.35180083748544, insert, 1.0, 0.6000000000000001, 0.23728813559322035
output+=(String.format("%d is the smallest\n" tmp.value)); ,EXPRESSION_STATEMENT, line no: 76,int3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66, 2.35180083748544, insert, 1.0, 0.6000000000000001, 0.23728813559322035
output+=(String.format("%d is the smallest\n" tmp.value)); ,EXPRESSION_STATEMENT, line no: 76,int4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67, 2.35180083748544, insert, 1.0, 0.6000000000000001, 0.23728813559322035
int1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,if (tmp.value > int4.value) {   tmp.value=int4.value; } ,IF_STATEMENT, line no: 73, 2.3250269876065053, insert, 1.0, 0.6000000000000001, 0.2857142857142857
int2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (tmp.value > int4.value) {   tmp.value=int4.value; } ,IF_STATEMENT, line no: 73, 2.3250269876065053, insert, 1.0, 0.6000000000000001, 0.2857142857142857
int3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,if (tmp.value > int4.value) {   tmp.value=int4.value; } ,IF_STATEMENT, line no: 73, 2.3250269876065053, insert, 1.0, 0.6000000000000001, 0.2857142857142857
tmp.value,QUALIFIED_NAME, line no: 76,tmp,SIMPLE_NAME, line no: 61, 2.2976460352255526, insert, 0.9696969696969697, 0.5, 0.3333333333333333
int1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,if (tmp.value > int3.value) {   tmp.value=int3.value; }  else if (tmp.value > int4.value) {   tmp.value=int4.value; } ,IF_STATEMENT, line no: 71, 2.275470893982615, insert, 1.0, 0.6666666666666666, 0.1694915254237288
int2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (tmp.value > int3.value) {   tmp.value=int3.value; }  else if (tmp.value > int4.value) {   tmp.value=int4.value; } ,IF_STATEMENT, line no: 71, 2.275470893982615, insert, 1.0, 0.6666666666666666, 0.1694915254237288
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,System.out.println(mainClass.output); ,EXPRESSION_STATEMENT, line no: 56, 2.1561934451354627, insert, 0.3984375, 1.0, 0.24324324324324326
scanner,SIMPLE_NAME, line no: 64,mainClass.scanner,QUALIFIED_NAME, line no: 51, 1.9820484001409846, insert, 0.11450381679389313, 1.0, 0.4117647058823529
scanner,SIMPLE_NAME, line no: 65,mainClass.scanner,QUALIFIED_NAME, line no: 51, 1.9820484001409846, insert, 0.11450381679389313, 1.0, 0.4117647058823529
scanner,SIMPLE_NAME, line no: 66,mainClass.scanner,QUALIFIED_NAME, line no: 51, 1.9820484001409846, insert, 0.11450381679389313, 1.0, 0.4117647058823529
scanner,SIMPLE_NAME, line no: 67,mainClass.scanner,QUALIFIED_NAME, line no: 51, 1.9820484001409846, insert, 0.11450381679389313, 1.0, 0.4117647058823529
tmp.value=int2.value; ,EXPRESSION_STATEMENT, line no: 70,value=i; ,EXPRESSION_STATEMENT, line no: 7, 1.8839353535353534, insert, 0.4444444444444444, 0.3333333333333333, 0.4090909090909091
tmp.value=int3.value; ,EXPRESSION_STATEMENT, line no: 72,value=i; ,EXPRESSION_STATEMENT, line no: 7, 1.7501745116138683, insert, 0.4, 0.3333333333333333, 0.4090909090909091
output+=(String.format("%d is the smallest\n" tmp.value)); ,EXPRESSION_STATEMENT, line no: 76,System.out.println(mainClass.output); ,EXPRESSION_STATEMENT, line no: 56, 1.734984100197304, insert, 0.3984375, 0.5, 0.3220338983050847
int1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,tmp.value=int4.value; ,EXPRESSION_STATEMENT, line no: 74, 1.6337835352255528, insert, 0.0859375, 0.6000000000000001, 0.43333333333333335
int2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,tmp.value=int4.value; ,EXPRESSION_STATEMENT, line no: 74, 1.6337835352255528, insert, 0.0859375, 0.6000000000000001, 0.43333333333333335
int3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,tmp.value=int4.value; ,EXPRESSION_STATEMENT, line no: 74, 1.6337835352255528, insert, 0.0859375, 0.6000000000000001, 0.43333333333333335
int1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,tmp.value=int3.value; ,EXPRESSION_STATEMENT, line no: 72, 1.6259710352255528, insert, 0.078125, 0.6000000000000001, 0.43333333333333335
int2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,tmp.value=int3.value; ,EXPRESSION_STATEMENT, line no: 72, 1.6259710352255528, insert, 0.078125, 0.6000000000000001, 0.43333333333333335
int4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,tmp.value=int3.value; ,EXPRESSION_STATEMENT, line no: 72, 1.6259710352255528, insert, 0.078125, 0.6000000000000001, 0.43333333333333335
int1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,tmp.value=int2.value; ,EXPRESSION_STATEMENT, line no: 70, 1.6181585352255528, insert, 0.0703125, 0.6000000000000001, 0.43333333333333335
int3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,tmp.value=int2.value; ,EXPRESSION_STATEMENT, line no: 70, 1.6181585352255528, insert, 0.0703125, 0.6000000000000001, 0.43333333333333335
int4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,tmp.value=int2.value; ,EXPRESSION_STATEMENT, line no: 70, 1.6181585352255528, insert, 0.0703125, 0.6000000000000001, 0.43333333333333335
int1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,if (args.length > 0) {   mainClass.scanner=new java.util.Scanner(args[0]); }  else {   mainClass.scanner=new java.util.Scanner(System.in); } ,IF_STATEMENT, line no: 50, 1.500870769268106, insert, 0.3984375, 0.5, 0.16312056737588654
int2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (args.length > 0) {   mainClass.scanner=new java.util.Scanner(args[0]); }  else {   mainClass.scanner=new java.util.Scanner(System.in); } ,IF_STATEMENT, line no: 50, 1.500870769268106, insert, 0.3984375, 0.5, 0.16312056737588654
int3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,if (args.length > 0) {   mainClass.scanner=new java.util.Scanner(args[0]); }  else {   mainClass.scanner=new java.util.Scanner(System.in); } ,IF_STATEMENT, line no: 50, 1.500870769268106, insert, 0.3984375, 0.5, 0.16312056737588654
int4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,if (args.length > 0) {   mainClass.scanner=new java.util.Scanner(args[0]); }  else {   mainClass.scanner=new java.util.Scanner(System.in); } ,IF_STATEMENT, line no: 50, 1.500870769268106, insert, 0.3984375, 0.5, 0.16312056737588654
int1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 1.4778540480460656, insert, 0.1171875, 0.5, 0.34615384615384615
int2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 1.4778540480460656, insert, 0.1171875, 0.5, 0.34615384615384615
int3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 1.4778540480460656, insert, 0.1171875, 0.5, 0.34615384615384615
int4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 1.4778540480460656, insert, 0.1171875, 0.5, 0.34615384615384615
int1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 1.4760752018922192, insert, 0.1015625, 0.5, 0.36
int2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 1.4760752018922192, insert, 0.1015625, 0.5, 0.36
int3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 1.4760752018922192, insert, 0.1015625, 0.5, 0.36
int4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 1.4760752018922192, insert, 0.1015625, 0.5, 0.36
tmp.value=int1.value; ,EXPRESSION_STATEMENT, line no: 68,value=i; ,EXPRESSION_STATEMENT, line no: 7, 1.2881869443164617, insert, 0.03125, 0.3333333333333333, 0.4090909090909091
int1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,value=i; ,EXPRESSION_STATEMENT, line no: 7, 1.1457627018922192, insert, 0.03125, 0.3333333333333333, 0.26666666666666666
int2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,value=i; ,EXPRESSION_STATEMENT, line no: 7, 1.1457627018922192, insert, 0.03125, 0.3333333333333333, 0.26666666666666666
int3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,value=i; ,EXPRESSION_STATEMENT, line no: 7, 1.1457627018922192, insert, 0.03125, 0.3333333333333333, 0.26666666666666666
int4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,value=i; ,EXPRESSION_STATEMENT, line no: 7, 1.1457627018922192, insert, 0.03125, 0.3333333333333333, 0.26666666666666666
output+=(String.format("%d is the smallest\n" tmp.value)); ,EXPRESSION_STATEMENT, line no: 76,value=i; ,EXPRESSION_STATEMENT, line no: 7, 0.9977401030221629, insert, 0.03125, 0.3333333333333333, 0.11864406779661017
