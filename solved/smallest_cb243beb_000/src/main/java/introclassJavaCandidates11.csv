output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62, 0.183375, insert, 1.0, 1.0, 1.0
n1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,n1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64, 0.183375, insert, 1.0, 3.0, 1.0
n2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,n2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 0.183375, insert, 1.0, 3.0, 1.0
n3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,n3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66, 0.183375, insert, 1.0, 3.0, 1.0
n4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,n4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67, 0.183375, insert, 1.0, 3.0, 1.0
n1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,n2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 0.17649004120879122, insert, 1.0, 1.5, 0.9642857142857143
n1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,n3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66, 0.17649004120879122, insert, 1.0, 1.5, 0.9642857142857143
n1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,n4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67, 0.17649004120879122, insert, 1.0, 1.5, 0.9642857142857143
n2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,n1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64, 0.17649004120879122, insert, 1.0, 1.5, 0.9642857142857143
n2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,n3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66, 0.17649004120879122, insert, 1.0, 1.5, 0.9642857142857143
n2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,n4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67, 0.17649004120879122, insert, 1.0, 1.5, 0.9642857142857143
n3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,n1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64, 0.17649004120879122, insert, 1.0, 1.5, 0.9642857142857143
n3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,n2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 0.17649004120879122, insert, 1.0, 1.5, 0.9642857142857143
n3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,n4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67, 0.17649004120879122, insert, 1.0, 1.5, 0.9642857142857143
n4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,n1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64, 0.17649004120879122, insert, 1.0, 1.5, 0.9642857142857143
n4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,n2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 0.17649004120879122, insert, 1.0, 1.5, 0.9642857142857143
n4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,n3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66, 0.17649004120879122, insert, 1.0, 1.5, 0.9642857142857143
min.value=n4.value; ,EXPRESSION_STATEMENT, line no: 77,min.value=n4.value; ,EXPRESSION_STATEMENT, line no: 77, 0.0912, insert, 1.0, 3.0, 1.0
min.value=n4.value; ,EXPRESSION_STATEMENT, line no: 77,min.value=n1.value; ,EXPRESSION_STATEMENT, line no: 69, 0.0861723076923077, insert, 1.0, 1.5, 0.95
min.value=n4.value; ,EXPRESSION_STATEMENT, line no: 77,min.value=n2.value; ,EXPRESSION_STATEMENT, line no: 71, 0.0861723076923077, insert, 1.0, 1.5, 0.95
min.value=n4.value; ,EXPRESSION_STATEMENT, line no: 77,min.value=n3.value; ,EXPRESSION_STATEMENT, line no: 74, 0.0861723076923077, insert, 1.0, 1.5, 0.95
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,n1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64, 0.07492795476496383, insert, 1.0, 0.0, 0.20270270270270271
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,n2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 0.07492795476496383, insert, 1.0, 0.0, 0.20270270270270271
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,n3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66, 0.07492795476496383, insert, 1.0, 0.0, 0.20270270270270271
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,n4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67, 0.07492795476496383, insert, 1.0, 0.0, 0.20270270270270271
n1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62, 0.07492795476496383, insert, 1.0, 0.0, 0.20270270270270271
n2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62, 0.07492795476496383, insert, 1.0, 0.0, 0.20270270270270271
n3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62, 0.07492795476496383, insert, 1.0, 0.0, 0.20270270270270271
n4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62, 0.07492795476496383, insert, 1.0, 0.0, 0.20270270270270271
String,SIMPLE_NAME, line no: 63,String,SIMPLE_NAME, line no: 49, 0.07042500000000002, insert, 0.38636363636363635, 0.0, 1.0
format,SIMPLE_NAME, line no: 63,format,SIMPLE_NAME, line no: 63, 0.07042500000000002, insert, 1.0, 0.0, 1.0
scanner,SIMPLE_NAME, line no: 64,scanner,SIMPLE_NAME, line no: 51, 0.07042500000000002, insert, 0.12213740458015267, 1.0, 1.0
nextInt,SIMPLE_NAME, line no: 64,nextInt,SIMPLE_NAME, line no: 64, 0.07042500000000002, insert, 1.0, 0.0, 1.0
scanner,SIMPLE_NAME, line no: 65,scanner,SIMPLE_NAME, line no: 51, 0.07042500000000002, insert, 0.12213740458015267, 1.0, 1.0
nextInt,SIMPLE_NAME, line no: 65,nextInt,SIMPLE_NAME, line no: 64, 0.07042500000000002, insert, 1.0, 0.0, 1.0
scanner,SIMPLE_NAME, line no: 66,scanner,SIMPLE_NAME, line no: 51, 0.07042500000000002, insert, 0.12213740458015267, 1.0, 1.0
nextInt,SIMPLE_NAME, line no: 66,nextInt,SIMPLE_NAME, line no: 64, 0.07042500000000002, insert, 1.0, 0.0, 1.0
scanner,SIMPLE_NAME, line no: 67,scanner,SIMPLE_NAME, line no: 51, 0.07042500000000002, insert, 0.12213740458015267, 1.0, 1.0
nextInt,SIMPLE_NAME, line no: 67,nextInt,SIMPLE_NAME, line no: 64, 0.07042500000000002, insert, 1.0, 0.0, 1.0
min.value=n3.value; ,EXPRESSION_STATEMENT, line no: 74,min.value=n3.value; ,EXPRESSION_STATEMENT, line no: 74, 0.06894071987688305, insert, 1.0, 3.0, 1.0
min.value=n3.value; ,EXPRESSION_STATEMENT, line no: 74,min.value=n1.value; ,EXPRESSION_STATEMENT, line no: 69, 0.0651401417298241, insert, 1.0, 1.5, 0.95
min.value=n3.value; ,EXPRESSION_STATEMENT, line no: 74,min.value=n2.value; ,EXPRESSION_STATEMENT, line no: 71, 0.0651401417298241, insert, 1.0, 1.5, 0.95
min.value=n3.value; ,EXPRESSION_STATEMENT, line no: 74,min.value=n4.value; ,EXPRESSION_STATEMENT, line no: 77, 0.0651401417298241, insert, 1.0, 1.5, 0.95
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,output+=(String.format("%d is the smallest\n" min.value)); ,EXPRESSION_STATEMENT, line no: 79, 0.06084451887019944, insert, 0.09375, 1.0, 0.527027027027027
min.value=n1.value; ,EXPRESSION_STATEMENT, line no: 69,min.value=n1.value; ,EXPRESSION_STATEMENT, line no: 69, 0.05902010087836437, insert, 1.0, 3.0, 1.0
n1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,min.value=n1.value; ,EXPRESSION_STATEMENT, line no: 69, 0.05853789277129121, insert, 0.0703125, 1.5, 0.4642857142857143
n2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,min.value=n2.value; ,EXPRESSION_STATEMENT, line no: 71, 0.05853789277129121, insert, 0.0703125, 1.5, 0.4642857142857143
n3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,min.value=n3.value; ,EXPRESSION_STATEMENT, line no: 74, 0.05853789277129121, insert, 0.0703125, 1.5, 0.4642857142857143
n4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,min.value=n4.value; ,EXPRESSION_STATEMENT, line no: 77, 0.05853789277129121, insert, 0.0703125, 1.5, 0.4642857142857143
min.value=n4.value; ,EXPRESSION_STATEMENT, line no: 77,n4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67, 0.05737582417582418, insert, 1.0, 1.5, 0.4642857142857143
min.value=n1.value; ,EXPRESSION_STATEMENT, line no: 69,min.value=n2.value; ,EXPRESSION_STATEMENT, line no: 71, 0.055766428650454544, insert, 1.0, 1.5, 0.95
min.value=n1.value; ,EXPRESSION_STATEMENT, line no: 69,min.value=n3.value; ,EXPRESSION_STATEMENT, line no: 74, 0.055766428650454544, insert, 1.0, 1.5, 0.95
min.value=n1.value; ,EXPRESSION_STATEMENT, line no: 69,min.value=n4.value; ,EXPRESSION_STATEMENT, line no: 77, 0.055766428650454544, insert, 1.0, 1.5, 0.95
min.value=n4.value; ,EXPRESSION_STATEMENT, line no: 77,n1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64, 0.05503736263736264, insert, 1.0, 0.6000000000000001, 0.4642857142857143
min.value=n4.value; ,EXPRESSION_STATEMENT, line no: 77,n2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 0.05503736263736264, insert, 1.0, 0.6000000000000001, 0.4642857142857143
min.value=n4.value; ,EXPRESSION_STATEMENT, line no: 77,n3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66, 0.05503736263736264, insert, 1.0, 0.6000000000000001, 0.4642857142857143
n1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,min.value=n2.value; ,EXPRESSION_STATEMENT, line no: 71, 0.05383596969436813, insert, 0.0703125, 0.6000000000000001, 0.4642857142857143
n1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,min.value=n3.value; ,EXPRESSION_STATEMENT, line no: 74, 0.05383596969436813, insert, 0.0703125, 0.6000000000000001, 0.4642857142857143
n1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,min.value=n4.value; ,EXPRESSION_STATEMENT, line no: 77, 0.05383596969436813, insert, 0.0703125, 0.6000000000000001, 0.4642857142857143
n2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,min.value=n1.value; ,EXPRESSION_STATEMENT, line no: 69, 0.05383596969436813, insert, 0.0703125, 0.6000000000000001, 0.4642857142857143
n2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,min.value=n3.value; ,EXPRESSION_STATEMENT, line no: 74, 0.05383596969436813, insert, 0.0703125, 0.6000000000000001, 0.4642857142857143
n2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,min.value=n4.value; ,EXPRESSION_STATEMENT, line no: 77, 0.05383596969436813, insert, 0.0703125, 0.6000000000000001, 0.4642857142857143
n3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,min.value=n1.value; ,EXPRESSION_STATEMENT, line no: 69, 0.05383596969436813, insert, 0.0703125, 0.6000000000000001, 0.4642857142857143
n3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,min.value=n2.value; ,EXPRESSION_STATEMENT, line no: 71, 0.05383596969436813, insert, 0.0703125, 0.6000000000000001, 0.4642857142857143
n3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,min.value=n4.value; ,EXPRESSION_STATEMENT, line no: 77, 0.05383596969436813, insert, 0.0703125, 0.6000000000000001, 0.4642857142857143
n4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,min.value=n1.value; ,EXPRESSION_STATEMENT, line no: 69, 0.05383596969436813, insert, 0.0703125, 0.6000000000000001, 0.4642857142857143
n4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,min.value=n2.value; ,EXPRESSION_STATEMENT, line no: 71, 0.05383596969436813, insert, 0.0703125, 0.6000000000000001, 0.4642857142857143
n4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,min.value=n3.value; ,EXPRESSION_STATEMENT, line no: 74, 0.05383596969436813, insert, 0.0703125, 0.6000000000000001, 0.4642857142857143
n1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 0.052178648710517896, insert, 0.3984375, 0.0, 0.35714285714285715
n2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 0.052178648710517896, insert, 0.3984375, 0.0, 0.35714285714285715
n3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 0.052178648710517896, insert, 0.3984375, 0.0, 0.35714285714285715
n4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 0.052178648710517896, insert, 0.3984375, 0.0, 0.35714285714285715
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,System.out.println(mainClass.output); ,EXPRESSION_STATEMENT, line no: 56, 0.04719571531301593, insert, 0.3984375, 1.0, 0.24324324324324326
min.value=n4.value; ,EXPRESSION_STATEMENT, line no: 77,output+=(String.format("%d is the smallest\n" min.value)); ,EXPRESSION_STATEMENT, line no: 79, 0.043437482637097964, insert, 0.8888888888888888, 1.5, 0.2542372881355932
min.value=n3.value; ,EXPRESSION_STATEMENT, line no: 74,n3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66, 0.04337204629617093, insert, 1.0, 1.5, 0.4642857142857143
n1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 0.04300961047365682, insert, 0.1015625, 0.5, 0.34
n2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 0.04300961047365682, insert, 0.1015625, 0.5, 0.34
n3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 0.04300961047365682, insert, 0.1015625, 0.5, 0.34
n4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 0.04300961047365682, insert, 0.1015625, 0.5, 0.34
n1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 0.042886747332137556, insert, 0.1171875, 0.5, 0.3269230769230769
n2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 0.042886747332137556, insert, 0.1171875, 0.5, 0.3269230769230769
n3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 0.042886747332137556, insert, 0.1171875, 0.5, 0.3269230769230769
n4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 0.042886747332137556, insert, 0.1171875, 0.5, 0.3269230769230769
n1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,System.out.println(mainClass.output); ,EXPRESSION_STATEMENT, line no: 56, 0.042335424291230814, insert, 0.3984375, 0.0, 0.2631578947368421
n2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,System.out.println(mainClass.output); ,EXPRESSION_STATEMENT, line no: 56, 0.042335424291230814, insert, 0.3984375, 0.0, 0.2631578947368421
n3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,System.out.println(mainClass.output); ,EXPRESSION_STATEMENT, line no: 56, 0.042335424291230814, insert, 0.3984375, 0.0, 0.2631578947368421
n4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,System.out.println(mainClass.output); ,EXPRESSION_STATEMENT, line no: 56, 0.042335424291230814, insert, 0.3984375, 0.0, 0.2631578947368421
scanner,SIMPLE_NAME, line no: 64,Scanner,SIMPLE_NAME, line no: 44, 0.042306199563794986, insert, 0.007633587786259542, 0.0, 0.8571428571428571
scanner,SIMPLE_NAME, line no: 65,Scanner,SIMPLE_NAME, line no: 44, 0.042306199563794986, insert, 0.007633587786259542, 0.0, 0.8571428571428571
scanner,SIMPLE_NAME, line no: 66,Scanner,SIMPLE_NAME, line no: 44, 0.042306199563794986, insert, 0.007633587786259542, 0.0, 0.8571428571428571
scanner,SIMPLE_NAME, line no: 67,Scanner,SIMPLE_NAME, line no: 44, 0.042306199563794986, insert, 0.007633587786259542, 0.0, 0.8571428571428571
min.value=n3.value; ,EXPRESSION_STATEMENT, line no: 74,n1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64, 0.04160433553009701, insert, 1.0, 0.6000000000000001, 0.4642857142857143
min.value=n3.value; ,EXPRESSION_STATEMENT, line no: 74,n2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 0.04160433553009701, insert, 1.0, 0.6000000000000001, 0.4642857142857143
min.value=n3.value; ,EXPRESSION_STATEMENT, line no: 74,n4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67, 0.04160433553009701, insert, 1.0, 0.6000000000000001, 0.4642857142857143
min.value=n4.value; ,EXPRESSION_STATEMENT, line no: 77,value=i; ,EXPRESSION_STATEMENT, line no: 7, 0.04144489656965934, insert, 0.4444444444444444, 0.3333333333333333, 0.4
nextInt,SIMPLE_NAME, line no: 64,IntObj,SIMPLE_NAME, line no: 60, 0.038247288443047714, insert, 0.9770992366412213, 0.0, 0.42857142857142855
nextInt,SIMPLE_NAME, line no: 65,IntObj,SIMPLE_NAME, line no: 60, 0.038247288443047714, insert, 0.9770992366412213, 0.0, 0.42857142857142855
nextInt,SIMPLE_NAME, line no: 66,IntObj,SIMPLE_NAME, line no: 60, 0.038247288443047714, insert, 0.9770992366412213, 0.0, 0.42857142857142855
nextInt,SIMPLE_NAME, line no: 67,IntObj,SIMPLE_NAME, line no: 60, 0.038247288443047714, insert, 0.9770992366412213, 0.0, 0.42857142857142855
n1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,value=i; ,EXPRESSION_STATEMENT, line no: 7, 0.037497987756649635, insert, 0.03125, 0.3333333333333333, 0.2857142857142857
n2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,value=i; ,EXPRESSION_STATEMENT, line no: 7, 0.037497987756649635, insert, 0.03125, 0.3333333333333333, 0.2857142857142857
n3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,value=i; ,EXPRESSION_STATEMENT, line no: 7, 0.037497987756649635, insert, 0.03125, 0.3333333333333333, 0.2857142857142857
n4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,value=i; ,EXPRESSION_STATEMENT, line no: 7, 0.037497987756649635, insert, 0.03125, 0.3333333333333333, 0.2857142857142857
min.value=n1.value; ,EXPRESSION_STATEMENT, line no: 69,n1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64, 0.037130777750399566, insert, 1.0, 1.5, 0.4642857142857143
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 0.03606756693299665, insert, 0.3984375, 0.0, 0.16216216216216217
min.value=n1.value; ,EXPRESSION_STATEMENT, line no: 69,n2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 0.03561744183044151, insert, 1.0, 0.6000000000000001, 0.4642857142857143
min.value=n1.value; ,EXPRESSION_STATEMENT, line no: 69,n3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66, 0.03561744183044151, insert, 1.0, 0.6000000000000001, 0.4642857142857143
min.value=n1.value; ,EXPRESSION_STATEMENT, line no: 69,n4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67, 0.03561744183044151, insert, 1.0, 0.6000000000000001, 0.4642857142857143
min.value=n2.value; ,EXPRESSION_STATEMENT, line no: 71,min.value=n2.value; ,EXPRESSION_STATEMENT, line no: 71, 0.035102896366729246, insert, 1.0, 3.0, 1.0
min.value=n2.value; ,EXPRESSION_STATEMENT, line no: 71,min.value=n1.value; ,EXPRESSION_STATEMENT, line no: 69, 0.03316773669523007, insert, 1.0, 1.5, 0.95
min.value=n2.value; ,EXPRESSION_STATEMENT, line no: 71,min.value=n3.value; ,EXPRESSION_STATEMENT, line no: 74, 0.03316773669523007, insert, 1.0, 1.5, 0.95
min.value=n2.value; ,EXPRESSION_STATEMENT, line no: 71,min.value=n4.value; ,EXPRESSION_STATEMENT, line no: 77, 0.03316773669523007, insert, 1.0, 1.5, 0.95
min.value=n3.value; ,EXPRESSION_STATEMENT, line no: 74,output+=(String.format("%d is the smallest\n" min.value)); ,EXPRESSION_STATEMENT, line no: 79, 0.032835650467556377, insert, 0.8888888888888888, 1.5, 0.2542372881355932
min.value=n3.value; ,EXPRESSION_STATEMENT, line no: 74,value=i; ,EXPRESSION_STATEMENT, line no: 7, 0.031329396981746443, insert, 0.4444444444444444, 0.3333333333333333, 0.4
min.value=n4.value; ,EXPRESSION_STATEMENT, line no: 77,if (min.value >= n3.value) {   min.value=n3.value; } ,IF_STATEMENT, line no: 73, 0.030382392170189267, insert, 1.0, 1.5, 0.3584905660377358
min.value=n4.value; ,EXPRESSION_STATEMENT, line no: 77,if (n1.value <= n2.value) {   min.value=n1.value; }  else {   min.value=n2.value; } ,IF_STATEMENT, line no: 68, 0.028618672059598973, insert, 1.0, 1.6, 0.2261904761904762
min.value=n1.value; ,EXPRESSION_STATEMENT, line no: 69,output+=(String.format("%d is the smallest\n" min.value)); ,EXPRESSION_STATEMENT, line no: 79, 0.02811057683271626, insert, 0.8888888888888888, 1.5, 0.2542372881355932
n1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,output+=(String.format("%d is the smallest\n" min.value)); ,EXPRESSION_STATEMENT, line no: 79, 0.027137670309762368, insert, 0.09375, 0.6000000000000001, 0.22033898305084745
n2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,output+=(String.format("%d is the smallest\n" min.value)); ,EXPRESSION_STATEMENT, line no: 79, 0.027137670309762368, insert, 0.09375, 0.6000000000000001, 0.22033898305084745
n3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,output+=(String.format("%d is the smallest\n" min.value)); ,EXPRESSION_STATEMENT, line no: 79, 0.027137670309762368, insert, 0.09375, 0.6000000000000001, 0.22033898305084745
n4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,output+=(String.format("%d is the smallest\n" min.value)); ,EXPRESSION_STATEMENT, line no: 79, 0.027137670309762368, insert, 0.09375, 0.6000000000000001, 0.22033898305084745
min.value=n4.value; ,EXPRESSION_STATEMENT, line no: 77,if (min.value >= n4.value) {   min.value=n4.value; }  else {   output+=(String.format("%d is the smallest\n" min.value)); } ,IF_STATEMENT, line no: 76, 0.02701923859635169, insert, 1.0, 3.0, 0.16129032258064516
min.value=n1.value; ,EXPRESSION_STATEMENT, line no: 69,value=i; ,EXPRESSION_STATEMENT, line no: 7, 0.02682107430301175, insert, 0.4444444444444444, 0.3333333333333333, 0.4
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 0.025455255350123142, insert, 0.1171875, 0.0, 0.28378378378378377
String,SIMPLE_NAME, line no: 63,println,SIMPLE_NAME, line no: 56, 0.024735452044713224, insert, 0.4015151515151515, 0.0, 0.42857142857142855
min.value=n3.value; ,EXPRESSION_STATEMENT, line no: 74,if (min.value >= n3.value) {   min.value=n3.value; } ,IF_STATEMENT, line no: 73, 0.024178431110266022, insert, 1.0, 3.0, 0.37735849056603776
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 0.023690906349965648, insert, 0.1015625, 0.0, 0.2702702702702703
min.value=n2.value; ,EXPRESSION_STATEMENT, line no: 71,n2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 0.02208396502192582, insert, 1.0, 1.5, 0.4642857142857143
min.value=n3.value; ,EXPRESSION_STATEMENT, line no: 74,if (n1.value <= n2.value) {   min.value=n1.value; }  else {   min.value=n2.value; } ,IF_STATEMENT, line no: 68, 0.02163368260646044, insert, 1.0, 1.6, 0.2261904761904762
min.value=n2.value; ,EXPRESSION_STATEMENT, line no: 71,n1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64, 0.02118389075611225, insert, 1.0, 0.6000000000000001, 0.4642857142857143
min.value=n2.value; ,EXPRESSION_STATEMENT, line no: 71,n3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66, 0.02118389075611225, insert, 1.0, 0.6000000000000001, 0.4642857142857143
min.value=n2.value; ,EXPRESSION_STATEMENT, line no: 71,n4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67, 0.02118389075611225, insert, 1.0, 0.6000000000000001, 0.4642857142857143
min.value=n1.value; ,EXPRESSION_STATEMENT, line no: 69,if (min.value >= n3.value) {   min.value=n3.value; } ,IF_STATEMENT, line no: 73, 0.019661972048361828, insert, 1.0, 1.5, 0.3584905660377358
min.value=n3.value; ,EXPRESSION_STATEMENT, line no: 74,if (min.value >= n4.value) {   min.value=n4.value; }  else {   output+=(String.format("%d is the smallest\n" min.value)); } ,IF_STATEMENT, line no: 76, 0.01964497004160008, insert, 1.0, 1.6, 0.1532258064516129
min.value=n1.value; ,EXPRESSION_STATEMENT, line no: 69,if (n1.value <= n2.value) {   min.value=n1.value; }  else {   min.value=n2.value; } ,IF_STATEMENT, line no: 68, 0.019220484364017788, insert, 1.0, 3.0, 0.23809523809523808
min.value=n1.value; ,EXPRESSION_STATEMENT, line no: 69,if (min.value >= n4.value) {   min.value=n4.value; }  else {   output+=(String.format("%d is the smallest\n" min.value)); } ,IF_STATEMENT, line no: 76, 0.01681804477351367, insert, 1.0, 1.6, 0.1532258064516129
min.value=n2.value; ,EXPRESSION_STATEMENT, line no: 71,output+=(String.format("%d is the smallest\n" min.value)); ,EXPRESSION_STATEMENT, line no: 79, 0.016719094862298802, insert, 0.8888888888888888, 1.5, 0.2542372881355932
min.value=n2.value; ,EXPRESSION_STATEMENT, line no: 71,value=i; ,EXPRESSION_STATEMENT, line no: 7, 0.01595214812735268, insert, 0.4444444444444444, 0.3333333333333333, 0.4
min.value=n2.value; ,EXPRESSION_STATEMENT, line no: 71,if (min.value >= n3.value) {   min.value=n3.value; } ,IF_STATEMENT, line no: 73, 0.011694188198722368, insert, 1.0, 1.5, 0.3584905660377358
min.value=n2.value; ,EXPRESSION_STATEMENT, line no: 71,if (n1.value <= n2.value) {   min.value=n1.value; }  else {   min.value=n2.value; } ,IF_STATEMENT, line no: 68, 0.011431608226813219, insert, 1.0, 3.0, 0.23809523809523808
min.value=n2.value; ,EXPRESSION_STATEMENT, line no: 71,if (min.value >= n4.value) {   min.value=n4.value; }  else {   output+=(String.format("%d is the smallest\n" min.value)); } ,IF_STATEMENT, line no: 76, 0.010002729137863573, insert, 1.0, 1.6, 0.1532258064516129
n3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,if (min.value >= n3.value) {   min.value=n3.value; } ,IF_STATEMENT, line no: 73, 0.007943496961875851, insert, 1.0, 1.5, 0.2830188679245283
n1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,if (min.value >= n3.value) {   min.value=n3.value; } ,IF_STATEMENT, line no: 73, 0.007585166902650622, insert, 1.0, 0.6000000000000001, 0.2830188679245283
n2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (min.value >= n3.value) {   min.value=n3.value; } ,IF_STATEMENT, line no: 73, 0.007585166902650622, insert, 1.0, 0.6000000000000001, 0.2830188679245283
n4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,if (min.value >= n3.value) {   min.value=n3.value; } ,IF_STATEMENT, line no: 73, 0.007585166902650622, insert, 1.0, 0.6000000000000001, 0.2830188679245283
n1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,if (n1.value <= n2.value) {   min.value=n1.value; }  else {   min.value=n2.value; } ,IF_STATEMENT, line no: 68, 0.007574540167522482, insert, 1.0, 1.6, 0.21428571428571427
n2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (n1.value <= n2.value) {   min.value=n1.value; }  else {   min.value=n2.value; } ,IF_STATEMENT, line no: 68, 0.007518290167522482, insert, 1.0, 1.6, 0.20238095238095238
n3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,if (n1.value <= n2.value) {   min.value=n1.value; }  else {   min.value=n2.value; } ,IF_STATEMENT, line no: 68, 0.007273351478519485, insert, 1.0, 0.6666666666666666, 0.20238095238095238
n4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,if (n1.value <= n2.value) {   min.value=n1.value; }  else {   min.value=n2.value; } ,IF_STATEMENT, line no: 68, 0.007273351478519485, insert, 1.0, 0.6666666666666666, 0.20238095238095238
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,if (min.value >= n4.value) {   min.value=n4.value; }  else {   output+=(String.format("%d is the smallest\n" min.value)); } ,IF_STATEMENT, line no: 76, 0.007135068866903286, insert, 1.0, 1.0, 0.31451612903225806
n4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,if (min.value >= n4.value) {   min.value=n4.value; }  else {   output+=(String.format("%d is the smallest\n" min.value)); } ,IF_STATEMENT, line no: 76, 0.0070861965347003356, insert, 1.0, 1.6, 0.16129032258064516
n1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,if (min.value >= n4.value) {   min.value=n4.value; }  else {   output+=(String.format("%d is the smallest\n" min.value)); } ,IF_STATEMENT, line no: 76, 0.006840181186930061, insert, 1.0, 0.6666666666666666, 0.16129032258064516
n2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (min.value >= n4.value) {   min.value=n4.value; }  else {   output+=(String.format("%d is the smallest\n" min.value)); } ,IF_STATEMENT, line no: 76, 0.006840181186930061, insert, 1.0, 0.6666666666666666, 0.16129032258064516
n3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,if (min.value >= n4.value) {   min.value=n4.value; }  else {   output+=(String.format("%d is the smallest\n" min.value)); } ,IF_STATEMENT, line no: 76, 0.006840181186930061, insert, 1.0, 0.6666666666666666, 0.16129032258064516
scanner,SIMPLE_NAME, line no: 64,mainClass.scanner,QUALIFIED_NAME, line no: 51, 0.0062937335668409485, insert, 0.11450381679389313, 1.0, 0.4117647058823529
scanner,SIMPLE_NAME, line no: 65,mainClass.scanner,QUALIFIED_NAME, line no: 51, 0.0062937335668409485, insert, 0.11450381679389313, 1.0, 0.4117647058823529
scanner,SIMPLE_NAME, line no: 66,mainClass.scanner,QUALIFIED_NAME, line no: 51, 0.0062937335668409485, insert, 0.11450381679389313, 1.0, 0.4117647058823529
scanner,SIMPLE_NAME, line no: 67,mainClass.scanner,QUALIFIED_NAME, line no: 51, 0.0062937335668409485, insert, 0.11450381679389313, 1.0, 0.4117647058823529
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,if (n1.value <= n2.value) {   min.value=n1.value; }  else {   min.value=n2.value; } ,IF_STATEMENT, line no: 68, 0.006055547458439385, insert, 1.0, 0.0, 0.27380952380952384
scanner,SIMPLE_NAME, line no: 64,java.util.Scanner,QUALIFIED_NAME, line no: 51, 0.0053562710923591534, insert, 0.12213740458015267, 0.0, 0.35294117647058826
scanner,SIMPLE_NAME, line no: 65,java.util.Scanner,QUALIFIED_NAME, line no: 51, 0.0053562710923591534, insert, 0.12213740458015267, 0.0, 0.35294117647058826
scanner,SIMPLE_NAME, line no: 66,java.util.Scanner,QUALIFIED_NAME, line no: 51, 0.0053562710923591534, insert, 0.12213740458015267, 0.0, 0.35294117647058826
scanner,SIMPLE_NAME, line no: 67,java.util.Scanner,QUALIFIED_NAME, line no: 51, 0.0053562710923591534, insert, 0.12213740458015267, 0.0, 0.35294117647058826
n1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,if (args.length > 0) {   mainClass.scanner=new java.util.Scanner(args[0]); }  else {   mainClass.scanner=new java.util.Scanner(System.in); } ,IF_STATEMENT, line no: 50, 0.003735706895162673, insert, 0.3984375, 0.5, 0.14893617021276595
n2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (args.length > 0) {   mainClass.scanner=new java.util.Scanner(args[0]); }  else {   mainClass.scanner=new java.util.Scanner(System.in); } ,IF_STATEMENT, line no: 50, 0.003735706895162673, insert, 0.3984375, 0.5, 0.14893617021276595
n3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,if (args.length > 0) {   mainClass.scanner=new java.util.Scanner(args[0]); }  else {   mainClass.scanner=new java.util.Scanner(System.in); } ,IF_STATEMENT, line no: 50, 0.003735706895162673, insert, 0.3984375, 0.5, 0.14893617021276595
n4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,if (args.length > 0) {   mainClass.scanner=new java.util.Scanner(args[0]); }  else {   mainClass.scanner=new java.util.Scanner(System.in); } ,IF_STATEMENT, line no: 50, 0.003735706895162673, insert, 0.3984375, 0.5, 0.14893617021276595
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,if (args.length > 0) {   mainClass.scanner=new java.util.Scanner(args[0]); }  else {   mainClass.scanner=new java.util.Scanner(System.in); } ,IF_STATEMENT, line no: 50, 0.0030595836127748997, insert, 0.3984375, 0.0, 0.2198581560283688
