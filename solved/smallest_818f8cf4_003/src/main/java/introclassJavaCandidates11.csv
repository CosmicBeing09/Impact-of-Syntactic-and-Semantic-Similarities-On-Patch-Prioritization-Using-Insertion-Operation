output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62, 0.12225, insert, 1.0, 1.0, 1.0
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64, 0.12225, insert, 1.0, 3.0, 1.0
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 0.12225, insert, 1.0, 3.0, 1.0
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66, 0.12225, insert, 1.0, 3.0, 1.0
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67, 0.12225, insert, 1.0, 3.0, 1.0
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 0.11817500000000002, insert, 1.0, 1.5, 0.9666666666666667
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66, 0.11817500000000002, insert, 1.0, 1.5, 0.9666666666666667
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67, 0.11817500000000002, insert, 1.0, 1.5, 0.9666666666666667
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64, 0.11817500000000002, insert, 1.0, 1.5, 0.9666666666666667
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66, 0.11817500000000002, insert, 1.0, 1.5, 0.9666666666666667
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67, 0.11817500000000002, insert, 1.0, 1.5, 0.9666666666666667
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64, 0.11817500000000002, insert, 1.0, 1.5, 0.9666666666666667
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 0.11817500000000002, insert, 1.0, 1.5, 0.9666666666666667
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67, 0.11817500000000002, insert, 1.0, 1.5, 0.9666666666666667
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64, 0.11817500000000002, insert, 1.0, 1.5, 0.9666666666666667
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 0.11817500000000002, insert, 1.0, 1.5, 0.9666666666666667
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66, 0.11817500000000002, insert, 1.0, 1.5, 0.9666666666666667
String,SIMPLE_NAME, line no: 83,String,SIMPLE_NAME, line no: 49, 0.09390000000000001, insert, 0.7407407407407407, 0.0, 1.0
format,SIMPLE_NAME, line no: 83,format,SIMPLE_NAME, line no: 63, 0.09390000000000001, insert, 1.0, 0.0, 1.0
num_smallest,SIMPLE_NAME, line no: 83,num_smallest,SIMPLE_NAME, line no: 61, 0.09390000000000001, insert, 1.0, 1.0, 1.0
value,SIMPLE_NAME, line no: 83,value,SIMPLE_NAME, line no: 7, 0.09390000000000001, insert, 0.21428571428571427, 1.0, 1.0
num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 82,num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 70, 0.0912, insert, 0.8695652173913043, 3.0, 1.0
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 71, 0.0912, insert, 0.8695652173913043, 3.0, 1.0
num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 82,num_smallest.value=num3.value; ,EXPRESSION_STATEMENT, line no: 78, 0.08693632538569425, insert, 0.9565217391304348, 1.5, 0.967741935483871
num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 82,num_smallest.value=num2.value; ,EXPRESSION_STATEMENT, line no: 74, 0.08561458625525947, insert, 0.9130434782608695, 1.5, 0.967741935483871
num_smallest.value,QUALIFIED_NAME, line no: 83,num_smallest,SIMPLE_NAME, line no: 61, 0.07303333333333333, insert, 1.0, 0.5, 0.6666666666666666
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62, 0.054227027027027024, insert, 1.0, 0.3333333333333333, 0.5675675675675675
num_smallest.value,QUALIFIED_NAME, line no: 83,value,SIMPLE_NAME, line no: 7, 0.048688888888888886, insert, 0.2222222222222222, 0.5, 0.2777777777777778
"%d is the smallest\n",STRING_LITERAL, line no: 83,num_smallest,SIMPLE_NAME, line no: 61, 0.048372727272727276, insert, 1.0, 0.0, 0.36363636363636365
String,SIMPLE_NAME, line no: 63,String,SIMPLE_NAME, line no: 49, 0.046950000000000006, insert, 0.20816326530612245, 0.0, 1.0
format,SIMPLE_NAME, line no: 63,format,SIMPLE_NAME, line no: 63, 0.046950000000000006, insert, 1.0, 0.0, 1.0
scanner,SIMPLE_NAME, line no: 64,scanner,SIMPLE_NAME, line no: 51, 0.046950000000000006, insert, 0.06557377049180328, 1.0, 1.0
nextInt,SIMPLE_NAME, line no: 64,nextInt,SIMPLE_NAME, line no: 64, 0.046950000000000006, insert, 1.0, 0.0, 1.0
scanner,SIMPLE_NAME, line no: 65,scanner,SIMPLE_NAME, line no: 51, 0.046950000000000006, insert, 0.06557377049180328, 1.0, 1.0
nextInt,SIMPLE_NAME, line no: 65,nextInt,SIMPLE_NAME, line no: 64, 0.046950000000000006, insert, 1.0, 0.0, 1.0
scanner,SIMPLE_NAME, line no: 66,scanner,SIMPLE_NAME, line no: 51, 0.046950000000000006, insert, 0.06557377049180328, 1.0, 1.0
nextInt,SIMPLE_NAME, line no: 66,nextInt,SIMPLE_NAME, line no: 64, 0.046950000000000006, insert, 1.0, 0.0, 1.0
scanner,SIMPLE_NAME, line no: 67,scanner,SIMPLE_NAME, line no: 51, 0.046950000000000006, insert, 0.06557377049180328, 1.0, 1.0
nextInt,SIMPLE_NAME, line no: 67,nextInt,SIMPLE_NAME, line no: 64, 0.046950000000000006, insert, 1.0, 0.0, 1.0
num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 82,output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 71, 0.04470588235294118, insert, 0.8695652173913043, 1.5, 0.3088235294117647
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 70, 0.04470588235294118, insert, 0.8695652173913043, 1.5, 0.3088235294117647
num_smallest,SIMPLE_NAME, line no: 83,num1,SIMPLE_NAME, line no: 60, 0.04434166666666666, insert, 1.0, 0.0, 0.25
num_smallest,SIMPLE_NAME, line no: 83,num2,SIMPLE_NAME, line no: 60, 0.04434166666666666, insert, 1.0, 0.0, 0.25
num_smallest,SIMPLE_NAME, line no: 83,num3,SIMPLE_NAME, line no: 60, 0.04434166666666666, insert, 1.0, 0.0, 0.25
num_smallest,SIMPLE_NAME, line no: 83,num4,SIMPLE_NAME, line no: 61, 0.04434166666666666, insert, 1.0, 0.0, 0.25
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,num_smallest.value=num3.value; ,EXPRESSION_STATEMENT, line no: 78, 0.04338414322250639, insert, 0.9565217391304348, 1.5, 0.3088235294117647
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,num_smallest.value=num2.value; ,EXPRESSION_STATEMENT, line no: 74, 0.042062404092071605, insert, 0.9130434782608695, 1.5, 0.3088235294117647
num_smallest,SIMPLE_NAME, line no: 83,value,SIMPLE_NAME, line no: 7, 0.04173333333333334, insert, 0.21428571428571427, 0.0, 0.25
value,SIMPLE_NAME, line no: 83,num_smallest,SIMPLE_NAME, line no: 61, 0.04173333333333334, insert, 1.0, 0.0, 0.25
num_smallest,SIMPLE_NAME, line no: 83,smallest_818f8cf4_003,SIMPLE_NAME, line no: 48, 0.041360714285714285, insert, 0.75, 0.0, 0.38095238095238093
num_smallest.value,QUALIFIED_NAME, line no: 83,num1,SIMPLE_NAME, line no: 60, 0.03999444444444445, insert, 1.0, 0.0, 0.16666666666666666
num_smallest.value,QUALIFIED_NAME, line no: 83,num2,SIMPLE_NAME, line no: 60, 0.03999444444444445, insert, 1.0, 0.0, 0.16666666666666666
num_smallest.value,QUALIFIED_NAME, line no: 83,num3,SIMPLE_NAME, line no: 60, 0.03999444444444445, insert, 1.0, 0.0, 0.16666666666666666
num_smallest.value,QUALIFIED_NAME, line no: 83,num4,SIMPLE_NAME, line no: 61, 0.03999444444444445, insert, 1.0, 0.0, 0.16666666666666666
format,SIMPLE_NAME, line no: 83,out,SIMPLE_NAME, line no: 56, 0.03883518518518518, insert, 0.7407407407407407, 0.0, 0.3333333333333333
String,SIMPLE_NAME, line no: 83,in,SIMPLE_NAME, line no: 53, 0.038255555555555563, insert, 0.5555555555555556, 0.0, 0.3333333333333333
"%d is the smallest\n",STRING_LITERAL, line no: 83,value,SIMPLE_NAME, line no: 7, 0.03699090909090909, insert, 0.2222222222222222, 0.0, 0.13636363636363635
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 71, 0.03582819333856678, insert, 0.08298755186721991, 1.0, 0.5675675675675675
"%d is the smallest\n",STRING_LITERAL, line no: 83,System,SIMPLE_NAME, line no: 53, 0.031721548821548824, insert, 0.5555555555555556, 0.0, 0.18181818181818182
num_smallest,SIMPLE_NAME, line no: 83,out,SIMPLE_NAME, line no: 56, 0.0313, insert, 0.75, 0.0, 0.16666666666666666
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 0.030497186700767263, insert, 0.782608695652174, 0.0, 0.16176470588235295
"%d is the smallest\n",STRING_LITERAL, line no: 83,println,SIMPLE_NAME, line no: 56, 0.03029882154882155, insert, 0.7407407407407407, 0.0, 0.18181818181818182
value,SIMPLE_NAME, line no: 83,smallest_818f8cf4_003,SIMPLE_NAME, line no: 48, 0.02943690476190476, insert, 0.75, 0.0, 0.14285714285714285
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 0.028998443983402487, insert, 0.21161825726141079, 0.0, 0.36666666666666664
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 0.028998443983402487, insert, 0.21161825726141079, 0.0, 0.36666666666666664
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 0.028998443983402487, insert, 0.21161825726141079, 0.0, 0.36666666666666664
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 0.028998443983402487, insert, 0.21161825726141079, 0.0, 0.36666666666666664
num_smallest.value,QUALIFIED_NAME, line no: 83,out,SIMPLE_NAME, line no: 56, 0.028401851851851855, insert, 0.7407407407407407, 0.0, 0.1111111111111111
num_smallest.value,QUALIFIED_NAME, line no: 83,java,SIMPLE_NAME, line no: 44, 0.026083333333333337, insert, 0.07407407407407407, 0.0, 0.16666666666666666
num_smallest.value,QUALIFIED_NAME, line no: 83,util,SIMPLE_NAME, line no: 44, 0.026083333333333337, insert, 0.07407407407407407, 0.0, 0.16666666666666666
scanner,SIMPLE_NAME, line no: 64,Scanner,SIMPLE_NAME, line no: 44, 0.025811504683840754, insert, 0.004098360655737705, 0.0, 0.8571428571428571
scanner,SIMPLE_NAME, line no: 65,Scanner,SIMPLE_NAME, line no: 44, 0.025811504683840754, insert, 0.004098360655737705, 0.0, 0.8571428571428571
scanner,SIMPLE_NAME, line no: 66,Scanner,SIMPLE_NAME, line no: 44, 0.025811504683840754, insert, 0.004098360655737705, 0.0, 0.8571428571428571
scanner,SIMPLE_NAME, line no: 67,Scanner,SIMPLE_NAME, line no: 44, 0.025811504683840754, insert, 0.004098360655737705, 0.0, 0.8571428571428571
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 80, 0.023736180904522612, insert, 1.0, 3.0, 0.3417085427135678
"%d is the smallest\n",STRING_LITERAL, line no: 83,in,SIMPLE_NAME, line no: 53, 0.023079797979797985, insert, 0.5555555555555556, 0.0, 0.09090909090909091
num_smallest.value,QUALIFIED_NAME, line no: 83,num_smallest.value,QUALIFIED_NAME, line no: 70, 0.0225, insert, 0.8148148148148148, 2.0, 1.0
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 0.021758132780082987, insert, 0.05394190871369295, 0.5, 0.36
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 0.021758132780082987, insert, 0.05394190871369295, 0.5, 0.36
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 0.021758132780082987, insert, 0.05394190871369295, 0.5, 0.36
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 0.021758132780082987, insert, 0.05394190871369295, 0.5, 0.36
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 0.021343999361634218, insert, 0.06224066390041494, 0.5, 0.34615384615384615
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 0.021343999361634218, insert, 0.06224066390041494, 0.5, 0.34615384615384615
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 0.021343999361634218, insert, 0.06224066390041494, 0.5, 0.34615384615384615
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 0.021343999361634218, insert, 0.06224066390041494, 0.5, 0.34615384615384615
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,value=i; ,EXPRESSION_STATEMENT, line no: 7, 0.02105134854771784, insert, 0.016597510373443983, 0.3333333333333333, 0.26666666666666666
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,value=i; ,EXPRESSION_STATEMENT, line no: 7, 0.02105134854771784, insert, 0.016597510373443983, 0.3333333333333333, 0.26666666666666666
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,value=i; ,EXPRESSION_STATEMENT, line no: 7, 0.02105134854771784, insert, 0.016597510373443983, 0.3333333333333333, 0.26666666666666666
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,value=i; ,EXPRESSION_STATEMENT, line no: 7, 0.02105134854771784, insert, 0.016597510373443983, 0.3333333333333333, 0.26666666666666666
num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 82,value=i; ,EXPRESSION_STATEMENT, line no: 7, 0.01999663394109397, insert, 0.17391304347826086, 0.3333333333333333, 0.25806451612903225
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 76, 0.018846534653465342, insert, 1.0, 3.0, 0.16831683168316833
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 0.01853560614556465, insert, 0.21161825726141079, 0.0, 0.16216216216216217
num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 82,if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 80, 0.0184929648241206, insert, 1.0, 3.0, 0.15577889447236182
"Please enter 4 numbers separated by spaces > ",STRING_LITERAL, line no: 63,num_smallest,SIMPLE_NAME, line no: 61, 0.018391298306556662, insert, 0.9836734693877551, 0.0, 0.14893617021276595
"Please enter 4 numbers separated by spaces > ",STRING_LITERAL, line no: 63,scanner,SIMPLE_NAME, line no: 51, 0.018249952236213635, insert, 0.0653061224489796, 0.0, 0.10638297872340426
"Please enter 4 numbers separated by spaces > ",STRING_LITERAL, line no: 63,format,SIMPLE_NAME, line no: 63, 0.017647872340425533, insert, 1.0, 0.0, 0.0851063829787234
String,SIMPLE_NAME, line no: 83,i,SIMPLE_NAME, line no: 7, 0.017388888888888888, insert, 0.2222222222222222, 0.0, 0.16666666666666666
"Please enter 4 numbers separated by spaces > ",STRING_LITERAL, line no: 63,nextInt,SIMPLE_NAME, line no: 64, 0.017251016066000865, insert, 0.9959183673469387, 0.0, 0.0851063829787234
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,if ((num2.value <= num1.value) && (num2.value <= num3.value) && (num2.value <= num4.value)) {   num_smallest.value=num2.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 72, 0.017248768472906406, insert, 1.0, 3.0, 0.1116584564860427
num_smallest,SIMPLE_NAME, line no: 83,num_smallest.value,QUALIFIED_NAME, line no: 70, 0.017232142857142856, insert, 0.7857142857142857, 1.0, 0.6666666666666666
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,if (true) return; ,IF_STATEMENT, line no: 85, 0.01721029411764706, insert, 1.0, 0.0, 0.16176470588235295
"Please enter 4 numbers separated by spaces > ",STRING_LITERAL, line no: 63,num1,SIMPLE_NAME, line no: 60, 0.017187138514980462, insert, 0.9836734693877551, 0.0, 0.06382978723404255
"Please enter 4 numbers separated by spaces > ",STRING_LITERAL, line no: 63,num2,SIMPLE_NAME, line no: 60, 0.017187138514980462, insert, 0.9836734693877551, 0.0, 0.06382978723404255
"Please enter 4 numbers separated by spaces > ",STRING_LITERAL, line no: 63,num3,SIMPLE_NAME, line no: 60, 0.017187138514980462, insert, 0.9836734693877551, 0.0, 0.06382978723404255
"Please enter 4 numbers separated by spaces > ",STRING_LITERAL, line no: 63,num4,SIMPLE_NAME, line no: 61, 0.017187138514980462, insert, 0.9836734693877551, 0.0, 0.06382978723404255
"Please enter 4 numbers separated by spaces > ",STRING_LITERAL, line no: 63,value,SIMPLE_NAME, line no: 7, 0.016854159791576204, insert, 0.024489795918367346, 0.0, 0.06382978723404255
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,if ((num1.value <= num2.value) && (num1.value <= num3.value) && (num1.value <= num4.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num2.value <= num1.value) && (num2.value <= num3.value) && (num2.value <= num4.value)) {   num_smallest.value=num2.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 68, 0.016455773955773953, insert, 1.0, 3.0, 0.08353808353808354
num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 82,if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 76, 0.016263861386138615, insert, 1.0, 3.0, 0.07673267326732673
num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 82,if ((num2.value <= num1.value) && (num2.value <= num3.value) && (num2.value <= num4.value)) {   num_smallest.value=num2.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 72, 0.015535467980295568, insert, 1.0, 3.0, 0.05090311986863711
num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 82,if ((num1.value <= num2.value) && (num1.value <= num3.value) && (num1.value <= num4.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num2.value <= num1.value) && (num2.value <= num3.value) && (num2.value <= num4.value)) {   num_smallest.value=num2.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 68, 0.015173955773955772, insert, 1.0, 3.0, 0.038083538083538086
value,SIMPLE_NAME, line no: 83,num1.value,QUALIFIED_NAME, line no: 64, 0.015, insert, 1.0, 1.0, 0.5
value,SIMPLE_NAME, line no: 83,num2.value,QUALIFIED_NAME, line no: 65, 0.015, insert, 1.0, 1.0, 0.5
value,SIMPLE_NAME, line no: 83,num3.value,QUALIFIED_NAME, line no: 66, 0.015, insert, 1.0, 1.0, 0.5
value,SIMPLE_NAME, line no: 83,num4.value,QUALIFIED_NAME, line no: 67, 0.015, insert, 1.0, 1.0, 0.5
num_smallest.value,QUALIFIED_NAME, line no: 83,num1.value,QUALIFIED_NAME, line no: 64, 0.014583333333333332, insert, 1.0, 0.6666666666666666, 0.5
num_smallest.value,QUALIFIED_NAME, line no: 83,num2.value,QUALIFIED_NAME, line no: 65, 0.014583333333333332, insert, 1.0, 0.6666666666666666, 0.5
num_smallest.value,QUALIFIED_NAME, line no: 83,num3.value,QUALIFIED_NAME, line no: 66, 0.014583333333333332, insert, 1.0, 0.6666666666666666, 0.5
num_smallest.value,QUALIFIED_NAME, line no: 83,num4.value,QUALIFIED_NAME, line no: 67, 0.014583333333333332, insert, 1.0, 0.6666666666666666, 0.5
num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 82,if (args.length > 0) {   mainClass.scanner=new java.util.Scanner(args[0]); }  else {   mainClass.scanner=new java.util.Scanner(System.in); } ,IF_STATEMENT, line no: 50, 0.013634782608695651, insert, 0.782608695652174, 0.0, 0.1347517730496454
num_smallest,SIMPLE_NAME, line no: 83,num1.value,QUALIFIED_NAME, line no: 64, 0.012499999999999999, insert, 1.0, 0.0, 0.5
num_smallest,SIMPLE_NAME, line no: 83,num2.value,QUALIFIED_NAME, line no: 65, 0.012499999999999999, insert, 1.0, 0.0, 0.5
num_smallest,SIMPLE_NAME, line no: 83,num3.value,QUALIFIED_NAME, line no: 66, 0.012499999999999999, insert, 1.0, 0.0, 0.5
num_smallest,SIMPLE_NAME, line no: 83,num4.value,QUALIFIED_NAME, line no: 67, 0.012499999999999999, insert, 1.0, 0.0, 0.5
String,SIMPLE_NAME, line no: 63,in,SIMPLE_NAME, line no: 53, 0.011647006802721089, insert, 0.07755102040816327, 0.0, 0.3333333333333333
value,SIMPLE_NAME, line no: 83,num_smallest.value,QUALIFIED_NAME, line no: 70, 0.011398809523809523, insert, 0.7857142857142857, 1.0, 0.2777777777777778
format,SIMPLE_NAME, line no: 63,out,SIMPLE_NAME, line no: 56, 0.01127438775510204, insert, 0.22040816326530613, 0.0, 0.3333333333333333
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,value=i; ,EXPRESSION_STATEMENT, line no: 7, 0.01065166240409207, insert, 0.17391304347826086, 0.3333333333333333, 0.10294117647058823
"%d is the smallest\n",STRING_LITERAL, line no: 83,i,SIMPLE_NAME, line no: 7, 0.0098010101010101, insert, 0.2222222222222222, 0.0, 0.045454545454545456
String,SIMPLE_NAME, line no: 83,System.in,QUALIFIED_NAME, line no: 53, 0.009166666666666667, insert, 0.5555555555555556, 0.0, 0.4444444444444444
value,SIMPLE_NAME, line no: 83,args.length,QUALIFIED_NAME, line no: 50, 0.00862012987012987, insert, 0.7857142857142857, 0.0, 0.2727272727272727
value,SIMPLE_NAME, line no: 83,java.util,QUALIFIED_NAME, line no: 44, 0.007619047619047618, insert, 0.03571428571428571, 0.0, 0.3333333333333333
value,SIMPLE_NAME, line no: 83,mainClass.output,QUALIFIED_NAME, line no: 56, 0.0075, insert, 0.75, 0.0, 0.1875
value,SIMPLE_NAME, line no: 83,java.util.Scanner,QUALIFIED_NAME, line no: 51, 0.007373949579831933, insert, 0.5, 0.0, 0.23529411764705882
"%d is the smallest\n",STRING_LITERAL, line no: 83,System.in,QUALIFIED_NAME, line no: 53, 0.006212121212121212, insert, 0.5555555555555556, 0.0, 0.22727272727272727
value,SIMPLE_NAME, line no: 83,mainClass.scanner,QUALIFIED_NAME, line no: 51, 0.006050420168067227, insert, 0.5, 0.0, 0.17647058823529413
num_smallest.value,QUALIFIED_NAME, line no: 83,true,BOOLEAN_LITERAL, line no: 85, 0.0060055555555555565, insert, 1.0, 0.0, 0.16666666666666666
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,value=i; ,EXPRESSION_STATEMENT, line no: 7, 0.005632429628798925, insert, 0.016597510373443983, 0.0, 0.08108108108108109
String,SIMPLE_NAME, line no: 63,i,SIMPLE_NAME, line no: 7, 0.005599931972789115, insert, 0.024489795918367346, 0.0, 0.16666666666666666
"Please enter 4 numbers separated by spaces > ",STRING_LITERAL, line no: 63,mainClass,SIMPLE_NAME, line no: 48, 0.0054472600955275735, insert, 0.20816326530612245, 0.0, 0.10638297872340426
"Please enter 4 numbers separated by spaces > ",STRING_LITERAL, line no: 63,length,SIMPLE_NAME, line no: 50, 0.005447260095527572, insert, 0.22040816326530613, 0.0, 0.0851063829787234
"Please enter 4 numbers separated by spaces > ",STRING_LITERAL, line no: 63,System,SIMPLE_NAME, line no: 53, 0.005447260095527572, insert, 0.07755102040816327, 0.0, 0.0851063829787234
"Please enter 4 numbers separated by spaces > ",STRING_LITERAL, line no: 63,args,SIMPLE_NAME, line no: 50, 0.0051142813721233174, insert, 0.22040816326530613, 0.0, 0.06382978723404255
"Please enter 4 numbers separated by spaces > ",STRING_LITERAL, line no: 63,exec,SIMPLE_NAME, line no: 55, 0.005050403821102909, insert, 0.2163265306122449, 0.0, 0.06382978723404255
"Please enter 4 numbers separated by spaces > ",STRING_LITERAL, line no: 63,out,SIMPLE_NAME, line no: 56, 0.004448323925314807, insert, 0.22040816326530613, 0.0, 0.0425531914893617
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 80, 0.003973115577889447, insert, 1.0, 1.0, 0.21105527638190955
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 76, 0.003953094059405941, insert, 1.0, 1.0, 0.14603960396039603
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,if (true) return; ,IF_STATEMENT, line no: 85, 0.003916216216216217, insert, 1.0, 0.0, 0.16216216216216217
"Please enter 4 numbers separated by spaces > ",STRING_LITERAL, line no: 63,Scanner,SIMPLE_NAME, line no: 44, 0.0038775032566217976, insert, 0.004081632653061225, 0.0, 0.10638297872340426
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 80, 0.0038623115577889446, insert, 1.0, 1.75, 0.12562814070351758
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 80, 0.0038623115577889446, insert, 1.0, 1.75, 0.12562814070351758
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 80, 0.003814824120603015, insert, 1.0, 1.75, 0.12060301507537688
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 80, 0.003814824120603015, insert, 1.0, 1.75, 0.12060301507537688
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,if ((num2.value <= num1.value) && (num2.value <= num3.value) && (num2.value <= num4.value)) {   num_smallest.value=num2.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 72, 0.0037137931034482764, insert, 1.0, 1.0, 0.10016420361247948
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,if ((num1.value <= num2.value) && (num1.value <= num3.value) && (num1.value <= num4.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num2.value <= num1.value) && (num2.value <= num3.value) && (num2.value <= num4.value)) {   num_smallest.value=num2.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 68, 0.00359502457002457, insert, 1.0, 1.0, 0.0773955773955774
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 76, 0.0035242574257425747, insert, 1.0, 1.75, 0.06435643564356436
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 76, 0.0035242574257425747, insert, 1.0, 1.75, 0.06435643564356436
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 76, 0.0035242574257425747, insert, 1.0, 1.75, 0.06435643564356436
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 76, 0.0035242574257425747, insert, 1.0, 1.75, 0.06435643564356436
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,if ((num2.value <= num1.value) && (num2.value <= num3.value) && (num2.value <= num4.value)) {   num_smallest.value=num2.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 72, 0.003413793103448276, insert, 1.0, 1.75, 0.04433497536945813
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if ((num2.value <= num1.value) && (num2.value <= num3.value) && (num2.value <= num4.value)) {   num_smallest.value=num2.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 72, 0.003413793103448276, insert, 1.0, 1.75, 0.04433497536945813
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,if ((num2.value <= num1.value) && (num2.value <= num3.value) && (num2.value <= num4.value)) {   num_smallest.value=num2.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 72, 0.003413793103448276, insert, 1.0, 1.75, 0.04433497536945813
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,if ((num2.value <= num1.value) && (num2.value <= num3.value) && (num2.value <= num4.value)) {   num_smallest.value=num2.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 72, 0.003413793103448276, insert, 1.0, 1.75, 0.04433497536945813
scanner,SIMPLE_NAME, line no: 64,mainClass.scanner,QUALIFIED_NAME, line no: 51, 0.0033495057859209256, insert, 0.06147540983606557, 1.0, 0.4117647058823529
scanner,SIMPLE_NAME, line no: 65,mainClass.scanner,QUALIFIED_NAME, line no: 51, 0.0033495057859209256, insert, 0.06147540983606557, 1.0, 0.4117647058823529
scanner,SIMPLE_NAME, line no: 66,mainClass.scanner,QUALIFIED_NAME, line no: 51, 0.0033495057859209256, insert, 0.06147540983606557, 1.0, 0.4117647058823529
scanner,SIMPLE_NAME, line no: 67,mainClass.scanner,QUALIFIED_NAME, line no: 51, 0.0033495057859209256, insert, 0.06147540983606557, 1.0, 0.4117647058823529
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,if ((num1.value <= num2.value) && (num1.value <= num3.value) && (num1.value <= num4.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num2.value <= num1.value) && (num2.value <= num3.value) && (num2.value <= num4.value)) {   num_smallest.value=num2.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 68, 0.0033473587223587227, insert, 1.0, 1.75, 0.033169533169533166
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if ((num1.value <= num2.value) && (num1.value <= num3.value) && (num1.value <= num4.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num2.value <= num1.value) && (num2.value <= num3.value) && (num2.value <= num4.value)) {   num_smallest.value=num2.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 68, 0.0033473587223587227, insert, 1.0, 1.75, 0.033169533169533166
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,if ((num1.value <= num2.value) && (num1.value <= num3.value) && (num1.value <= num4.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num2.value <= num1.value) && (num2.value <= num3.value) && (num2.value <= num4.value)) {   num_smallest.value=num2.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 68, 0.0033473587223587227, insert, 1.0, 1.75, 0.033169533169533166
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,if ((num1.value <= num2.value) && (num1.value <= num3.value) && (num1.value <= num4.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num2.value <= num1.value) && (num2.value <= num3.value) && (num2.value <= num4.value)) {   num_smallest.value=num2.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 68, 0.0033473587223587227, insert, 1.0, 1.75, 0.033169533169533166
String,SIMPLE_NAME, line no: 63,System.in,QUALIFIED_NAME, line no: 53, 0.0027755102040816324, insert, 0.07346938775510205, 0.0, 0.4444444444444444
"Please enter 4 numbers separated by spaces > ",STRING_LITERAL, line no: 63,true,BOOLEAN_LITERAL, line no: 85, 0.0027116326530612247, insert, 0.9836734693877551, 0.0, 0.0851063829787234
scanner,SIMPLE_NAME, line no: 64,java.util.Scanner,QUALIFIED_NAME, line no: 51, 0.002703109932497589, insert, 0.06557377049180328, 0.0, 0.35294117647058826
scanner,SIMPLE_NAME, line no: 65,java.util.Scanner,QUALIFIED_NAME, line no: 51, 0.002703109932497589, insert, 0.06557377049180328, 0.0, 0.35294117647058826
scanner,SIMPLE_NAME, line no: 66,java.util.Scanner,QUALIFIED_NAME, line no: 51, 0.002703109932497589, insert, 0.06557377049180328, 0.0, 0.35294117647058826
scanner,SIMPLE_NAME, line no: 67,java.util.Scanner,QUALIFIED_NAME, line no: 51, 0.002703109932497589, insert, 0.06557377049180328, 0.0, 0.35294117647058826
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,if (args.length > 0) {   mainClass.scanner=new java.util.Scanner(args[0]); }  else {   mainClass.scanner=new java.util.Scanner(System.in); } ,IF_STATEMENT, line no: 50, 0.0014708528295223804, insert, 0.21161825726141079, 0.5, 0.15602836879432624
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (args.length > 0) {   mainClass.scanner=new java.util.Scanner(args[0]); }  else {   mainClass.scanner=new java.util.Scanner(System.in); } ,IF_STATEMENT, line no: 50, 0.0014708528295223804, insert, 0.21161825726141079, 0.5, 0.15602836879432624
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,if (args.length > 0) {   mainClass.scanner=new java.util.Scanner(args[0]); }  else {   mainClass.scanner=new java.util.Scanner(System.in); } ,IF_STATEMENT, line no: 50, 0.0014708528295223804, insert, 0.21161825726141079, 0.5, 0.15602836879432624
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,if (args.length > 0) {   mainClass.scanner=new java.util.Scanner(args[0]); }  else {   mainClass.scanner=new java.util.Scanner(System.in); } ,IF_STATEMENT, line no: 50, 0.0014708528295223804, insert, 0.21161825726141079, 0.5, 0.15602836879432624
