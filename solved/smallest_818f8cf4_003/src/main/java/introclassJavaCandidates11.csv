output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62, 3.0, insert, 1.0, 1.0, 1.0
String,SIMPLE_NAME, line no: 63,String,SIMPLE_NAME, line no: 49, 3.0, insert, 0.20816326530612245, 0.0, 1.0
format,SIMPLE_NAME, line no: 63,format,SIMPLE_NAME, line no: 63, 3.0, insert, 1.0, 0.0, 1.0
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64, 3.0, insert, 1.0, 3.0, 1.0
scanner,SIMPLE_NAME, line no: 64,scanner,SIMPLE_NAME, line no: 51, 3.0, insert, 0.06557377049180328, 1.0, 1.0
nextInt,SIMPLE_NAME, line no: 64,nextInt,SIMPLE_NAME, line no: 64, 3.0, insert, 1.0, 0.0, 1.0
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 3.0, insert, 1.0, 3.0, 1.0
scanner,SIMPLE_NAME, line no: 65,scanner,SIMPLE_NAME, line no: 51, 3.0, insert, 0.06557377049180328, 1.0, 1.0
nextInt,SIMPLE_NAME, line no: 65,nextInt,SIMPLE_NAME, line no: 64, 3.0, insert, 1.0, 0.0, 1.0
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66, 3.0, insert, 1.0, 3.0, 1.0
scanner,SIMPLE_NAME, line no: 66,scanner,SIMPLE_NAME, line no: 51, 3.0, insert, 0.06557377049180328, 1.0, 1.0
nextInt,SIMPLE_NAME, line no: 66,nextInt,SIMPLE_NAME, line no: 64, 3.0, insert, 1.0, 0.0, 1.0
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67, 3.0, insert, 1.0, 3.0, 1.0
scanner,SIMPLE_NAME, line no: 67,scanner,SIMPLE_NAME, line no: 51, 3.0, insert, 0.06557377049180328, 1.0, 1.0
nextInt,SIMPLE_NAME, line no: 67,nextInt,SIMPLE_NAME, line no: 64, 3.0, insert, 1.0, 0.0, 1.0
num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 82,num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 70, 3.0, insert, 0.8695652173913043, 3.0, 1.0
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 71, 3.0, insert, 0.8695652173913043, 3.0, 1.0
String,SIMPLE_NAME, line no: 83,String,SIMPLE_NAME, line no: 49, 3.0, insert, 0.7407407407407407, 0.0, 1.0
format,SIMPLE_NAME, line no: 83,format,SIMPLE_NAME, line no: 63, 3.0, insert, 1.0, 0.0, 1.0
num_smallest.value,QUALIFIED_NAME, line no: 83,num_smallest.value,QUALIFIED_NAME, line no: 70, 3.0, insert, 0.8148148148148148, 2.0, 1.0
num_smallest,SIMPLE_NAME, line no: 83,num_smallest,SIMPLE_NAME, line no: 61, 3.0, insert, 1.0, 1.0, 1.0
value,SIMPLE_NAME, line no: 83,value,SIMPLE_NAME, line no: 7, 3.0, insert, 0.21428571428571427, 1.0, 1.0
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 2.8595238095238096, insert, 1.0, 1.5, 0.9666666666666667
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66, 2.8595238095238096, insert, 1.0, 1.5, 0.9666666666666667
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67, 2.8595238095238096, insert, 1.0, 1.5, 0.9666666666666667
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64, 2.8595238095238096, insert, 1.0, 1.5, 0.9666666666666667
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66, 2.8595238095238096, insert, 1.0, 1.5, 0.9666666666666667
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67, 2.8595238095238096, insert, 1.0, 1.5, 0.9666666666666667
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64, 2.8595238095238096, insert, 1.0, 1.5, 0.9666666666666667
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 2.8595238095238096, insert, 1.0, 1.5, 0.9666666666666667
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67, 2.8595238095238096, insert, 1.0, 1.5, 0.9666666666666667
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64, 2.8595238095238096, insert, 1.0, 1.5, 0.9666666666666667
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 2.8595238095238096, insert, 1.0, 1.5, 0.9666666666666667
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66, 2.8595238095238096, insert, 1.0, 1.5, 0.9666666666666667
num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 82,num_smallest.value=num3.value; ,EXPRESSION_STATEMENT, line no: 78, 2.847340597691229, insert, 0.9565217391304348, 1.5, 0.967741935483871
num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 82,num_smallest.value=num2.value; ,EXPRESSION_STATEMENT, line no: 74, 2.8038623368216635, insert, 0.9130434782608695, 1.5, 0.967741935483871
num_smallest.value,QUALIFIED_NAME, line no: 83,num_smallest,SIMPLE_NAME, line no: 61, 2.4572360817087615, insert, 1.0, 0.5, 0.6666666666666666
num_smallest,SIMPLE_NAME, line no: 83,num_smallest.value,QUALIFIED_NAME, line no: 70, 2.421521795994476, insert, 0.7857142857142857, 1.0, 0.6666666666666666
value,SIMPLE_NAME, line no: 83,num1.value,QUALIFIED_NAME, line no: 64, 2.1123724356957947, insert, 1.0, 1.0, 0.5
value,SIMPLE_NAME, line no: 83,num2.value,QUALIFIED_NAME, line no: 65, 2.1123724356957947, insert, 1.0, 1.0, 0.5
value,SIMPLE_NAME, line no: 83,num3.value,QUALIFIED_NAME, line no: 66, 2.1123724356957947, insert, 1.0, 1.0, 0.5
value,SIMPLE_NAME, line no: 83,num4.value,QUALIFIED_NAME, line no: 67, 2.1123724356957947, insert, 1.0, 1.0, 0.5
num_smallest.value,QUALIFIED_NAME, line no: 83,num1.value,QUALIFIED_NAME, line no: 64, 1.9419417382415922, insert, 1.0, 0.6666666666666666, 0.5
num_smallest.value,QUALIFIED_NAME, line no: 83,num2.value,QUALIFIED_NAME, line no: 65, 1.9419417382415922, insert, 1.0, 0.6666666666666666, 0.5
num_smallest.value,QUALIFIED_NAME, line no: 83,num3.value,QUALIFIED_NAME, line no: 66, 1.9419417382415922, insert, 1.0, 0.6666666666666666, 0.5
num_smallest.value,QUALIFIED_NAME, line no: 83,num4.value,QUALIFIED_NAME, line no: 67, 1.9419417382415922, insert, 1.0, 0.6666666666666666, 0.5
num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 82,if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 80, 1.9382008302856168, insert, 1.0, 3.0, 0.15577889447236182
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 80, 1.937852450172556, insert, 1.0, 3.0, 0.3417085427135678
num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 82,num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64, 1.9075302406100971, insert, 1.0, 1.5, 0.4838709677419355
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62, 1.9011678879948324, insert, 1.0, 0.3333333333333333, 0.5675675675675675
num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 82,if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 76, 1.8515867762553837, insert, 1.0, 3.0, 0.07673267326732673
num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 82,if ((num2.value <= num1.value) && (num2.value <= num3.value) && (num2.value <= num4.value)) {   num_smallest.value=num2.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 72, 1.8235382366924235, insert, 1.0, 3.0, 0.05090311986863711
num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 82,if ((num1.value <= num2.value) && (num1.value <= num3.value) && (num1.value <= num4.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num2.value <= num1.value) && (num2.value <= num3.value) && (num2.value <= num4.value)) {   num_smallest.value=num2.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 68, 1.8227249151707339, insert, 1.0, 3.0, 0.038083538083538086
num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 82,num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 1.8167461107097769, insert, 1.0, 0.6000000000000001, 0.4838709677419355
num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 82,num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66, 1.8167461107097769, insert, 1.0, 0.6000000000000001, 0.4838709677419355
num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 82,num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67, 1.8167461107097769, insert, 1.0, 0.6000000000000001, 0.4838709677419355
num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 82,output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 71, 1.7983589933101438, insert, 0.8695652173913043, 1.5, 0.3088235294117647
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 70, 1.7983589933101438, insert, 0.8695652173913043, 1.5, 0.3088235294117647
"%d is the smallest\n",STRING_LITERAL, line no: 83,num_smallest,SIMPLE_NAME, line no: 61, 1.7879004323482923, insert, 1.0, 0.0, 0.36363636363636365
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 76, 1.7656402677676963, insert, 1.0, 3.0, 0.16831683168316833
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,num_smallest.value=num3.value; ,EXPRESSION_STATEMENT, line no: 78, 1.7548807324405784, insert, 0.9565217391304348, 1.5, 0.3088235294117647
scanner,SIMPLE_NAME, line no: 64,Scanner,SIMPLE_NAME, line no: 44, 1.7350117096018733, insert, 0.004098360655737705, 0.0, 0.8571428571428571
scanner,SIMPLE_NAME, line no: 65,Scanner,SIMPLE_NAME, line no: 44, 1.7350117096018733, insert, 0.004098360655737705, 0.0, 0.8571428571428571
scanner,SIMPLE_NAME, line no: 66,Scanner,SIMPLE_NAME, line no: 44, 1.7350117096018733, insert, 0.004098360655737705, 0.0, 0.8571428571428571
scanner,SIMPLE_NAME, line no: 67,Scanner,SIMPLE_NAME, line no: 44, 1.7350117096018733, insert, 0.004098360655737705, 0.0, 0.8571428571428571
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,num_smallest.value=num2.value; ,EXPRESSION_STATEMENT, line no: 74, 1.711402471571013, insert, 0.9130434782608695, 1.5, 0.3088235294117647
num_smallest.value,QUALIFIED_NAME, line no: 83,value,SIMPLE_NAME, line no: 7, 1.710790479669997, insert, 0.2222222222222222, 0.5, 0.2777777777777778
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,if ((num2.value <= num1.value) && (num2.value <= num3.value) && (num2.value <= num4.value)) {   num_smallest.value=num2.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 72, 1.709616241824353, insert, 1.0, 3.0, 0.1116584564860427
"%d is the smallest\n",STRING_LITERAL, line no: 83,num_smallest.value,QUALIFIED_NAME, line no: 70, 1.6990465602613323, insert, 0.8148148148148148, 0.0, 0.36363636363636365
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,if ((num1.value <= num2.value) && (num1.value <= num3.value) && (num1.value <= num4.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num2.value <= num1.value) && (num2.value <= num3.value) && (num2.value <= num4.value)) {   num_smallest.value=num2.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 68, 1.6813730304897818, insert, 1.0, 3.0, 0.08353808353808354
value,SIMPLE_NAME, line no: 83,num_smallest.value,QUALIFIED_NAME, line no: 70, 1.6750761939557115, insert, 0.7857142857142857, 1.0, 0.2777777777777778
nextInt,SIMPLE_NAME, line no: 64,IntObj,SIMPLE_NAME, line no: 60, 1.6398831443541944, insert, 0.9877049180327869, 0.0, 0.42857142857142855
nextInt,SIMPLE_NAME, line no: 65,IntObj,SIMPLE_NAME, line no: 60, 1.6398831443541944, insert, 0.9877049180327869, 0.0, 0.42857142857142855
nextInt,SIMPLE_NAME, line no: 66,IntObj,SIMPLE_NAME, line no: 60, 1.6398831443541944, insert, 0.9877049180327869, 0.0, 0.42857142857142855
nextInt,SIMPLE_NAME, line no: 67,IntObj,SIMPLE_NAME, line no: 60, 1.6398831443541944, insert, 0.9877049180327869, 0.0, 0.42857142857142855
num_smallest,SIMPLE_NAME, line no: 83,num1.value,QUALIFIED_NAME, line no: 64, 1.6118033988749896, insert, 1.0, 0.0, 0.5
num_smallest,SIMPLE_NAME, line no: 83,num2.value,QUALIFIED_NAME, line no: 65, 1.6118033988749896, insert, 1.0, 0.0, 0.5
num_smallest,SIMPLE_NAME, line no: 83,num3.value,QUALIFIED_NAME, line no: 66, 1.6118033988749896, insert, 1.0, 0.0, 0.5
num_smallest,SIMPLE_NAME, line no: 83,num4.value,QUALIFIED_NAME, line no: 67, 1.6118033988749896, insert, 1.0, 0.0, 0.5
num_smallest,SIMPLE_NAME, line no: 83,smallest_818f8cf4_003,SIMPLE_NAME, line no: 48, 1.566238131018388, insert, 0.75, 0.0, 0.38095238095238093
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 80, 1.526488048539393, insert, 1.0, 1.75, 0.12562814070351758
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 80, 1.505013410619614, insert, 1.0, 1.75, 0.12562814070351758
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 80, 1.4785136470716944, insert, 1.0, 1.75, 0.12060301507537688
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 80, 1.4785136470716944, insert, 1.0, 1.75, 0.12060301507537688
num_smallest,SIMPLE_NAME, line no: 83,num1,SIMPLE_NAME, line no: 60, 1.473606797749979, insert, 1.0, 0.0, 0.25
num_smallest,SIMPLE_NAME, line no: 83,num2,SIMPLE_NAME, line no: 60, 1.473606797749979, insert, 1.0, 0.0, 0.25
num_smallest,SIMPLE_NAME, line no: 83,num3,SIMPLE_NAME, line no: 60, 1.473606797749979, insert, 1.0, 0.0, 0.25
num_smallest,SIMPLE_NAME, line no: 83,num4,SIMPLE_NAME, line no: 61, 1.473606797749979, insert, 1.0, 0.0, 0.25
num_smallest.value,QUALIFIED_NAME, line no: 83,smallest_818f8cf4_003,SIMPLE_NAME, line no: 48, 1.4658167224989642, insert, 0.7407407407407407, 0.0, 0.38095238095238093
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 76, 1.455250919955017, insert, 1.0, 1.75, 0.06435643564356436
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 76, 1.4444923561666285, insert, 1.0, 1.75, 0.06435643564356436
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 76, 1.4337337923782398, insert, 1.0, 1.75, 0.06435643564356436
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if ((num2.value <= num1.value) && (num2.value <= num3.value) && (num2.value <= num4.value)) {   num_smallest.value=num2.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 72, 1.4248745949991575, insert, 1.0, 1.75, 0.04433497536945813
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,if ((num2.value <= num1.value) && (num2.value <= num3.value) && (num2.value <= num4.value)) {   num_smallest.value=num2.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 72, 1.4248745949991575, insert, 1.0, 1.75, 0.04433497536945813
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 76, 1.4229752285898511, insert, 1.0, 1.75, 0.06435643564356436
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,if ((num2.value <= num1.value) && (num2.value <= num3.value) && (num2.value <= num4.value)) {   num_smallest.value=num2.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 72, 1.4176946021759556, insert, 1.0, 1.75, 0.04433497536945813
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,if ((num1.value <= num2.value) && (num1.value <= num3.value) && (num1.value <= num4.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num2.value <= num1.value) && (num2.value <= num3.value) && (num2.value <= num4.value)) {   num_smallest.value=num2.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 68, 1.4136309785968666, insert, 1.0, 1.75, 0.033169533169533166
"%d is the smallest\n",STRING_LITERAL, line no: 83,smallest_818f8cf4_003,SIMPLE_NAME, line no: 48, 1.4121706100026503, insert, 0.7407407407407407, 0.0, 0.36363636363636365
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,if ((num2.value <= num1.value) && (num2.value <= num3.value) && (num2.value <= num4.value)) {   num_smallest.value=num2.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 72, 1.4105146093527536, insert, 1.0, 1.75, 0.04433497536945813
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if ((num1.value <= num2.value) && (num1.value <= num3.value) && (num1.value <= num4.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num2.value <= num1.value) && (num2.value <= num3.value) && (num2.value <= num4.value)) {   num_smallest.value=num2.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 68, 1.408247090218178, insert, 1.0, 1.75, 0.033169533169533166
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,if ((num1.value <= num2.value) && (num1.value <= num3.value) && (num1.value <= num4.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num2.value <= num1.value) && (num2.value <= num3.value) && (num2.value <= num4.value)) {   num_smallest.value=num2.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 68, 1.408247090218178, insert, 1.0, 1.75, 0.033169533169533166
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,if ((num1.value <= num2.value) && (num1.value <= num3.value) && (num1.value <= num4.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num2.value <= num1.value) && (num2.value <= num3.value) && (num2.value <= num4.value)) {   num_smallest.value=num2.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 68, 1.4028632018394893, insert, 1.0, 1.75, 0.033169533169533166
String,SIMPLE_NAME, line no: 83,println,SIMPLE_NAME, line no: 56, 1.3929189670621482, insert, 0.7407407407407407, 0.0, 0.42857142857142855
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 80, 1.3762206814502969, insert, 1.0, 1.0, 0.21105527638190955
num_smallest.value,QUALIFIED_NAME, line no: 83,num1,SIMPLE_NAME, line no: 60, 1.3434433619633035, insert, 1.0, 0.0, 0.16666666666666666
num_smallest.value,QUALIFIED_NAME, line no: 83,num2,SIMPLE_NAME, line no: 60, 1.3434433619633035, insert, 1.0, 0.0, 0.16666666666666666
num_smallest.value,QUALIFIED_NAME, line no: 83,num3,SIMPLE_NAME, line no: 60, 1.3434433619633035, insert, 1.0, 0.0, 0.16666666666666666
num_smallest.value,QUALIFIED_NAME, line no: 83,num4,SIMPLE_NAME, line no: 61, 1.3434433619633035, insert, 1.0, 0.0, 0.16666666666666666
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64, 1.3342705006944502, insert, 1.0, 0.6000000000000001, 0.20588235294117646
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 1.3342705006944502, insert, 1.0, 0.6000000000000001, 0.20588235294117646
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66, 1.3342705006944502, insert, 1.0, 0.6000000000000001, 0.20588235294117646
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67, 1.3342705006944502, insert, 1.0, 0.6000000000000001, 0.20588235294117646
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 76, 1.3137681859183246, insert, 1.0, 1.0, 0.14603960396039603
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,if ((num2.value <= num1.value) && (num2.value <= num3.value) && (num2.value <= num4.value)) {   num_smallest.value=num2.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 72, 1.2688171630448484, insert, 1.0, 1.0, 0.10016420361247948
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64, 1.24724624302144, insert, 1.0, 0.0, 0.20270270270270271
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65, 1.24724624302144, insert, 1.0, 0.0, 0.20270270270270271
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66, 1.24724624302144, insert, 1.0, 0.0, 0.20270270270270271
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67, 1.24724624302144, insert, 1.0, 0.0, 0.20270270270270271
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62, 1.24724624302144, insert, 1.0, 0.0, 0.20270270270270271
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62, 1.24724624302144, insert, 1.0, 0.0, 0.20270270270270271
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62, 1.24724624302144, insert, 1.0, 0.0, 0.20270270270270271
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62, 1.24724624302144, insert, 1.0, 0.0, 0.20270270270270271
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,if ((num1.value <= num2.value) && (num1.value <= num3.value) && (num1.value <= num4.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num2.value <= num1.value) && (num2.value <= num3.value) && (num2.value <= num4.value)) {   num_smallest.value=num2.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num3.value <= num1.value) && (num3.value <= num2.value) && (num3.value <= num4.value)) {   num_smallest.value=num3.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); }  else if ((num4.value <= num1.value) && (num4.value <= num2.value) && (num4.value <= num3.value)) {   num_smallest.value=num1.value;   output+=(String.format("%d is the smallest\n" num_smallest.value)); } ,IF_STATEMENT, line no: 68, 1.2463869398386174, insert, 1.0, 1.0, 0.0773955773955774
num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 82,output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62, 1.2404452705075224, insert, 1.0, 0.0, 0.20270270270270271
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,System.out.println(mainClass.output); ,EXPRESSION_STATEMENT, line no: 56, 1.187340563314957, insert, 0.782608695652174, 0.5, 0.27941176470588236
"Please enter 4 numbers separated by spaces > ",STRING_LITERAL, line no: 63,num_smallest,SIMPLE_NAME, line no: 61, 1.1797500916796242, insert, 0.9836734693877551, 0.0, 0.14893617021276595
"Please enter 4 numbers separated by spaces > ",STRING_LITERAL, line no: 63,num1,SIMPLE_NAME, line no: 60, 1.1610757772668663, insert, 0.9836734693877551, 0.0, 0.06382978723404255
"Please enter 4 numbers separated by spaces > ",STRING_LITERAL, line no: 63,num2,SIMPLE_NAME, line no: 60, 1.1610757772668663, insert, 0.9836734693877551, 0.0, 0.06382978723404255
"Please enter 4 numbers separated by spaces > ",STRING_LITERAL, line no: 63,num3,SIMPLE_NAME, line no: 60, 1.1610757772668663, insert, 0.9836734693877551, 0.0, 0.06382978723404255
"Please enter 4 numbers separated by spaces > ",STRING_LITERAL, line no: 63,num4,SIMPLE_NAME, line no: 61, 1.1610757772668663, insert, 0.9836734693877551, 0.0, 0.06382978723404255
"Please enter 4 numbers separated by spaces > ",STRING_LITERAL, line no: 63,num1.value,QUALIFIED_NAME, line no: 64, 1.1509243410867547, insert, 0.9918367346938776, 0.0, 0.10638297872340426
"Please enter 4 numbers separated by spaces > ",STRING_LITERAL, line no: 63,num2.value,QUALIFIED_NAME, line no: 65, 1.1509243410867547, insert, 0.9918367346938776, 0.0, 0.10638297872340426
"Please enter 4 numbers separated by spaces > ",STRING_LITERAL, line no: 63,num3.value,QUALIFIED_NAME, line no: 66, 1.1509243410867547, insert, 0.9918367346938776, 0.0, 0.10638297872340426
"Please enter 4 numbers separated by spaces > ",STRING_LITERAL, line no: 63,num4.value,QUALIFIED_NAME, line no: 67, 1.1509243410867547, insert, 0.9918367346938776, 0.0, 0.10638297872340426
scanner,SIMPLE_NAME, line no: 64,mainClass.scanner,QUALIFIED_NAME, line no: 51, 1.0587871062195195, insert, 0.06147540983606557, 1.0, 0.4117647058823529
scanner,SIMPLE_NAME, line no: 65,mainClass.scanner,QUALIFIED_NAME, line no: 51, 1.0587871062195195, insert, 0.06147540983606557, 1.0, 0.4117647058823529
scanner,SIMPLE_NAME, line no: 66,mainClass.scanner,QUALIFIED_NAME, line no: 51, 1.0587871062195195, insert, 0.06147540983606557, 1.0, 0.4117647058823529
scanner,SIMPLE_NAME, line no: 67,mainClass.scanner,QUALIFIED_NAME, line no: 51, 1.0587871062195195, insert, 0.06147540983606557, 1.0, 0.4117647058823529
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 70, 1.0029659252574001, insert, 0.08298755186721991, 1.5, 0.4838709677419355
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,num_smallest.value=num3.value; ,EXPRESSION_STATEMENT, line no: 78, 0.998816547664039, insert, 0.0912863070539419, 1.5, 0.4838709677419355
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 71, 0.9966035726421354, insert, 0.08298755186721991, 1.0, 0.5675675675675675
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,if (args.length > 0) {   mainClass.scanner=new java.util.Scanner(args[0]); }  else {   mainClass.scanner=new java.util.Scanner(System.in); } ,IF_STATEMENT, line no: 50, 0.9952344240770199, insert, 0.782608695652174, 0.0, 0.19858156028368795
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,num_smallest.value=num2.value; ,EXPRESSION_STATEMENT, line no: 74, 0.9946671700706781, insert, 0.08713692946058091, 1.5, 0.4838709677419355
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 0.9726803273881418, insert, 0.782608695652174, 0.0, 0.16176470588235295
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 70, 0.9121817953570797, insert, 0.08298755186721991, 0.6000000000000001, 0.4838709677419355
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 70, 0.9121817953570797, insert, 0.08298755186721991, 0.6000000000000001, 0.4838709677419355
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 70, 0.9121817953570797, insert, 0.08298755186721991, 0.6000000000000001, 0.4838709677419355
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,num_smallest.value=num3.value; ,EXPRESSION_STATEMENT, line no: 78, 0.9080324177637187, insert, 0.0912863070539419, 0.6000000000000001, 0.4838709677419355
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,num_smallest.value=num3.value; ,EXPRESSION_STATEMENT, line no: 78, 0.9080324177637187, insert, 0.0912863070539419, 0.6000000000000001, 0.4838709677419355
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,num_smallest.value=num3.value; ,EXPRESSION_STATEMENT, line no: 78, 0.9080324177637187, insert, 0.0912863070539419, 0.6000000000000001, 0.4838709677419355
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,num_smallest.value=num2.value; ,EXPRESSION_STATEMENT, line no: 74, 0.9038830401703577, insert, 0.08713692946058091, 0.6000000000000001, 0.4838709677419355
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,num_smallest.value=num2.value; ,EXPRESSION_STATEMENT, line no: 74, 0.9038830401703577, insert, 0.08713692946058091, 0.6000000000000001, 0.4838709677419355
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,num_smallest.value=num2.value; ,EXPRESSION_STATEMENT, line no: 74, 0.9038830401703577, insert, 0.08713692946058091, 0.6000000000000001, 0.4838709677419355
scanner,SIMPLE_NAME, line no: 64,java.util.Scanner,QUALIFIED_NAME, line no: 51, 0.8885918836255675, insert, 0.06557377049180328, 0.0, 0.35294117647058826
scanner,SIMPLE_NAME, line no: 65,java.util.Scanner,QUALIFIED_NAME, line no: 51, 0.8885918836255675, insert, 0.06557377049180328, 0.0, 0.35294117647058826
scanner,SIMPLE_NAME, line no: 66,java.util.Scanner,QUALIFIED_NAME, line no: 51, 0.8885918836255675, insert, 0.06557377049180328, 0.0, 0.35294117647058826
scanner,SIMPLE_NAME, line no: 67,java.util.Scanner,QUALIFIED_NAME, line no: 51, 0.8885918836255675, insert, 0.06557377049180328, 0.0, 0.35294117647058826
String,SIMPLE_NAME, line no: 63,println,SIMPLE_NAME, line no: 56, 0.8685047569336524, insert, 0.2163265306122449, 0.0, 0.42857142857142855
num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 82,value=i; ,EXPRESSION_STATEMENT, line no: 7, 0.8556368324754547, insert, 0.17391304347826086, 0.3333333333333333, 0.25806451612903225
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 0.8300849171405991, insert, 0.5652173913043478, 0.0, 0.25
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 0.7721639363985614, insert, 0.5217391304347826, 0.0, 0.23529411764705882
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 0.6727760421803842, insert, 0.21161825726141079, 0.0, 0.36666666666666664
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 0.6727760421803842, insert, 0.21161825726141079, 0.0, 0.36666666666666664
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 0.6727760421803842, insert, 0.21161825726141079, 0.0, 0.36666666666666664
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 0.6727760421803842, insert, 0.21161825726141079, 0.0, 0.36666666666666664
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 0.6664800448517456, insert, 0.05394190871369295, 0.5, 0.36
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 0.6664800448517456, insert, 0.05394190871369295, 0.5, 0.36
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 0.6664800448517456, insert, 0.05394190871369295, 0.5, 0.36
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 0.6664800448517456, insert, 0.05394190871369295, 0.5, 0.36
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 0.6565403435469936, insert, 0.06224066390041494, 0.5, 0.34615384615384615
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 0.6565403435469936, insert, 0.06224066390041494, 0.5, 0.34615384615384615
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 0.6565403435469936, insert, 0.06224066390041494, 0.5, 0.34615384615384615
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 0.6565403435469936, insert, 0.06224066390041494, 0.5, 0.34615384615384615
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,if (args.length > 0) {   mainClass.scanner=new java.util.Scanner(args[0]); }  else {   mainClass.scanner=new java.util.Scanner(System.in); } ,IF_STATEMENT, line no: 50, 0.6020502415249848, insert, 0.21161825726141079, 0.5, 0.15602836879432624
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,if (args.length > 0) {   mainClass.scanner=new java.util.Scanner(args[0]); }  else {   mainClass.scanner=new java.util.Scanner(System.in); } ,IF_STATEMENT, line no: 50, 0.6020502415249848, insert, 0.21161825726141079, 0.5, 0.15602836879432624
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,if (args.length > 0) {   mainClass.scanner=new java.util.Scanner(args[0]); }  else {   mainClass.scanner=new java.util.Scanner(System.in); } ,IF_STATEMENT, line no: 50, 0.6020502415249848, insert, 0.21161825726141079, 0.5, 0.15602836879432624
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,if (args.length > 0) {   mainClass.scanner=new java.util.Scanner(args[0]); }  else {   mainClass.scanner=new java.util.Scanner(System.in); } ,IF_STATEMENT, line no: 50, 0.6020502415249848, insert, 0.21161825726141079, 0.5, 0.15602836879432624
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,System.out.println(mainClass.output); ,EXPRESSION_STATEMENT, line no: 56, 0.5852987991921418, insert, 0.21161825726141079, 1.0, 0.24324324324324326
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,value=i; ,EXPRESSION_STATEMENT, line no: 7, 0.5689784627543963, insert, 0.016597510373443983, 0.3333333333333333, 0.26666666666666666
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,value=i; ,EXPRESSION_STATEMENT, line no: 7, 0.5689784627543963, insert, 0.016597510373443983, 0.3333333333333333, 0.26666666666666666
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,value=i; ,EXPRESSION_STATEMENT, line no: 7, 0.5689784627543963, insert, 0.016597510373443983, 0.3333333333333333, 0.26666666666666666
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,value=i; ,EXPRESSION_STATEMENT, line no: 7, 0.5689784627543963, insert, 0.016597510373443983, 0.3333333333333333, 0.26666666666666666
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,System.out.println(mainClass.output); ,EXPRESSION_STATEMENT, line no: 56, 0.530972656705297, insert, 0.21161825726141079, 0.0, 0.2894736842105263
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,System.out.println(mainClass.output); ,EXPRESSION_STATEMENT, line no: 56, 0.530972656705297, insert, 0.21161825726141079, 0.0, 0.2894736842105263
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,System.out.println(mainClass.output); ,EXPRESSION_STATEMENT, line no: 56, 0.530972656705297, insert, 0.21161825726141079, 0.0, 0.2894736842105263
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,System.out.println(mainClass.output); ,EXPRESSION_STATEMENT, line no: 56, 0.530972656705297, insert, 0.21161825726141079, 0.0, 0.2894736842105263
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,if (args.length > 0) {   mainClass.scanner=new java.util.Scanner(args[0]); }  else {   mainClass.scanner=new java.util.Scanner(System.in); } ,IF_STATEMENT, line no: 50, 0.4607116806000139, insert, 0.21161825726141079, 0.0, 0.2198581560283688
num1.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 64,output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 71, 0.4297061853417532, insert, 0.08298755186721991, 0.6000000000000001, 0.20588235294117646
num2.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 65,output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 71, 0.4297061853417532, insert, 0.08298755186721991, 0.6000000000000001, 0.20588235294117646
num3.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 66,output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 71, 0.4297061853417532, insert, 0.08298755186721991, 0.6000000000000001, 0.20588235294117646
num4.value=scanner.nextInt(); ,EXPRESSION_STATEMENT, line no: 67,output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 71, 0.4297061853417532, insert, 0.08298755186721991, 0.6000000000000001, 0.20588235294117646
output+=(String.format("%d is the smallest\n" num_smallest.value)); ,EXPRESSION_STATEMENT, line no: 83,value=i; ,EXPRESSION_STATEMENT, line no: 7, 0.4052423677021229, insert, 0.17391304347826086, 0.3333333333333333, 0.10294117647058823
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,mainClass.exec(); ,EXPRESSION_STATEMENT, line no: 55, 0.40324320197301244, insert, 0.21161825726141079, 0.0, 0.16216216216216217
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,mainClass.scanner=new java.util.Scanner(System.in); ,EXPRESSION_STATEMENT, line no: 53, 0.36149905919895303, insert, 0.06224066390041494, 0.0, 0.28378378378378377
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,mainClass.scanner=new java.util.Scanner(args[0]); ,EXPRESSION_STATEMENT, line no: 51, 0.3399606986926811, insert, 0.05394190871369295, 0.0, 0.2702702702702703
"Please enter 4 numbers separated by spaces > ",STRING_LITERAL, line no: 63,num_smallest.value,QUALIFIED_NAME, line no: 70, 0.3389612429597772, insert, 0.08979591836734693, 0.0, 0.19148936170212766
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,num_smallest.value=num1.value; ,EXPRESSION_STATEMENT, line no: 70, 0.3358809551548255, insert, 0.08298755186721991, 0.0, 0.20270270270270271
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,num_smallest.value=num3.value; ,EXPRESSION_STATEMENT, line no: 78, 0.3317315775614645, insert, 0.0912863070539419, 0.0, 0.20270270270270271
output+=(String.format("Please enter 4 numbers separated by spaces > ")); ,EXPRESSION_STATEMENT, line no: 62,num_smallest.value=num2.value; ,EXPRESSION_STATEMENT, line no: 74, 0.3275821999681035, insert, 0.08713692946058091, 0.0, 0.20270270270270271
